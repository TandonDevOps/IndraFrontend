{"version":3,"sources":["components/images/Sandpile.jpg","components/images/sandpile_2.png","components/images/mendelobrot_sq.jpg","components/Header.js","components/Layout.js","components/Carousel.js","config.js","components/Home.js","components/WIP.js","components/ModelInputField.js","components/PageLoader.js","components/ModelDetail.js","components/CardWrapper.js","components/PopulationGraph.js","components/PopulationBarGraph.js","components/ScatterPlot.js","components/Debugger.js","components/ModelStatusBox.js","components/SourceCodeViewer.js","components/RunModelButton.js","components/LogsViewer.js","components/ActionMenu.js","components/NotFoundPage.js","components/ErrorCatching.js","App.js","darkTheme/theme.js","darkTheme/ThemeContext.js","index.js"],"names":["module","exports","Header","Navbar","bg","expand","Nav","className","Link","as","to","Toggle","aria-controls","Collapse","id","href","Layout","props","children","Container","rel","defaultProps","Carousel","renderImage","dots","speed","autoplay","data","settings","arrows","infinite","slidesToShow","slidesToScroll","fade","areAllImagesLoaded","imagesLoadedStatus","state","i","length","map","item","index","key","title","src","image","style","display","alt","data-toggle","data-placement","onLoad","imagesLoadedStatusCopy","slice","setState","Array","fill","this","Component","API_URL","process","REACT_APP_API_URL","config","Home","renderChooseModelProp","allItems","loadingData","apiFailed","dataForCarousel","sandpileImg","sandpile1Img","mandelobrotImg","api_server","history","document","axios","get","res","localStorage","setItem","JSON","stringify","push","Dimmer","active","inverted","Loader","size","Col","sm","lg","Dropdown","variant","Menu","Object","keys","OverlayTrigger","name","placement","overlay","Tooltip","doc","pathname","modelID","menuId","source","graph","cols","span","offset","WIP","textAlign","ModelInputField","label","type","placeholder","propChange","error","htmlFor","autoFocus","fontSize","onChange","color","PageDimmer","apiServer","ModelDetail","states","modelDetails","forEach","detailName","prevState","defaultVal","val","errors","errorMessage","disabledButton","errorSubmit","ans","propChanged","e","target","value","valid","checkValidity","parseInt","lowval","hival","atype","handleSubmit","event","a","preventDefault","put","itemId","envFile","execKey","exec_key","toString","renderHeader","fontWeight","renderSubmitButton","disabled","onClick","goback","goBack","initialModelDetailState","getInitialModelDetails","properties","initialState","location","match","undefined","params","modalDetails","parse","getItem","filter","err","PageLoader","question","CardWrapper","Card","Body","PopulationGraph","colors","thisColor","env","pop_hist","pops","group","iGroup","members","attrs","member","iMember","width","height","PopulationBarGraph","dataset","datum","totalSum","reduce","prev","curr","ScatterPlot","markerMap","tree","square","person","deceased","circle","default","pointStyle","markerProp","marker","pos","Debugger","ModelStatusBox","autoBind","msg","nextProps","React","SourceCodeViewer","code","language","docco","RunModelButton","sendNumPeriods","handleRunPeriod","LogsViewer","whiteSpace","user","debug","API_SERVER","CLEAR_REGISTRY_API","ActionMenu","viewSource","splitSource","split","filename","periodNum","handleClick","loadingSourceCode","loadingDebugger","loadingScatter","loadingPopulation","loadingLogs","loadingBar","activeDisplay","EXECUTION_KEY","envFileWithExecutionKey","execution_key","String","user_msgs","timeout","m","Promise","r","setTimeout","continuousRun","continuousRunDisabled","initLoading","console","log","stopRun","MenuItem","action","text","defaultGraph","ListGroup","Item","renderMenuItem","sourceCode","renderMapItem","menu","func","ref","modelStatusBoxElement","Status","render","staticContext","status","NotFoundPage","ErrorCatching","Wrapper","styled","theme","background","body","IndraRoutes","exact","path","component","withTheme","backgroundColor","light","dark","textColor","ThemeToggleContext","createContext","IOSSwitch","withStyles","root","padding","margin","spacing","switchBase","transform","palette","common","white","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","MyThemeProvider","useState","mode","checkedB","themeState","setThemeState","div","toggle","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f486bd2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sandpile.090bc1a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sandpile_2.d38b3fb1.png\";","module.exports = __webpack_public_path__ + \"static/media/mendelobrot_sq.875dd8b8.jpg\";","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst home = '/';\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link as={Link} to={home}>\r\n          HOME\r\n        </Nav.Link>\r\n      </Nav>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            href=\"https://gcallah.github.io/indras_net/index.html\"\r\n          >\r\n            ABOUT\r\n          </Nav.Link>\r\n          <Nav.Link href=\"https://github.com/gcallah/indras_net/\">\r\n            SOURCE CODE\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport PropType from 'prop-types';\r\nimport Header from './Header';\r\n\r\nfunction Layout(props) {\r\n  const { children } = props;\r\n  return (\r\n    <Container>\r\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\" />\r\n      <Header />\r\n      {children}\r\n    </Container>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropType.shape(),\r\n};\r\n\r\nLayout.defaultProps = {\r\n  children: {},\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Carousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const imagesLoadedStatus = new Array(props.data.length).fill(false);\r\n    this.state = {\r\n      imagesLoadedStatus,\r\n    };\r\n  }\r\n\r\n  renderImage = () => {\r\n    const {\r\n      dots, speed, autoplay, className, data,\r\n    } = this.props;\r\n    const settings = {\r\n      arrows: false,\r\n      dots,\r\n      infinite: true,\r\n      speed,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay,\r\n      fade: true,\r\n      className,\r\n    };\r\n    const areAllImagesLoaded = () => {\r\n      const { imagesLoadedStatus } = this.state;\r\n      for (let i = 0; i < imagesLoadedStatus.length; i += 1) {\r\n        if (!imagesLoadedStatus[i]) return false;\r\n      }\r\n      return true;\r\n    };\r\n    return (\r\n      <div>\r\n        <Slider\r\n          {...settings} /* eslint-disable-line react/jsx-props-no-spreading */\r\n        >\r\n          {data.map((item, index) => (\r\n            <div key={item.title}>\r\n              {areAllImagesLoaded() ? null : <div>Loading...</div>}\r\n              <img\r\n                src={item.image}\r\n                style={areAllImagesLoaded() ? {} : { display: 'none' }}\r\n                className=\"rounded-circle carousel\"\r\n                alt=\"Responsive Model\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={item.title}\r\n                onLoad={() => {\r\n                  const { imagesLoadedStatus } = this.state;\r\n                  const imagesLoadedStatusCopy = imagesLoadedStatus.slice();\r\n                  imagesLoadedStatusCopy[index] = true;\r\n                  this.setState({\r\n                    imagesLoadedStatus: imagesLoadedStatusCopy,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderImage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCarousel.propTypes = {\r\n  dots: PropTypes.bool,\r\n  speed: PropTypes.number,\r\n  autoplay: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n  })),\r\n};\r\n\r\nCarousel.defaultProps = {\r\n  dots: false,\r\n  speed: 1000,\r\n  autoplay: false,\r\n  className: '',\r\n  data: [],\r\n};\r\n\r\nexport default Carousel;\r\n","/**\r\n * Default API_URL of Indra would be production URL.\r\n * If the user has set the environment variable - REACT_APP_API_URL -\r\n * then that value will be set a the API_URL.\r\n * One of the ways to set REACT_APP_API_URL is by running the frontend using\r\n * the below command -\r\n *        REACT_APP_API_URL=http://127.0.0.1:8000/ npm start\r\n * (Make sure the backend is running at http://127.0.0.1:8000/)\r\n *\r\n *\r\n * Note: All environment variables in create-react-app setup needs to have\r\n * the prefix REACT_APP_\r\n * For more infromation - https://create-react-app.dev/docs/adding-custom-environment-variables/\r\n */\r\nlet API_URL = 'https://indraabm.pythonanywhere.com/';\r\n\r\nif (process.env.REACT_APP_API_URL) {\r\n  API_URL = process.env.REACT_APP_API_URL;\r\n}\r\n\r\nconst config = { API_URL };\r\n\r\nexport default config;\r\n","import React, { Component } from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Carousel from './Carousel';\r\nimport sandpileImg from './images/Sandpile.jpg';\r\nimport sandpile1Img from './images/sandpile_2.png';\r\nimport mandelobrotImg from './images/mendelobrot_sq.jpg';\r\nimport './styles.css';\r\nimport config from '../config';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allItems: [],\r\n      loadingData: false,\r\n      apiFailed: false,\r\n      dataForCarousel: [\r\n        { image: sandpileImg, title: 'by Seth Terashima' },\r\n        { image: sandpile1Img, title: 'by Colt Browninga' },\r\n        { image: mandelobrotImg, title: 'by Adam Majewski' },\r\n      ],\r\n    };\r\n    this.api_server = config.API_URL;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { history } = this.props;\r\n    try {\r\n      this.setState({ loadingData: true });\r\n      document.title = 'Home';\r\n      const res = await axios.get(`${this.api_server}models?active=true`);\r\n      this.setState({ allItems: res.data, loadingData: false });\r\n      // setting this so model properties like name, graph etc are access\r\n      // in all tabs of a browser\r\n      localStorage.setItem('indra_model_details', JSON.stringify(res.data));\r\n    } catch (e) {\r\n      history.push('/errorCatching');\r\n    }\r\n  }\r\n\r\n  renderChooseModelProp = () => (\r\n    <h1 className=\"small-header\">Please choose a model: </h1>\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      loadingData, dataForCarousel, allItems, apiFailed,\r\n    } = this.state;\r\n    if (apiFailed) {\r\n      return <h1>404 Error</h1>;\r\n    }\r\n    if (loadingData) {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"massive\">Loading...</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"margin-bottom-80\">\r\n          <h1 className=\"text-left\">Indra Agent-Based Modeling System</h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Col sm={12} lg={4} className=\"mb-5\">\r\n            {this.renderChooseModelProp()}\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"outline-dark\" id=\"dropdown-basic\">\r\n                Choose...\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                {Object.keys(allItems).map((item) => (!('active' in allItems[item])\r\n                  || allItems[item].active === true ? (\r\n                    <OverlayTrigger\r\n                      key={`${allItems[item].name}-tooltip`}\r\n                      placement=\"right\"\r\n                      overlay={<Tooltip>{allItems[item].doc}</Tooltip>}\r\n                    >\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/models/props/${allItems[item].modelID}`,\r\n                          state: {\r\n                            menuId: allItems[item].modelID,\r\n                            name: allItems[item].name,\r\n                            source: allItems[item].source,\r\n                            graph: allItems[item].graph,\r\n                          },\r\n                        }}\r\n                        className=\"link text-dark dropdown-item\"\r\n                        key={allItems[item].name}\r\n                      >\r\n                        {allItems[item].name}\r\n                      </Link>\r\n                    </OverlayTrigger>\r\n                  ) : null))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n          <Col sm={12} lg={{ cols: 6, span: 6, offset: 2 }}>\r\n            <Carousel\r\n              speed={5000}\r\n              autoplay\r\n              className=\"col\"\r\n              data={dataForCarousel}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  history: PropTypes.shape(),\r\n};\r\n\r\nHome.defaultProps = {\r\n  history: {},\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\n\r\nclass WIP extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadingData: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loadingData: true });\r\n    document.title = 'Indra | Work in Progress';\r\n    this.setState({ loadingData: false });\r\n  }\r\n\r\n  render() {\r\n    const { loadingData } = this.state;\r\n    if (loadingData) {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"massive\">Loading...</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <br />\r\n        <h1 style={{ textAlign: 'center' }}>\r\n          Welcome to the Indra ABM platform!\r\n        </h1>\r\n        <br />\r\n        <br />\r\n\r\n        <p>We will have this model running soon!</p>\r\n\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WIP;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ModelInputField(props) {\r\n  const {\r\n    label, name, type, placeholder, propChange, error,\r\n  } = props;\r\n  return (\r\n    <div key={label} className=\"form-group\">\r\n      <div>\r\n        <label\r\n          htmlFor={name}\r\n          className=\"col-sm-4 col-md-4 col-lg-4\"\r\n          key={label}\r\n        >\r\n          {label}\r\n          {' '}\r\n          {' '}\r\n        </label>\r\n        <input\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus\r\n          id={name}\r\n          type={type}\r\n          className=\"col-sm-2 col-md-2 col-lg-2\"\r\n          style={{ fontSize: '15pt' }}\r\n          placeholder={placeholder}\r\n          onChange={propChange} /* style={{width: 60}} */\r\n          name={name}\r\n        />\r\n        <span className=\"col-sm-6 col-md-6 col-lg-6\" style={{ color: 'red', fontSize: 12 }}>\r\n          {error}\r\n        </span>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModelInputField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.number,\r\n  propChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n};\r\n\r\nModelInputField.defaultProps = {\r\n  label: '',\r\n  name: '',\r\n  type: '',\r\n  placeholder: 0,\r\n  propChange() {},\r\n  error: '',\r\n};\r\n\r\nexport default ModelInputField;\r\n","import React from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\n\r\nfunction PageDimmer() {\r\n  return (\r\n    <Dimmer active inverted>\r\n      <Loader size=\"massive\">Loading...</Loader>\r\n    </Dimmer>\r\n  );\r\n}\r\n\r\nexport default PageDimmer;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport ModelInputField from './ModelInputField';\r\nimport PageLoader from './PageLoader';\r\nimport './styles.css';\r\nimport config from '../config';\r\n\r\nconst apiServer = `${config.API_URL}models/props/`;\r\n\r\nclass ModelDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const initialModelDetailState = this.getInitialModelDetails();\r\n    this.state = {\r\n      modelDetails: {},\r\n      loadingData: false,\r\n      disabledButton: false,\r\n      ...initialModelDetailState,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { history } = this.props;\r\n    const { menuId } = this.state;\r\n    try {\r\n      document.title = 'Indra | Property';\r\n      this.setState({ loadingData: true });\r\n      const properties = await axios.get(\r\n        `${apiServer}${menuId}`,\r\n      );\r\n      this.setState({ modelDetails: properties.data });\r\n      this.states(properties.data);\r\n      this.errors(properties.data);\r\n      this.setState({ loadingData: false });\r\n    } catch (e) {\r\n      history.push('/errorCatching');\r\n    }\r\n  }\r\n\r\n  getInitialModelDetails() {\r\n    const { location, history, match } = this.props;\r\n    let initialState;\r\n    try {\r\n      const { state } = location;\r\n      if (state === undefined) {\r\n      // this is undefined when someone tried to open the model in a new tab from the home screen.\r\n        const menuId = parseInt(match.params.id, 10);\r\n        const modalDetails = JSON.parse(localStorage.getItem('indra_model_details')).filter((item) => item['model ID'] === menuId)[0];\r\n        initialState = {\r\n          menuId,\r\n          name: modalDetails.name,\r\n          source: modalDetails.source,\r\n          graph: modalDetails.graph,\r\n        };\r\n      } else {\r\n        initialState = state;\r\n      }\r\n    } catch (err) {\r\n      history.push('/errorCatching');\r\n    }\r\n    return initialState;\r\n  }\r\n\r\n  states = (data) => {\r\n    const { modelDetails } = this.state;\r\n    // loop over objects in data and create object in this.state\r\n    Object.keys(modelDetails).forEach((detailName) => {\r\n      this.setState((prevState) => ({\r\n        modelDetails: {\r\n          ...prevState.modelDetails,\r\n          [detailName]: {\r\n            ...prevState.modelDetails[detailName],\r\n            defaultVal: data[detailName].val,\r\n          },\r\n        },\r\n      }));\r\n      // Object.keys(modelDetails).forEach((item) => this.setState({ [item]: data[item] }));\r\n    });\r\n  };\r\n\r\n  errors = () => {\r\n    const { modelDetails } = this.state;\r\n    Object.keys(modelDetails).forEach((item) => this.setState((prevState) => ({\r\n      modelDetails: {\r\n        ...prevState.modelDetails,\r\n        [item]: {\r\n          ...prevState.modelDetails[item],\r\n          errorMessage: '',\r\n          disabledButton: false,\r\n        },\r\n      },\r\n    })));\r\n  };\r\n\r\n  errorSubmit = () => {\r\n    const { modelDetails } = this.state;\r\n    let ans = false;\r\n    Object.keys(modelDetails).forEach((item) => {\r\n      ans = ans || modelDetails[item].disabledButton;\r\n    });\r\n    return ans;\r\n  };\r\n\r\n  propChanged = (e) => {\r\n    const { modelDetails } = this.state;\r\n    const { name, value } = e.target;\r\n    const valid = this.checkValidity(name, value);\r\n    modelDetails[name].disabledButton = true;\r\n\r\n    if (valid === 1) {\r\n      modelDetails[name].val = parseInt(value, 10);\r\n      modelDetails[name].errorMessage = '';\r\n      modelDetails[name].disabledButton = false;\r\n      this.setState({ modelDetails });\r\n    } else if (valid === -1) {\r\n      modelDetails[name].errorMessage = '**Wrong Input Type';\r\n      modelDetails[name].val = modelDetails[name].defaultVal;\r\n      this.setState({ modelDetails });\r\n    } else {\r\n      modelDetails[\r\n        name\r\n      ].errorMessage = `**Please input a number between ${modelDetails[name].lowval} and ${modelDetails[name].hival}.`;\r\n      modelDetails[name].val = modelDetails[name].defaultVal;\r\n      this.setState({ modelDetails });\r\n    }\r\n\r\n    this.setState({ disabledButton: this.errorSubmit() });\r\n  };\r\n\r\n  checkValidity = (name, value) => {\r\n    const { modelDetails } = this.state;\r\n    if (\r\n      value <= modelDetails[name].hival\r\n      && value >= modelDetails[name].lowval\r\n    ) {\r\n      if (modelDetails[name].atype === 'INT' && !!(value % 1) === false) {\r\n        return 1;\r\n      }\r\n      if (modelDetails[name].atype === 'DBL') {\r\n        return 1;\r\n      }\r\n\r\n      return -1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      modelDetails, menuId, name, source, graph,\r\n    } = this.state;\r\n    const { history } = this.props;\r\n    try {\r\n      // res gives us back the model returned from put props\r\n      const res = await axios.put(\r\n        apiServer + menuId,\r\n        modelDetails,\r\n      );\r\n      const itemId = menuId;\r\n      const envFile = res.data;\r\n      const execKey = res.data.exec_key;\r\n      history.push({\r\n        pathname: `/models/menu/${itemId.toString(10)}`,\r\n        state: {\r\n          envFile,\r\n          name,\r\n          source,\r\n          graph,\r\n          execKey,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      history.push('/errorCatching');\r\n    }\r\n  };\r\n\r\n  renderHeader = () => {\r\n    const { name } = this.state;\r\n    return (\r\n      <h1 className=\"header\" style={{ textAlign: 'center', fontWeight: '200' }}>\r\n        {`Please set the parameters for the ${name} model`}\r\n      </h1>\r\n    );\r\n  };\r\n\r\n  renderSubmitButton = () => {\r\n    const { disabledButton } = this.state;\r\n    // console.log(this.state);\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        disabled={disabledButton}\r\n        onClick={!disabledButton ? this.handleSubmit : null}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        Submit\r\n      </button>\r\n    );\r\n  };\r\n\r\n  goback = () => {\r\n    const { history } = this.props;\r\n    history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { loadingData, modelDetails } = this.state;\r\n    if (loadingData) {\r\n      return <PageLoader />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h1 className=\"margin-top-60\"> </h1>\r\n        {this.renderHeader()}\r\n        <br />\r\n        <br />\r\n        <form>\r\n          <div className=\"container\">\r\n            {Object.keys(modelDetails).map((item) => {\r\n              if ('question' in modelDetails[item]) {\r\n                return (\r\n                  <ModelInputField\r\n                    label={modelDetails[item].question}\r\n                    type={modelDetails[item].atype}\r\n                    placeholder={modelDetails[item].val}\r\n                    error={modelDetails[item].errorMessage}\r\n                    propChange={this.propChanged}\r\n                    name={item}\r\n                    key={item}\r\n                  />\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </div>\r\n        </form>\r\n        <br />\r\n        <br />\r\n        {this.renderSubmitButton()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModelDetail.propTypes = {\r\n  history: PropTypes.shape(),\r\n  location: PropTypes.shape({\r\n    state: PropTypes.shape({\r\n      menuId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      name: PropTypes.string,\r\n      source: PropTypes.string,\r\n      graph: PropTypes.string,\r\n    }),\r\n  }),\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  }),\r\n};\r\n\r\nModelDetail.defaultProps = {\r\n  history: {},\r\n  location: {\r\n    state: {},\r\n  },\r\n  match: {\r\n    params: {\r\n      id: '',\r\n    },\r\n  },\r\n};\r\n\r\nexport default ModelDetail;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport propTypes from 'prop-types';\r\n\r\nconst CardWrapper = ({ title, children }) => (\r\n  <Card>\r\n    <h5\r\n      style={{ textAlign: 'center', fontSize: 16 }}\r\n      className=\"card-header bg-primary text-white\"\r\n    >\r\n      {title}\r\n    </h5>\r\n    <Card.Body>{children}</Card.Body>\r\n  </Card>\r\n);\r\n\r\nCardWrapper.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  children: propTypes.node.isRequired,\r\n};\r\n\r\nexport default CardWrapper;\r\n","import React from 'react';\r\nimport { LineChart } from 'react-chartkick';\r\nimport 'chart.js';\r\nimport PropType from 'prop-types';\r\nimport CardWrapper from './CardWrapper';\r\n\r\nfunction PopulationGraph(props) {\r\n  const NUM_COLORS = 7;\r\n  const colors = ['red', 'green', 'blue', 'black', 'purple', 'magenta', 'orange'];\r\n  let thisColor = 0;\r\n  const { loadingData, envFile } = props;\r\n  if (loadingData) {\r\n    const data = [];\r\n    const env = props.envFile.pop_hist.pops;\r\n    // populate 'data' array with groups from 'pops'\r\n    // and their respective values\r\n    Object.keys(env).forEach((group, iGroup) => {\r\n      data.push({\r\n        name: group,\r\n        // color: colors[thisColor % NUM_COLORS],\r\n        color: envFile.members[group]\r\n          ? envFile.members[group].attrs.color : colors[thisColor % NUM_COLORS],\r\n        data: {},\r\n      });\r\n      // modify individual 'data' dictionary of each pops\r\n      // group by copying over value\r\n      Object.keys(env[group]).forEach((member, iMember) => {\r\n        data[iGroup].data[member] = env[group][iMember];\r\n      });\r\n      thisColor += 1;\r\n    });\r\n    return (\r\n      <CardWrapper title=\"Population Graph\">\r\n        <LineChart data={data} width=\"600px\" height=\"600px\" />\r\n      </CardWrapper>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nPopulationGraph.propTypes = {\r\n  loadingData: PropType.bool,\r\n  envFile: PropType.shape(),\r\n};\r\n\r\nPopulationGraph.defaultProps = {\r\n  loadingData: true,\r\n  envFile: {},\r\n};\r\n\r\nexport default PopulationGraph;\r\n","import React from 'react';\r\nimport { ColumnChart } from 'react-chartkick';\r\nimport 'chart.js';\r\nimport PropType from 'prop-types';\r\nimport CardWrapper from './CardWrapper';\r\n\r\nfunction PopulationBarGraph(props) {\r\n  const NUM_COLORS = 7;\r\n  const colors = [\r\n    'red',\r\n    'green',\r\n    'blue',\r\n    'black',\r\n    'purple',\r\n    'magenta',\r\n    'orange',\r\n  ];\r\n  let thisColor = 0;\r\n  let dataset = [];\r\n  const { loadingData, envFile } = props;\r\n  if (loadingData) {\r\n    const data = [];\r\n    const env = props.envFile.pop_hist.pops;\r\n    // populate 'data' array with groups from 'pops'\r\n    // and their respective values\r\n    Object.keys(env).forEach((group, iGroup) => {\r\n      data.push({\r\n        name: group,\r\n        // color: colors[thisColor % NUM_COLORS],\r\n        color: envFile.members[group]\r\n          ? envFile.members[group].attrs.color\r\n          : colors[thisColor % NUM_COLORS],\r\n        data: {},\r\n      });\r\n      // modify individual 'data' dictionary of each pops\r\n      // group by copying over value\r\n      Object.keys(env[group]).forEach((member, iMember) => {\r\n        data[iGroup].data[member] = env[group][iMember];\r\n      });\r\n      thisColor += 1;\r\n      dataset = data.map((datum) => {\r\n        const totalSum = Object.keys(datum.data)\r\n          .map((key) => datum.data[key])\r\n          .reduce((prev, curr) => prev + curr, 0);\r\n        return [datum.name, totalSum];\r\n      });\r\n    });\r\n    return (\r\n      <CardWrapper title=\"Population Bar Graph\">\r\n        <ColumnChart data={dataset} width=\"600px\" height=\"600px\" />\r\n      </CardWrapper>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nPopulationBarGraph.propTypes = {\r\n  loadingData: PropType.bool,\r\n  envFile: PropType.shape(),\r\n};\r\n\r\nPopulationBarGraph.defaultProps = {\r\n  loadingData: true,\r\n  envFile: {},\r\n};\r\n\r\nexport default PopulationBarGraph;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { ScatterChart } from 'react-chartkick';\r\nimport 'chart.js';\r\nimport PropTypes from 'prop-types';\r\nimport CardWrapper from './CardWrapper';\r\n\r\nfunction ScatterPlot(props) {\r\n  const { loadingData, envFile, id } = props;\r\n  const pointStyles = [\r\n    'circle',\r\n    'cross',\r\n    'crossRot',\r\n    'dash',\r\n    'line',\r\n    'rect',\r\n    'rectRounded',\r\n    'rectRot',\r\n    'star',\r\n    'triangle',\r\n  ];\r\n  const markerMap = {\r\n    tree: 'triangle',\r\n    square: 'rect',\r\n    person: 'circle',\r\n    deceased: 'circle',\r\n    circle: 'circle',\r\n    default: 'circle',\r\n  };\r\n  if (loadingData) {\r\n    const env = envFile.env.members;\r\n    const data = [];\r\n    const dataset = {\r\n      pointStyle: 'circle',\r\n    };\r\n    Object.keys(env).forEach((group, iGroup) => {\r\n      data.push({\r\n        name: env[group].name,\r\n        color: env[group].color,\r\n        data: [],\r\n      });\r\n      const markerProp = env[group].attrs.marker;\r\n      dataset.pointStyle = markerProp in markerMap ? markerMap[env[group].attrs.marker] : 'circle';\r\n      Object.keys(env[group].members).forEach((member) => {\r\n        if (env[group].members[member].pos !== null) {\r\n          data[iGroup].data.push(\r\n            env[group].members[member].pos,\r\n          );\r\n        }\r\n      });\r\n    });\r\n    return (\r\n      <CardWrapper title=\"Scatter Plot\">\r\n        <ScatterChart dataset={dataset} data={data} width=\"600px\" height=\"600px\" />\r\n      </CardWrapper>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nScatterPlot.propTypes = {\r\n  loadingData: PropTypes.bool,\r\n  envFile: PropTypes.shape(),\r\n  id: PropTypes.number,\r\n};\r\n\r\nScatterPlot.defaultProps = {\r\n  loadingData: true,\r\n  envFile: {},\r\n  id: 0,\r\n};\r\n\r\nexport default ScatterPlot;\r\n","import React from 'react';\r\nimport ReactJson from 'react-json-view';\r\nimport propTypes from 'prop-types';\r\nimport CardWrapper from './CardWrapper';\r\n\r\nfunction Debugger(props) {\r\n  const { envFile, loadingData } = props;\r\n  const data = envFile;\r\n  if (loadingData) {\r\n    return (\r\n      <CardWrapper title=\"Model Data\">\r\n        <ReactJson src={data} />\r\n      </CardWrapper>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nDebugger.propTypes = {\r\n  envFile: propTypes.shape(),\r\n  loadingData: propTypes.bool,\r\n};\r\n\r\nDebugger.defaultProps = {\r\n  envFile: {},\r\n  loadingData: true,\r\n};\r\n\r\nexport default Debugger;\r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ModelStatusBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n    const { msg, title } = this.props;\r\n    this.state = {\r\n      msg,\r\n      title,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.msg !== prevState.msg) {\r\n      return { msg: nextProps.msg };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { msg, title } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"card w-50 model-status\">\r\n          <h5\r\n            style={{ textAlign: 'center', fontSize: 16 }}\r\n            className=\"card-header bg-primary text-white\"\r\n          >\r\n            { title }\r\n          </h5>\r\n          <div className=\"card-body overflow-auto\">\r\n            <pre className=\"card-text\">\r\n              { msg }\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModelStatusBox.propTypes = {\r\n  msg: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\nModelStatusBox.defaultProps = {\r\n  msg: '',\r\n  title: '',\r\n};\r\n","import React from 'react';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport PropTypes from 'prop-types';\r\nimport CardWrapper from './CardWrapper';\r\n\r\nconst SourceCodeViewer = ({ loadingData, code }) => {\r\n  if (loadingData) {\r\n    return (\r\n      <CardWrapper title=\"Source Code\">\r\n        <SyntaxHighlighter language=\"python\" style={docco}>\r\n          {code}\r\n        </SyntaxHighlighter>\r\n      </CardWrapper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nSourceCodeViewer.propTypes = {\r\n  loadingData: PropTypes.bool,\r\n  code: PropTypes.string,\r\n};\r\n\r\nSourceCodeViewer.defaultProps = {\r\n  loadingData: true,\r\n  code: '',\r\n};\r\n\r\nexport default SourceCodeViewer;\r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class RunModelButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n\r\n    this.state = {\r\n      disabledButton: props.disabledButton,\r\n      errorMessage: props.errorMessage,\r\n      sendNumPeriods: props.sendNumPeriods,\r\n      handleRunPeriod: props.handleRunPeriod,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      disabledButton, sendNumPeriods, handleRunPeriod, errorMessage,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          disabled={disabledButton}\r\n          onClick={!disabledButton ? sendNumPeriods : null}\r\n          className=\"btn btn-success m-2\"\r\n        >\r\n          {'  '}\r\n          Run\r\n          {'  '}\r\n        </button>\r\n        {' '}\r\n        <span>model for</span>\r\n        {' '}\r\n        <input\r\n          type=\"INT\"\r\n          className=\"from-control m-2 number-input\"\r\n          style={{ width: '40px' }}\r\n          placeholder=\"10\"\r\n          onChange={handleRunPeriod}\r\n        />\r\n        {' '}\r\n        periods.\r\n        <span className=\"error-message\">\r\n          {errorMessage}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRunModelButton.propTypes = {\r\n  disabledButton: PropTypes.bool,\r\n  errorMessage: PropTypes.string,\r\n  sendNumPeriods: PropTypes.func,\r\n  handleRunPeriod: PropTypes.func,\r\n};\r\n\r\nRunModelButton.defaultProps = {\r\n  disabledButton: true,\r\n  errorMessage: '',\r\n  sendNumPeriods() {},\r\n  handleRunPeriod() {},\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CardWrapper from './CardWrapper';\r\n\r\nconst LogsViewer = ({ loadingData, envFile }) => {\r\n  if (!loadingData) return null;\r\n  return (\r\n    <CardWrapper title=\"Logs\">\r\n      <div style={{ whiteSpace: 'pre-line' }}>\r\n        {envFile.user.debug || 'Run the model to see the logs'}\r\n      </div>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nLogsViewer.propTypes = {\r\n  loadingData: PropTypes.bool,\r\n  envFile: PropTypes.shape(),\r\n};\r\n\r\nLogsViewer.defaultProps = {\r\n  loadingData: true,\r\n  envFile: {},\r\n};\r\n\r\nexport default LogsViewer;\r\n","import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport axios from 'axios';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\nimport PageLoader from './PageLoader';\r\nimport PopulationGraph from './PopulationGraph';\r\nimport PopulationBarGraph from './PopulationBarGraph';\r\nimport ScatterPlot from './ScatterPlot';\r\nimport Debugger from './Debugger';\r\nimport ModelStatusBox from './ModelStatusBox';\r\nimport SourceCodeViewer from './SourceCodeViewer';\r\nimport RunModelButton from './RunModelButton';\r\nimport './styles.css';\r\nimport config from '../config';\r\nimport LogsViewer from './LogsViewer';\r\n\r\n\r\nconst POP = 2;\r\nconst SCATTER = 3;\r\nconst BAR = 4;\r\n// const DATA = 4;\r\nconst DEBUG = 5;\r\nconst SOURCE = 6;\r\nconst LOG = 7;\r\nconst API_SERVER = `${config.API_URL}models/menu/`;\r\nconst CLEAR_REGISTRY_API = `${config.API_URL}registry/clear/`;\r\n\r\nclass ActionMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { location } = this.props;\r\n    const { state } = location;\r\n    const { envFile } = state;\r\n    this.state = {\r\n      menu: {},\r\n      loadingData: true,\r\n      envFile: {},\r\n      source: '',\r\n      periodNum: 10,\r\n      errorMessage: '',\r\n      disabledButton: false,\r\n      loadingSourceCode: false,\r\n      loadingDebugger: false,\r\n      loadingPopulation: false,\r\n      loadingScatter: false,\r\n      loadingBar: false,\r\n      loadingLogs: false,\r\n      activeDisplay: null,\r\n      continuousRun: true,\r\n      continuousRunDisabled: false,\r\n      initLoading: true,\r\n      EXECUTION_KEY: envFile.exec_key,\r\n    };\r\n    autoBind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { EXECUTION_KEY } = this.state;\r\n    const { location } = this.props;\r\n    const { state } = location;\r\n    const {\r\n      envFile, name, source, graph,\r\n    } = state;\r\n    try {\r\n      document.title = 'Indra | Menu';\r\n      // you need to pass the execution key that you get from put_props\r\n      // which is in ModelDetail, the current execution key is undefined\r\n      const m = await axios.get(`${API_SERVER}${EXECUTION_KEY}`);\r\n      // debugger;\r\n      this.setState({\r\n        menu: m.data,\r\n        name,\r\n        source,\r\n        envFile,\r\n        graph,\r\n        msg: envFile.user.user_msgs,\r\n        loadingData: false,\r\n      });\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n    const defaultGraph = graph;\r\n    if (defaultGraph === 'scatter') {\r\n      this.setState({\r\n        loadingScatter: true,\r\n        activeDisplay: SCATTER,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        loadingPopulation: true,\r\n        activeDisplay: POP,\r\n      });\r\n    }\r\n    try {\r\n      const code = await this.viewSource();\r\n      this.setState({\r\n        sourceCode: code,\r\n      });\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    // clear the registry in the backend.\r\n    const { EXECUTION_KEY } = this.state;\r\n    await axios.get(\r\n      `${CLEAR_REGISTRY_API}${EXECUTION_KEY}`,\r\n    );\r\n    // not doing anything with the response.\r\n    // allow the frontend to continue functioning.\r\n    // there should be a error reporting mechanism here to notify\r\n    // admins that a particular key was not cleared.\r\n  }\r\n\r\n\r\n  viewSource = async () => {\r\n    try {\r\n      const { source } = this.state;\r\n      const splitSource = source.split('/');\r\n      const filename = splitSource[splitSource.length - 1];\r\n      const res = await axios.get(\r\n        `https://raw.githubusercontent.com/gcallah/indras_net/master/models/${filename}`,\r\n      );\r\n      return res.data;\r\n    } catch (error) {\r\n      return 'Something has gone wrong.';\r\n    }\r\n  };\r\n\r\n  handleRunPeriod = (e) => {\r\n    this.setState({\r\n      periodNum: e.target.value,\r\n    });\r\n\r\n    const valid = this.checkValidity(e.target.value);\r\n    if (valid === 0) {\r\n      this.setState({\r\n        errorMessage: '**Please input an integer',\r\n        disabledButton: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMessage: '',\r\n        disabledButton: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  checkValidity = (data) => {\r\n    if (data % 1 === 0) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      loadingData: false,\r\n      loadingSourceCode: false,\r\n      loadingDebugger: false,\r\n      loadingScatter: false,\r\n      loadingPopulation: false,\r\n      loadingLogs: false,\r\n      loadingBar: false,\r\n    });\r\n    this.setState({\r\n      activeDisplay: e,\r\n    });\r\n    switch (e) {\r\n      case POP:\r\n        this.setState({ loadingPopulation: true });\r\n        break;\r\n      case SCATTER:\r\n        this.setState({ loadingScatter: true });\r\n        break;\r\n      case DEBUG:\r\n        this.setState({ loadingDebugger: true });\r\n        break;\r\n      case SOURCE:\r\n        this.setState({ loadingSourceCode: true });\r\n        break;\r\n      case LOG:\r\n        this.setState({ loadingLogs: true });\r\n        break;\r\n      case BAR:\r\n        this.setState({ loadingBar: true });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  sendNumPeriods = async () => {\r\n    const { periodNum, envFile, EXECUTION_KEY } = this.state;\r\n    const envFileWithExecutionKey = { ...envFile, execution_key: EXECUTION_KEY };\r\n    this.setState({ loadingData: true });\r\n    try {\r\n      const res = await axios.put(\r\n        `${config.API_URL}models/run/${String(periodNum)}`,\r\n        envFileWithExecutionKey,\r\n        periodNum,\r\n      );\r\n\r\n      this.setState({\r\n        envFile: res.data,\r\n        loadingData: false,\r\n        msg: res.data.user.user_msgs,\r\n      });\r\n      // return true;\r\n    } catch (e) {\r\n      // return false;\r\n    }\r\n  };\r\n\r\n  timeout = (m) => new Promise((r) => setTimeout(r, m))\r\n\r\n  continuousRun = async () => {\r\n    this.setState(\r\n      {\r\n        continuousRun: true,\r\n        continuousRunDisabled: true,\r\n        periodNum: 1,\r\n        initLoading: false,\r\n      },\r\n    );\r\n    await this.timeout(200);\r\n    /* eslint-disable */\r\n    while (this.state.continuousRun) {\r\n      // this.setState({periodNum: 1});\r\n      this.sendNumPeriods();\r\n      /* eslint-disable */\r\n      while (this.state.loadingData){\r\n        await this.timeout(200);\r\n      /* eslint-disable */\r\n        console.log('still waiting for data...')\r\n      }\r\n      /* eslint-disable */\r\n      console.log('data arrived!!')\r\n    }\r\n  }\r\n\r\n  stopRun = () => {\r\n    this.setState(\r\n      {\r\n        continuousRun: false,\r\n        continuousRunDisabled: false,\r\n      },\r\n    );\r\n  }\r\n\r\n  renderHeader = () => {\r\n    const { name } = this.state;\r\n    return <h1 className=\"header\">{name}</h1>;\r\n  };\r\n\r\n  MenuItem = (i, action, text, key) => {\r\n    /**\r\n     * All models will have all the menu items appear on the page.\r\n     * However, we keep one of the graphs (Population graph or Scatter plot)\r\n     * disabled based on \"graph\" field from models.json\r\n     */\r\n    const { graph } = this.state;\r\n    const defaultGraph = graph;\r\n    const { activeDisplay } = this.state;\r\n    return (\r\n      <ListGroup.Item\r\n        className=\"w-50 p-3 list-group-item list-group-item-action\"\r\n        as=\"li\"\r\n        active={activeDisplay === action}\r\n        disabled={\r\n          (action === SCATTER && defaultGraph === 'line')\r\n          || (action === POP && defaultGraph === 'scatter')\r\n        }\r\n        key={key}\r\n        onClick={() => this.handleClick(action)}\r\n      >\r\n        {text}\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  renderMenuItem = () => {\r\n    const {\r\n      envFile,\r\n      loadingDebugger,\r\n      loadingSourceCode,\r\n      sourceCode,\r\n      loadingPopulation,\r\n      loadingScatter,\r\n      loadingLogs,\r\n      loadingBar\r\n    } = this.state;\r\n    return (\r\n      <div className=\"mt-5\">\r\n        <Debugger loadingData={loadingDebugger} envFile={envFile} />\r\n        <SourceCodeViewer loadingData={loadingSourceCode} code={sourceCode} />\r\n        <PopulationGraph loadingData={loadingPopulation} envFile={envFile} />\r\n        <PopulationBarGraph loadingData={loadingBar} envFile={envFile} />\r\n        <ScatterPlot loadingData={loadingScatter} envFile={envFile} />\r\n        <LogsViewer loadingData={loadingLogs} envFile={envFile} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderMapItem = () => {\r\n    const { menu } = this.state;\r\n    return (\r\n      <div className=\"row margin-bottom-80\">\r\n        <div className=\"col w-25\">\r\n          <ListGroup>\r\n            {Object.keys(menu).map((item, i) => (menu[item].id > 1\r\n              ? this.MenuItem(\r\n                i,\r\n                menu[item].id,\r\n                menu[item].question,\r\n                menu[item].func,\r\n              )\r\n              : null))}\r\n          </ListGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loadingData, msg, disabledButton, errorMessage, initLoading, continuousRunDisabled,\r\n    } = this.state;\r\n    if (loadingData && initLoading) {\r\n      return <PageLoader />;\r\n    }\r\n    // if (loadingData && !initLoading){\r\n    //   return;\r\n    // }\r\n    return (\r\n      <div>\r\n        {this.renderHeader()}\r\n        <div>\r\n          <ModelStatusBox\r\n            title=\"Model Status\"\r\n            msg={msg}\r\n            ref={this.modelStatusBoxElement}\r\n          />\r\n        </div>\r\n        <ul className=\"list-group\">\r\n          <div className=\"row\">\r\n            <div>\r\n              <RunModelButton\r\n                disabledButton={disabledButton}\r\n                errorMessage={errorMessage}\r\n                sendNumPeriods={this.sendNumPeriods}\r\n                handleRunPeriod={this.handleRunPeriod}\r\n              />\r\n              {/* eslint-disable */}\r\n              <button\r\n                onClick={this.continuousRun}\r\n                disabled={continuousRunDisabled}\r\n                className=\"btn btn-success m-2\"\r\n              >\r\n                Continuous Run\r\n              </button>\r\n              {/* eslint-disable */}\r\n              <button\r\n                onClick={this.stopRun}\r\n                className=\"btn btn-danger m-2\"\r\n              >\r\n                Stop\r\n              </button>\r\n              <h3 className=\"margin-top-50 mb-4\">Model Analysis:</h3>\r\n            </div>\r\n          </div>\r\n          {this.renderMapItem()}\r\n        </ul>\r\n        {this.renderMenuItem()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nActionMenu.propTypes = {\r\n  location: PropTypes.shape({\r\n    state: PropTypes.shape({\r\n      envFile: PropTypes.object,\r\n      name: PropTypes.string,\r\n      source: PropTypes.string,\r\n      graph: PropTypes.string,\r\n    }),\r\n  }),\r\n  /* eslint-disable */\r\n  history: PropTypes.object,\r\n};\r\n\r\nActionMenu.defaultProps = {\r\n  location: {\r\n    state: {\r\n      envFile: {},\r\n    },\r\n  },\r\n  history: {},\r\n};\r\n\r\nexport default ActionMenu;\r\n","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './NotFoundPage.css';\r\n\r\nconst Status = ({ code, children }) => (\r\n  <Route\r\n    render={({ staticContext }) => {\r\n      if (staticContext) staticContext.status = code;\r\n      return children;\r\n    }}\r\n  />\r\n);\r\n\r\nconst NotFoundPage = () => (\r\n  <Status code={404}>\r\n    <div className=\"NotFoundPage\">\r\n      <h1>Oops!</h1>\r\n      <div>Page not found.</div>\r\n      <div className=\"action\">\r\n        <a className=\"btn btn-primary\" href=\"/\">\r\n          Guide me to the right path!\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </Status>\r\n);\r\n\r\nStatus.propTypes = {\r\n  code: PropTypes.number,\r\n  children: PropTypes.shape(),\r\n};\r\n\r\nStatus.defaultProps = {\r\n  code: 0,\r\n  children: {},\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { Component } from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\n\r\nclass ErrorCatching extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadingData: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loadingData: true });\r\n    document.title = 'Indra | Work in Progress';\r\n    this.setState({ loadingData: false });\r\n  }\r\n\r\n  render() {\r\n    const { loadingData } = this.state;\r\n    if (loadingData) {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"massive\">Loading...</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <br />\r\n        <h1 style={{ textAlign: 'center' }}>\r\n          Indra ABM platform\r\n        </h1>\r\n        <br />\r\n        <br />\r\n        <p>\r\n          We are encountering some problems with the API server.\r\n          We will have this model running soon!\r\n        </p>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorCatching;\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport Layout from './components/Layout';\r\nimport Home from './components/Home';\r\nimport WIP from './components/WIP';\r\nimport ModelDetail from './components/ModelDetail';\r\nimport ActionMenu from './components/ActionMenu';\r\nimport NotFoundPage from './components/NotFoundPage';\r\nimport ErrorCatching from './components/ErrorCatching';\r\n\r\nconst Wrapper = styled('div')`\r\n  background: ${(props) => props.theme.background};\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  font-family: -apple-stem, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\";\r\n  h1 {\r\n    color: ${(props) => props.theme.body};\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrapper>\r\n      <HashRouter>\r\n        <Layout>\r\n          <IndraRoutes />\r\n        </Layout>\r\n      </HashRouter>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport function IndraRoutes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/wip\" component={WIP} />\r\n      <Route exact path=\"/models/props/:id\" component={ModelDetail} />\r\n      <Route exact path=\"/models/menu/:id\" component={ActionMenu} />\r\n      <Route exact path=\"/errorCatching\" component={ErrorCatching} />\r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default withTheme(App);\r\n","import theme from 'styled-theming';\r\n\r\nexport const backgroundColor = theme('mode', {\r\n  light: '#fafafa',\r\n  dark: '#222',\r\n});\r\n\r\nexport const textColor = theme('mode', {\r\n  light: '#000',\r\n  dark: '#fff',\r\n});\r\n\r\nexport const buttonBackgroundColor = theme('mode', {\r\n  light: '#222',\r\n  dark: '#eee',\r\n});\r\n\r\nexport const buttonTextColor = theme('mode', {\r\n  light: '#eee',\r\n  dark: '#222',\r\n});\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable arrow-parens */\r\n/* eslint-disable arrow-body-style */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { Switch as Switch2 } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { backgroundColor, textColor } from './theme';\r\n\r\n\r\nconst ThemeToggleContext = React.createContext();\r\n\r\nexport const useTheme = () => React.useContext(ThemeToggleContext);\r\nconst IOSSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    margin: theme.spacing(1),\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    '&$checked': {\r\n      transform: 'translateX(16px)',\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        backgroundColor: '#060606',\r\n        opacity: 1,\r\n        border: 'none',\r\n      },\r\n    },\r\n    '&$focusVisible $thumb': {\r\n      color: '#060606',\r\n      border: '6px solid #fff',\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color', 'border']),\r\n  },\r\n  checked: {},\r\n  focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch2\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport const MyThemeProvider = ({ children }) => {\r\n  const [themeState, setThemeState] = React.useState({\r\n    mode: 'light',\r\n    checkedB: true,\r\n\r\n  });\r\n\r\n  const Wrapper = styled.div`\r\n    background-color: ${backgroundColor};\r\n    color: ${textColor};\r\n  `;\r\n\r\n  const toggle = name => event => {\r\n    const mode = (themeState.mode === 'light' ? 'dark' : 'light');\r\n    setThemeState({ mode, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <ThemeToggleContext.Provider value={{ toggle }}>\r\n      <ThemeProvider\r\n        theme={{\r\n          mode: themeState.mode,\r\n        }}\r\n      >\r\n        <Wrapper>\r\n          <IOSSwitch\r\n            checked={themeState.checkedB}\r\n            onChange={toggle('checkedB')}\r\n            value=\"checkedB\"\r\n          />\r\n          {children}\r\n        </Wrapper>\r\n      </ThemeProvider>\r\n    </ThemeToggleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MyThemeProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MyThemeProvider } from './darkTheme/ThemeContext';\r\n\r\nReactDOM.render(\r\n  <MyThemeProvider>\r\n    <App />\r\n  </MyThemeProvider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}