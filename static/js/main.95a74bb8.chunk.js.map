{"version":3,"sources":["components/images/Sandpile.jpg","components/images/sandpile_2.png","components/images/mendelobrot_sq.jpg","components/Header.js","components/Layout.js","components/Carousel.js","components/Heading.js","components/Paragraph.js","components/ErrorCatching.js","../../IndraReactCommon/config.js","components/Button.js","components/Home.js","components/WIP.js","components/ModelInputField.js","components/PageLoader.js","components/ModelParams.js","components/CardWrapper.js","components/PopulationGraph.js","components/ScatterPlot.js","components/ModelStatusBox.js","components/RunModelButton.js","components/DebugMenuResultBox.js","components/ViewAgentBox.js","components/DebugMenu.js","components/RunModel.js","components/NotFoundPage.js","components/ActionsInput.js","components/ModelGenerator.js","App.js","darkTheme/theme.js","darkTheme/ThemeContext.js","index.js"],"names":["module","exports","Header","Navbar","bg","expand","Nav","className","Link","as","to","Toggle","aria-controls","Collapse","id","href","Layout","props","children","Container","rel","defaultProps","Carousel","renderImage","dots","speed","autoplay","data","settings","arrows","infinite","slidesToShow","slidesToScroll","fade","areAllImagesLoaded","imagesLoadedStatus","state","i","length","map","item","index","key","title","src","image","style","display","alt","data-toggle","data-placement","onLoad","imagesLoadedStatusCopy","slice","setState","Array","fill","this","Component","Heading","autoBind","sectionLevel","text","heading","React","Paragraph","ErrorCatching","loadingData","a","document","Dimmer","active","inverted","Loader","size","textAlign","API_URL","process","REACT_APP_API_URL","config","PROPS_URL","MENU_URL","RUN_URL","CLEAR_REGISTRY_URL","POPHIST_URL","USER_MSGS_URL","DEBUG_URL","SOURCE_URL","REGISTRY_URL","LOCATION_URL","DETAILS_URL","AGENT_URL","GENERATOR_CREATE_MODEL","GENERATOR_CREATE_GROUP","GENERATOR_CREATE_ACTION","Button","onClick","disabled","type","Home","renderChooseModelProp","marginBottom","allItems","apiFailed","dataForCarousel","sandpileImg","sandpile1Img","mandelobrotImg","serverError","api_server","useGenerator","REACT_APP_USE_GENERATOR","history","axios","get","res","localStorage","setItem","JSON","stringify","push","Col","sm","lg","Dropdown","variant","Menu","Object","keys","OverlayTrigger","name","placement","overlay","Tooltip","doc","pathname","modelID","menuId","source","graph","marginTop","cols","span","offset","WIP","ModelInputField","label","placeholder","propChange","error","htmlFor","autoFocus","fontSize","onChange","color","PageDimmer","apiServer","ModelParams","states","modelParams","forEach","detailName","prevState","defaultVal","val","errors","errorMessage","disabledButton","errorSubmit","ans","propChanged","e","target","value","valid","checkValidity","parseInt","lowval","hival","atype","handleSubmit","event","preventDefault","put","itemId","environ","execKey","exec_key","toString","renderHeader","fontWeight","renderSubmitButton","goback","goBack","initialModelDetailState","getInitialModelDetails","properties","initialState","location","match","undefined","params","parse","getItem","filter","err","PageLoader","question","CardWrapper","Card","Body","PopulationGraph","useState","popHist","setPopHist","EXEC_KEY","useEffect","pops","fetchPopHist","colors","thisColor","env","group","iGroup","member","iMember","width","height","xtitle","ytitle","ScatterPlot","markerMap","tree","square","person","deceased","circle","default","members","dataset","pointStyle","markerProp","attrs","marker","pos","ModelStatusBox","msg","nextProps","RunModelButton","sendNumPeriods","handleRunPeriod","DebugMenuResultBox","content","ViewAgentBox","handleClick","agentName","displayBox","response","status","message","handleAgentName","renderAgentBox","DebugMenu","activeDisplay","MenuItem","url","ListGroup","Item","console","log","renderMenuItem","menu","handleReturn","modelName","renderModelDetails","renderSourceCode","renderAgent","renderRegistry","renderLocations","renderPopHist","debug_url","RunModel","viewSource","splitSource","split","filename","periodNum","loadingSourceCode","loadingDebugger","loadingScatter","loadingPopulation","loadingLogs","loadingBar","environWithExecutionKey","execution_key","String","msgData","timeout","m","Promise","r","setTimeout","continuousRun","continuousRunDisabled","initLoading","stopRun","ModelAnalysisMenuItem","action","defaultGraph","clickedItem","renderGraph","renderModelAnalysisMenu","active_web","renderModelStatus","ref","modelStatusBoxElement","renderRunButtons","renderModelAnalysis","handleReturnFromDebug","substr","code","sourceCode","delete","Status","render","staticContext","NotFoundPage","secondData","setAction","actionName","setActionName","loadingStepThree","setLoadingStepThree","post","then","catch","window","alert","step","setStep","firstData","setFirstData","setName","loadingStepOne","setLoadingStepOne","renderStepOne","setSecondData","membersNum","actionsNum","setGroup","loadingStepTwo","setLoadingStepTwo","renderStepTwo","ActionsInput","Wrapper","styled","theme","background","body","App","pushState","addEventListener","exact","path","component","ModelGenerator","withTheme","backgroundColor","light","dark","textColor","ThemeToggleContext","createContext","IOSSwitch","withStyles","root","padding","margin","spacing","switchBase","transform","palette","common","white","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","MyThemeProvider","mode","checkedB","themeState","setThemeState","div","toggle","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.95a74bb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sandpile.090bc1a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sandpile_2.d38b3fb1.png\";","module.exports = __webpack_public_path__ + \"static/media/mendelobrot_sq.875dd8b8.jpg\";","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst home = '/';\n\nfunction Header() {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link as={Link} to={home}>\n          HOME\n        </Nav.Link>\n      </Nav>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link\n            href=\"https://gcallah.github.io/indras_net/index.html\"\n          >\n            ABOUT\n          </Nav.Link>\n          <Nav.Link href=\"https://github.com/gcallah/indras_net/\">\n            SOURCE CODE\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport PropType from 'prop-types';\nimport Header from './Header';\n\nfunction Layout(props) {\n  const { children } = props;\n  return (\n    <Container>\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\" />\n      <Header />\n      {children}\n    </Container>\n  );\n}\n\nLayout.propTypes = {\n  children: PropType.shape(),\n};\n\nLayout.defaultProps = {\n  children: {},\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport PropTypes from 'prop-types';\n\nclass Carousel extends Component {\n  constructor(props) {\n    super(props);\n    const imagesLoadedStatus = new Array(props.data.length).fill(false);\n    this.state = {\n      imagesLoadedStatus,\n    };\n  }\n\n  renderImage = () => {\n    const {\n      dots, speed, autoplay, className, data,\n    } = this.props;\n    const settings = {\n      arrows: false,\n      dots,\n      infinite: true,\n      speed,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay,\n      fade: true,\n      className,\n    };\n    const areAllImagesLoaded = () => {\n      const { imagesLoadedStatus } = this.state;\n      for (let i = 0; i < imagesLoadedStatus.length; i += 1) {\n        if (!imagesLoadedStatus[i]) return false;\n      }\n      return true;\n    };\n    return (\n      <div>\n        <Slider\n          {...settings} /* eslint-disable-line react/jsx-props-no-spreading */\n        >\n          {data.map((item, index) => (\n            <div key={item.title}>\n              {areAllImagesLoaded() ? null : <div>Loading...</div>}\n              <img\n                src={item.image}\n                style={areAllImagesLoaded() ? {} : { display: 'none' }}\n                className=\"rounded-circle carousel\"\n                alt=\"Responsive Model\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={item.title}\n                onLoad={() => {\n                  const { imagesLoadedStatus } = this.state;\n                  const imagesLoadedStatusCopy = imagesLoadedStatus.slice();\n                  imagesLoadedStatusCopy[index] = true;\n                  this.setState({\n                    imagesLoadedStatus: imagesLoadedStatusCopy,\n                  });\n                }}\n              />\n            </div>\n          ))}\n        </Slider>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderImage()}\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  dots: PropTypes.bool,\n  speed: PropTypes.number,\n  autoplay: PropTypes.bool,\n  className: PropTypes.string,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    image: PropTypes.string,\n    title: PropTypes.string,\n  })),\n};\n\nCarousel.defaultProps = {\n  dots: false,\n  speed: 1000,\n  autoplay: false,\n  className: '',\n  data: [],\n};\n\nexport default Carousel;\n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\n\nexport default class Heading extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n\n    this.state = {\n      sectionLevel: this.props.sectionLevel,\n      text: this.props.text,\n      className: this.props.className,\n      style: this.props.style\n    };\n  }\n\n  render() {\n    const {\n      sectionLevel, text, className, style\n    } = this.state;\n    let heading;\n    if (sectionLevel === \"h1\"){\n      heading = <h1 className={className} style={style}>{text}</h1>\n    } else if (sectionLevel === \"h2\") {\n      heading = <h2 className={className} style={style}>{text}</h2>\n    } else if (sectionLevel === \"h3\") {\n      heading = <h3 className={className} style={style}>{text}</h3>\n    } else if (sectionLevel === \"h4\") {\n      heading = <h4 className={className} style={style}>{text}</h4>\n    } else if (sectionLevel === \"h5\") {\n      heading = <h5 className={className} style={style}>{text}</h5>\n    } else if (sectionLevel === \"h6\") {\n      heading = <h6 className={className} style={style}>{text}</h6>\n    } \n    return (\n      <div>\n        {heading}\n      </div>\n    );\n  }\n}\n\nHeading.propTypes = {\n  sectionLevel: PropTypes.string,\n  className: PropTypes.string,\n  text: PropTypes.string,\n  style: PropTypes.object\n};\n\nHeading.defaultProps = {\n  sectionLevel: \"h1\",\n  className: \"\",\n  text: \"\",\n  style: {}\n};\n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\n\nexport default class Paragraph extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n\n    this.state = {\n      className: this.props.className,\n      text: this.props.text,\n      style: this.props.style\n    };\n  }\n\n  render() {\n    const {\n      className, text, style,\n    } = this.state;\n    return (\n      <div>\n        <p className={className} style={style}>\n          {text}\n        </p>\n      </div>\n    );\n  }\n}\n\nParagraph.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string,\n  style: PropTypes.object\n};\n\nParagraph.defaultProps = {\n  className: \"\",\n  text: \"\",\n  style: {}\n}\n","import React, { Component } from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport Heading from './Heading';\nimport Paragraph from './Paragraph';\n\nclass ErrorCatching extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = 'Indra | Work in Progress';\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    const { loadingData } = this.state;\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <br />\n        <Heading \n          sectionLevel={\"h1\"} \n          style={{ textAlign: 'center' }} \n          text={\"Indra ABM platform\"}\n        />\n        <br />\n        <br />\n        <Paragraph\n          text = {\"We are encountering some problems with the API server. We will have this model running soon!\"}\n        />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default ErrorCatching;\n","/**\n * Default API_URL of Indra would be production URL.\n * If the user has set the environment variable - REACT_APP_API_URL -\n * then that value will be set a the API_URL.\n * One of the ways to set REACT_APP_API_URL is by running the frontend using\n * the below command -\n *        REACT_APP_API_URL=http://127.0.0.1:8000/ npm start\n * (Make sure the backend is running at http://127.0.0.1:8000/)\n *\n *\n * Note: All environment variables in create-react-app setup needs to have\n * the prefix REACT_APP_\n * For more infromation - https://create-react-app.dev/docs/adding-custom-environment-variables/\n */\n let API_URL = 'https://indraabm.herokuapp.com/';\n \n if (process.env.REACT_APP_API_URL) {\n   API_URL = process.env.REACT_APP_API_URL;\n }\n \n let PROPS_URL = API_URL + 'models/props/';\n let MENU_URL = API_URL + 'menus/model';\n let RUN_URL = API_URL + 'models/run/';\n let CLEAR_REGISTRY_URL = API_URL + 'registry/clear/';\n let POPHIST_URL = API_URL + 'pophist/';\n let USER_MSGS_URL = API_URL + 'user/msgs/';\n let DEBUG_URL = API_URL + 'menus/debug';\n let SOURCE_URL = API_URL + 'source/';\n let REGISTRY_URL = API_URL + 'registry';\n let LOCATION_URL = API_URL + 'locations/';\n let DETAILS_URL = API_URL + 'models/';\n let AGENT_URL = API_URL + 'agent';\n let GENERATOR_CREATE_MODEL = API_URL + 'models/generate/create_model';\n let GENERATOR_CREATE_GROUP = API_URL + 'models/generate/create_group/';\n let GENERATOR_CREATE_ACTION = API_URL + 'models/generate/create_actions/';\n\n const config = { API_URL, PROPS_URL, MENU_URL, RUN_URL, CLEAR_REGISTRY_URL, POPHIST_URL, USER_MSGS_URL, DEBUG_URL, SOURCE_URL, REGISTRY_URL, LOCATION_URL, DETAILS_URL, AGENT_URL, GENERATOR_CREATE_MODEL, GENERATOR_CREATE_GROUP, GENERATOR_CREATE_ACTION };\n \n export default config;\n \n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n\n    this.state = {\n      className: this.props.className,\n      text: this.props.text,\n      onClick: this.props.onClick,\n      disabled: this.props.disabled,\n      type: this.props.type\n    };\n  }\n\n  render() {\n    const {\n      className, text, onClick, disabled, type,\n    } = this.state;\n    return (\n      <div>\n        <button\n          className = {className}\n          onClick={onClick}\n          disabled={disabled}\n          type={type}\n        >\n          {text}\n        </button>\n      </div>\n    );\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  type: PropTypes.string\n};\n\nButton.defaultProps = {\n  className: \"\",\n  text: \"\",\n  onClick() {},\n  disabled: false,\n  type: \"\"\n};\n","import React, { Component } from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport { Dropdown } from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Carousel from './Carousel';\nimport sandpileImg from './images/Sandpile.jpg';\nimport sandpile1Img from './images/sandpile_2.png';\nimport mandelobrotImg from './images/mendelobrot_sq.jpg';\nimport './styles.css';\nimport axios from 'axios';\nimport ErrorCatching from './ErrorCatching';\nimport Heading from './Heading';\n\n//import { getModels } from 'IndraReactCommon/APICalls';\nimport config from 'IndraReactCommon/config';\nimport Button from \"./Button\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allItems: [],\n      loadingData: false,\n      apiFailed: false,\n      dataForCarousel: [\n        { image: sandpileImg, title: 'by Seth Terashima' },\n        { image: sandpile1Img, title: 'by Colt Browninga' },\n        { image: mandelobrotImg, title: 'by Adam Majewski' },\n      ],\n      serverError: false,\n    };\n    this.api_server = config.API_URL;\n    this.useGenerator = process.env.REACT_APP_USE_GENERATOR;\n  }\n \n\n  async componentDidMount() {\n    const { history } = this.props;\n    try {\n      this.setState({ loadingData: true });\n      document.title = 'Home';\n      const res = await axios.get(`${this.api_server}models?active=true`);\n      // let models = await getModels();\n      this.setState({ allItems: res.data, loadingData: false });\n      // setting this so model properties like name, graph etc are access\n      // in all tabs of a browser\n      localStorage.setItem('indra_model_details', JSON.stringify(res.data));\n    } catch (e) {\n      this.setState({\n        serverError: true,\n      });\n      history.push('/errorCatching');\n    }\n  }\n\n  renderChooseModelProp = () => (\n    <Heading\n      sectionLevel={\"h1\"}\n      className={\"small-header\"}\n      text={\"Please choose a model: \"}\n      style={{ marginBottom: '15px' }}\n    />\n  );\n\n  render() {\n    const {\n      loadingData, dataForCarousel, allItems, apiFailed, serverError,\n    } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    if (apiFailed) {\n      return <Heading\n        sectionLevel={\"h1\"}\n        text={\"404 Error\"}\n      />;\n    }\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading...</Loader>\n        </Dimmer>\n      );\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"margin-bottom-80\">\n          <Heading\n            sectionLevel={\"h1\"}\n            className={\"text-left\"}\n            text={\"Indra Agent-Based Modeling System\"}\n          />\n        </div>\n        <div className=\"row\">\n          <Col sm={12} lg={4} className=\"mb-5\">\n            {this.renderChooseModelProp()}\n            <Dropdown>\n              <Dropdown.Toggle variant=\"outline-dark\" id=\"dropdown-basic\">\n                Choose...\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {Object.keys(allItems).map((item) => (!('active' in allItems[item])\n                  || allItems[item].active === true ? (\n                    <OverlayTrigger\n                      key={`${allItems[item].name}-tooltip`}\n                      placement=\"right\"\n                      overlay={<Tooltip>{allItems[item].doc}</Tooltip>}\n                    >\n                      <Link\n                        to={{\n                          pathname: `/models/props/${allItems[item].modelID}`,\n                          state: {\n                            menuId: allItems[item].modelID,\n                            name: allItems[item].name,\n                            source: allItems[item].source,\n                            graph: allItems[item].graph,\n                          },\n                        }}\n                        className=\"link text-dark dropdown-item\"\n                        key={allItems[item].name}\n                      >\n                        {allItems[item].name}\n                      </Link>\n                    </OverlayTrigger>\n                  ) : null))}\n              </Dropdown.Menu>\n              {\n                this.useGenerator &&\n                  <div style={{ marginTop: 200 }}>\n                    <Link to=\"/generator\">\n                      <Button text=\"Generate New Model\" />\n                    </Link>\n                  </div>\n              }\n            </Dropdown>\n          </Col>\n          <Col sm={12} lg={{ cols: 6, span: 6, offset: 2 }}>\n            <Carousel\n              speed={5000}\n              autoplay\n              className=\"col\"\n              data={dataForCarousel}\n            />\n          </Col>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  history: PropTypes.shape(),\n};\n\nHome.defaultProps = {\n  history: {},\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport Heading from './Heading';\n\nclass WIP extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = 'Indra | Work in Progress';\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    const { loadingData } = this.state;\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <br />\n        <Heading\n          sectionLevel={\"h1\"}\n          style={{ textAlign: 'center' }}\n          text={\"Welcome to the Indra ABM platform!\"}\n        />\n        <br />\n        <br />\n\n        <p>We will have this model running soon!</p>\n\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default WIP;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ModelInputField(props) {\n  const {\n    label, name, type, placeholder, propChange, error,\n  } = props;\n  return (\n    <div key={label} className=\"form-group\">\n      <div>\n        <label\n          htmlFor={name}\n          className=\"col-sm-4 col-md-4 col-lg-4\"\n          key={label}\n        >\n          {label}\n          {' '}\n          {' '}\n        </label>\n        <input\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus\n          id={name}\n          type={type}\n          className=\"col-sm-2 col-md-2 col-lg-2\"\n          style={{ fontSize: '15pt' }}\n          placeholder={placeholder}\n          onChange={propChange} /* style={{width: 60}} */\n          name={name}\n        />\n        <span className=\"col-sm-6 col-md-6 col-lg-6\" style={{ color: 'red', fontSize: 12 }}>\n          {error}\n        </span>\n        <br />\n      </div>\n    </div>\n  );\n}\n\nModelInputField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.number,\n  propChange: PropTypes.func,\n  error: PropTypes.string,\n};\n\nModelInputField.defaultProps = {\n  label: '',\n  name: '',\n  type: '',\n  placeholder: 0,\n  propChange() {},\n  error: '',\n};\n\nexport default ModelInputField;\n","import React from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\n\nfunction PageDimmer() {\n  return (\n    <Dimmer active inverted>\n      <Loader size=\"massive\">Loading...</Loader>\n    </Dimmer>\n  );\n}\n\nexport default PageDimmer;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport ModelInputField from './ModelInputField';\nimport PageLoader from './PageLoader';\nimport './styles.css';\nimport config from 'IndraReactCommon/config';\nimport ErrorCatching from './ErrorCatching';\nimport Button from './Button';\nimport Heading from './Heading';\n\nconst OK = 1\nconst BAD_TYPE = -1\nconst OUT_OF_RANGE = 0\nconst QUESTION = 'question'\n\nconst apiServer = config.PROPS_URL;\n\nclass ModelParams extends Component {\n  constructor(props) {\n    super(props);\n    const initialModelDetailState = this.getInitialModelDetails();\n    this.state = {\n      modelParams: {},\n      loadingData: false,\n      disabledButton: false,\n      serverError: false,\n      ...initialModelDetailState,\n    };\n  }\n\n  async componentDidMount() {\n    const { history } = this.props;\n    const { menuId } = this.state;\n    try {\n      document.title = 'Indra | Property';\n      this.setState({ loadingData: true });\n      const properties = await axios.get(\n        `${apiServer}${menuId}`,\n      );\n      this.setState({ modelParams: properties.data });\n      this.states(properties.data);\n      this.errors(properties.data);\n      this.setState({ loadingData: false });\n    } catch (e) {\n      this.setState({\n        serverError: true,\n      });\n      history.push('/errorCatching');\n    }\n  }\n\n  getInitialModelDetails() {\n    const { location, history, match } = this.props;\n    let initialState;\n    try {\n      const { state } = location;\n      if (state === undefined) {\n      // this is undefined when someone tried to open the model in a new tab from the home screen.\n        const menuId = parseInt(match.params.id, 10);\n        const modelParams = JSON.parse(localStorage.getItem('indra_model_details')).filter((item) => item['model ID'] === menuId)[0];\n        initialState = {\n          menuId,\n          name: modelParams.name,\n          source: modelParams.source,\n          graph: modelParams.graph,\n        };\n      } else {\n        initialState = state;\n      }\n    } catch (err) {\n      history.push('/errorCatching');\n    }\n    return initialState;\n  }\n\n  states = (data) => {\n    const { modelParams } = this.state;\n    // loop over objects in data and create object in this.state\n    Object.keys(modelParams).forEach((detailName) => {\n      this.setState((prevState) => ({\n        modelParams: {\n          ...prevState.modelParams,\n          [detailName]: {\n            ...prevState.modelParams[detailName],\n            defaultVal: data[detailName].val,\n          },\n        },\n      }));\n      // Object.keys(modelParams).forEach((item) => this.setState({ [item]: data[item] }));\n    });\n  };\n\n  errors = () => {\n    const { modelParams } = this.state;\n    Object.keys(modelParams).forEach((item) => this.setState((prevState) => ({\n      modelParams: {\n        ...prevState.modelParams,\n        [item]: {\n          ...prevState.modelParams[item],\n          errorMessage: '',\n          disabledButton: false,\n        },\n      },\n    })));\n  };\n\n  errorSubmit = () => {\n    const { modelParams } = this.state;\n    let ans = false;\n    Object.keys(modelParams).forEach((item) => {\n      ans = ans || modelParams[item].disabledButton;\n    });\n    return ans;\n  };\n\n  propChanged = (e) => {\n    const { modelParams } = this.state;\n    const { name, value } = e.target;\n    const valid = this.checkValidity(name, value);\n    modelParams[name].disabledButton = true;\n\n    if (valid === OK) {\n      modelParams[name].val = parseInt(value, 10);\n      modelParams[name].errorMessage = '';\n      modelParams[name].disabledButton = false;\n      this.setState({ modelParams });\n    } else if (valid === BAD_TYPE) {\n      modelParams[name].errorMessage = '**Wrong Input Type';\n      modelParams[name].val = modelParams[name].defaultVal;\n      this.setState({ modelParams });\n    } else {\n      modelParams[\n        name\n      ].errorMessage = `**Please input a number between ${modelParams[name].lowval} and ${modelParams[name].hival}.`;\n      modelParams[name].val = modelParams[name].defaultVal;\n      this.setState({ modelParams });\n    }\n\n    this.setState({ disabledButton: this.errorSubmit() });\n  };\n\n  checkValidity = (name, value) => {\n    const { modelParams } = this.state;\n    if (\n      value <= modelParams[name].hival\n      && value >= modelParams[name].lowval\n    ) {\n      if (modelParams[name].atype === 'INT' && !!(value % 1) === false) {\n        return OK;\n      }\n      if (modelParams[name].atype === 'DBL') {\n        return OK;\n      }\n\n      return BAD_TYPE;\n    }\n    return OUT_OF_RANGE;\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const {\n      modelParams, menuId, name, source, graph,\n    } = this.state;\n    const { history } = this.props;\n    try {\n      // res gives us back the model returned from put props\n      const res = await axios.put(\n        apiServer + menuId,\n        modelParams,\n      );\n      const itemId = menuId;\n      const environ = res.data;\n      const execKey = res.data.exec_key;\n      history.push({\n        pathname: `/models/menu/${itemId.toString(10)}`,\n        state: {\n          environ,\n          name,\n          source,\n          graph,\n          execKey,\n        },\n      });\n    } catch (e) {\n      this.setState({\n        serverError: true,\n      });\n      history.push('/errorCatching');\n    }\n  };\n\n  renderHeader = () => {\n    const { name } = this.state;\n    return (\n      <Heading\n        sectionLevel={\"h1\"}\n        className={\"header\"}\n        style={{ textAlign: 'center', fontWeight: '200' }}\n        text={`Please set the parameters for the ${name} model`}\n      />\n    );\n  };\n\n  renderSubmitButton = () => {\n    const { disabledButton } = this.state;\n    // console.log(this.state);\n    return (\n      <Button\n        type={\"button\"}\n        onClick={!disabledButton ? this.handleSubmit : null}\n        disabled={disabledButton}\n        className={\"btn btn-primary m-2\"}\n        text={\"Submit\"}\n      />\n    );\n  };\n\n  goback = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { loadingData, modelParams, serverError } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    if (loadingData) {\n      return <PageLoader />;\n    }\n    return (\n      <div>\n        <Heading\n          sectionLevel={\"h1\"}\n          className={\"margin-top-60\"}\n        />\n        {this.renderHeader()}\n        <br />\n        <br />\n        <form>\n          <div className=\"container\">\n            {Object.keys(modelParams).map((item) => {\n              if (QUESTION in modelParams[item]\n                 && modelParams[item][QUESTION] != null) {\n                return (\n                  <ModelInputField\n                    label={modelParams[item].question}\n                    type={modelParams[item].atype}\n                    placeholder={modelParams[item].val}\n                    error={modelParams[item].errorMessage}\n                    propChange={this.propChanged}\n                    name={item}\n                    key={item}\n                  />\n                );\n              }\n              return null;\n            })}\n          </div>\n        </form>\n        <br />\n        <br />\n        {this.renderSubmitButton()}\n      </div>\n    );\n  }\n}\n\nModelParams.propTypes = {\n  history: PropTypes.shape(),\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      menuId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      source: PropTypes.string,\n      graph: PropTypes.string,\n    }),\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nModelParams.defaultProps = {\n  history: {},\n  location: {\n    state: {},\n  },\n  match: {\n    params: {\n      id: '',\n    },\n  },\n};\n\nexport default ModelParams;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport propTypes from 'prop-types';\nimport Heading from './Heading';\n\nconst CardWrapper = ({ title, children }) => (\n  <Card>\n    <Heading \n      sectionLevel={\"h5\"}\n      style={{ textAlign: 'center', fontSize: 16 }}\n      className={\"card-header bg-primary text-white\"}\n      text={title}\n    />\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n\nCardWrapper.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.node.isRequired,\n};\n\nexport default CardWrapper;\n","import React, { useState, useEffect } from 'react';\nimport { LineChart } from 'react-chartkick';\nimport 'chart.js';\nimport PropType from 'prop-types';\nimport CardWrapper from './CardWrapper';\nimport axios from 'axios';\nimport config from 'IndraReactCommon/config';\nimport ErrorCatching from './ErrorCatching';\n\nconst POPHIST_URL  = config.POPHIST_URL ;\n\nfunction PopulationGraph(props) {\n  const [popHist, setPopHist] = useState({});\n  const { loadingData, EXEC_KEY } = props;\n  useEffect(() => {\n    async function fetchPopHist() {\n      try {\n        const res = await axios.get(`${POPHIST_URL}${EXEC_KEY}`);\n        setPopHist(res.data.pops);\n      } catch (e) {\n        return <ErrorCatching />;\n      }\n    }\n\n    fetchPopHist();\n  }, [props, EXEC_KEY]);\n\n  const NUM_COLORS = 7;\n  const colors = ['red', 'green', 'blue', 'black', 'purple', 'magenta', 'orange'];\n  let thisColor = 0;\n  if (loadingData) {\n    const data = [];\n    const env = popHist;\n    // populate 'data' array with groups from 'pops'\n    // and their respective values\n    Object.keys(env).forEach((group, iGroup) => {\n      data.push({\n        name: group,\n        color: colors[thisColor % NUM_COLORS],\n        //color: environ.members[group]\n          //? environ.members[group].attrs.color : colors[thisColor % NUM_COLORS],\n        data: {},\n      });\n      // modify individual 'data' dictionary of each pops\n      // group by copying over value\n      Object.keys(env[group]).forEach((member, iMember) => {\n        data[iGroup].data[member] = env[group][iMember];\n      });\n      thisColor += 1;\n    });\n    return (\n      <CardWrapper title=\"Population Graph\">\n        <LineChart data={data} width=\"600px\" height=\"600px\" xtitle=\"Period\" ytitle=\"Population\" />\n      </CardWrapper>\n    );\n  }\n  return null;\n}\n\nPopulationGraph.propTypes = {\n  loadingData: PropType.bool,\n  EXEC_KEY: PropType.number\n};\n\nPopulationGraph.defaultProps = {\n  loadingData: true,\n  EXEC_KEY: 0\n};\n\nexport default PopulationGraph;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { ScatterChart } from 'react-chartkick';\nimport 'chart.js';\nimport PropTypes from 'prop-types';\nimport CardWrapper from './CardWrapper';\n\nfunction ScatterPlot(props) {\n  const { loadingData, environ, id } = props;\n  const pointStyles = [\n    'circle',\n    'cross',\n    'crossRot',\n    'dash',\n    'line',\n    'rect',\n    'rectRounded',\n    'rectRot',\n    'star',\n    'triangle',\n  ];\n  const markerMap = {\n    tree: 'triangle',\n    square: 'rect',\n    person: 'circle',\n    deceased: 'circle',\n    circle: 'circle',\n    default: 'circle',\n  };\n  if (loadingData) {\n    const env = environ.env.members;\n    const data = [];\n    const dataset = {\n      pointStyle: 'circle',\n    };\n    Object.keys(env).forEach((group, iGroup) => {\n      data.push({\n        name: env[group].name,\n        color: env[group].color,\n        data: [],\n      });\n      const markerProp = env[group].attrs.marker;\n      dataset.pointStyle = markerProp in markerMap ? markerMap[env[group].attrs.marker] : 'circle';\n      Object.keys(env[group].members).forEach((member) => {\n        if (env[group].members[member].pos !== null) {\n          data[iGroup].data.push(\n            env[group].members[member].pos,\n          );\n        }\n      });\n    });\n    return (\n      <CardWrapper title=\"Scatter Plot\">\n        <ScatterChart dataset={dataset} data={data} width=\"600px\" height=\"600px\" />\n      </CardWrapper>\n    );\n  }\n  return null;\n}\n\nScatterPlot.propTypes = {\n  loadingData: PropTypes.bool,\n  environ: PropTypes.shape(),\n  id: PropTypes.number,\n};\n\nScatterPlot.defaultProps = {\n  loadingData: true,\n  environ: {},\n  id: 0,\n};\n\nexport default ScatterPlot;\n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\nimport Heading from './Heading';\n\nexport default class ModelStatusBox extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n    const { msg, title } = this.props;\n    this.state = {\n      msg,\n      title,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.msg !== prevState.msg) {\n      return { msg: nextProps.msg };\n    }\n    return null;\n  }\n\n  render() {\n    const { msg, title } = this.state;\n    return (\n      <div>\n        <div className=\"card w-50 model-status\">\n          <Heading\n            sectionLevel={\"h5\"}\n            style={{ textAlign: 'center', fontSize: 16 }}\n            className={\"card-header bg-primary text-white\"}\n            text={title}\n          />\n          <div className=\"card-body overflow-auto\">\n            <pre className=\"card-text\">\n              { msg }\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModelStatusBox.propTypes = {\n  msg: PropTypes.string,\n  title: PropTypes.string,\n};\n\nModelStatusBox.defaultProps = {\n  msg: '',\n  title: '',\n};\n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\n\nexport default class RunModelButton extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n\n    this.state = {\n      disabledButton: props.disabledButton,\n      errorMessage: props.errorMessage,\n      sendNumPeriods: props.sendNumPeriods,\n      handleRunPeriod: props.handleRunPeriod,\n    };\n  }\n\n  render() {\n    const {\n      disabledButton, sendNumPeriods, handleRunPeriod, errorMessage,\n    } = this.state;\n    return (\n      <div>\n        <button\n          type=\"button\"\n          disabled={disabledButton}\n          onClick={!disabledButton ? sendNumPeriods : null}\n          className=\"btn btn-success m-2\"\n        >\n          {'  '}\n          Run\n          {'  '}\n        </button>\n        {' '}\n        <span>model for</span>\n        {' '}\n        <input\n          type=\"INT\"\n          className=\"from-control m-2 number-input\"\n          style={{ width: '40px' }}\n          placeholder=\"10\"\n          onChange={handleRunPeriod}\n        />\n        {' '}\n        periods.\n        <span className=\"error-message\">\n          {errorMessage}\n        </span>\n      </div>\n    );\n  }\n}\n\nRunModelButton.propTypes = {\n  disabledButton: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  sendNumPeriods: PropTypes.func,\n  handleRunPeriod: PropTypes.func,\n};\n\nRunModelButton.defaultProps = {\n  disabledButton: true,\n  errorMessage: '',\n  sendNumPeriods() {},\n  handleRunPeriod() {},\n};\n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport config from 'IndraReactCommon/config';\nimport PageLoader from './PageLoader';\nimport ErrorCatching from './ErrorCatching';\nimport Heading from './Heading';\n\nconst DETAILS_URL = config.DETAILS_URL;\nconst SOURCE_URL = config.SOURCE_URL;\nconst REGISTRY_URL = config.REGISTRY_URL;\nconst LOCATION_URL = config.LOCATION_URL;\nconst POPHIST_URL = config.POPHIST_URL;\n\n\nexport default class DebugMenuResultBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modelID: this.props.modelID,\n      title: this.props.title,\n      EXEC_KEY: this.props.EXEC_KEY,\n      type: this.props.type,\n      content: \"\",\n      loadingData: true,\n      serverError: false\n    };\n    autoBind(this);\n  }\n\n  async componentDidMount() {\n    const { modelID, EXEC_KEY, type } = this.state\n    try {\n      let res;\n      switch(type) {\n        case \"details\":\n          res = await axios.get(`${DETAILS_URL}${EXEC_KEY}`);\n\n          this.setState({\n            content: JSON.stringify(res.data, null, 2),\n            loadingData: false\n          });\n          break;\n\n        case \"source\":\n          res = await axios.get(`${SOURCE_URL}${modelID}`);\n\n          this.setState({\n            content: res.data,\n            loadingData: false\n          });\n          break;\n\n        case \"registry\":\n          res = await axios.get(`${REGISTRY_URL}`);\n          this.setState({\n            content: JSON.stringify(res.data, null, 2),\n            loadingData: false\n          });\n          break;\n        \n        case \"locations\":\n          res = await axios.get(`${LOCATION_URL}${EXEC_KEY}`);\n          this.setState({\n            content: JSON.stringify(res.data, null, 2),\n            loadingData: false\n          });\n          break;\n\n        case \"pophist\":\n          res = await axios.get(`${POPHIST_URL}${EXEC_KEY}`);\n          this.setState({\n            content: JSON.stringify(res.data, null, 2),\n            loadingData: false\n          });\n          break;\n\n        default:\n          this.setState({\n            serverError: true\n          })\n      }\n    } catch (error) {\n      this.setState({\n        serverError: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      loadingData, serverError, content, title\n    } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    if (loadingData) {\n      return <PageLoader/>;\n    }\n    return (\n      <div>\n        <div className=\"card\">\n          <Heading\n            sectionLevel={\"h5\"}\n            style={{ textAlign: 'center', fontSize: 16 }}\n            className={\"card-header bg-primary text-white\"}\n            text={title}\n          />\n          <div className=\"card-body overflow-auto\">\n            <pre className=\"card-text\">\n              <code>\n                { content }\n              </code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nDebugMenuResultBox.propTypes = {\n  modelID: PropTypes.string,\n  title: PropTypes.string,\n  EXEC_KEY: PropTypes.number,\n  type: PropTypes.string,\n  content: PropTypes.string,\n  loadingData: PropTypes.bool,\n  serverError: PropTypes.bool\n};\n\nDebugMenuResultBox.defaultProps = {\n  modelID: \"\",\n  title: \"\",\n  EXEC_KEY: -1,\n  type: \"\",\n  content: \"\",\n  loadingData: true,\n  serverError: false\n};\n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\nimport config from 'IndraReactCommon/config';\nimport axios from 'axios';\nimport ErrorCatching from './ErrorCatching';\nimport Heading from './Heading';\nimport PageLoader from './PageLoader';\n\nconst AGENT_URL = config.AGENT_URL\n\nexport default class ViewAgentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n\n    this.state = {\n      EXEC_KEY: this.props.EXEC_KEY,\n      agentName: \"\",\n      displayBox: false,\n      title: \"Agent\",\n      errorMessage: \"\",\n      content: \"\",\n      serverError: false,\n      loadingData: false,\n    };\n  }\n\n  handleClick = async () => {\n    const { EXEC_KEY, agentName } = this.state;\n    if (agentName) {\n      this.setState({\n        loadingData: true,\n        errorMessage: \"\"\n      })\n      try {\n        let res = await axios.get(`${AGENT_URL}`, {\n          params: {\n            exec_key: EXEC_KEY,\n            name: agentName\n          }\n        })\n        this.setState({\n          content: JSON.stringify(res.data, null, 2),\n          displayBox: true,\n          loadingData: false\n        });\n      } catch (error) {\n        if (error.response.status === 404) {\n          this.setState({\n            errorMessage: error.response.data.message,\n            loadingData: false,\n            displayBox: false\n          });\n        } else {\n          this.setState({\n            serverError: true\n          });\n        }\n      }\n    }\n    else {\n      this.setState({\n        errorMessage: \"Error: No agent name entered\"\n      })\n    }\n  }\n\n  handleAgentName = (e) => {\n    this.setState({\n      agentName: e.target.value,\n    });\n  }\n\n  renderAgentBox = () => {\n    const { title, content } = this.state;\n    return (\n      <div>\n        <div className=\"card\">\n          <Heading\n            sectionLevel={\"h5\"}\n            style={{ textAlign: 'center', fontSize: 16 }}\n            className={\"card-header bg-primary text-white\"}\n            text={title}\n          />\n          <div className=\"card-body overflow-auto\">\n            <pre className=\"card-text\">\n              <code>\n                { content }\n              </code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { errorMessage, serverError, displayBox, loadingData } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    if (loadingData) {\n      return <PageLoader/>;\n    }\n    return (\n      <div>\n        <div>\n          <div>\n            {' '}\n            <span>Please enter name of agent:</span>\n            {' '}\n            <input\n              type=\"text\"\n              className=\"from-control m-2\"\n              style={{ width: '100px' }}\n              onChange={this.handleAgentName}\n            />\n            <button\n              type=\"button\"\n              onClick={this.handleClick}\n              className=\"btn btn-success m-2\"\n            >\n              {'  '}\n              Submit\n              {'  '}\n            </button>\n            <span className=\"error-message\">\n            {errorMessage}\n            </span>\n          </div>\n          {(displayBox) && this.renderAgentBox()}\n        </div>\n      </div>\n    );\n  }\n}\n\nViewAgentBox.propTypes = {\n  EXEC_KEY: PropTypes.number,\n  agentName: PropTypes.string,\n  displayBox: PropTypes.bool,\n  title: PropTypes.string,\n  errorMessage: PropTypes.string,\n  content: PropTypes.string,\n  serverError: PropTypes.bool,\n  loadingData: PropTypes.bool,\n};\n\nViewAgentBox.defaultProps = {\n  EXEC_KEY: -1,\n  agentName: \"\",\n  displayBox: false,\n  title: \"\",\n  errorMessage: \"\",\n  content: \"\",\n  serverError: false,\n  loadingData: false,\n};\n","import React, { Component } from 'react';\nimport config from 'IndraReactCommon/config';\nimport axios from 'axios';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PropTypes from 'prop-types';\nimport ErrorCatching from './ErrorCatching';\nimport Heading from './Heading';\nimport DebugMenuResultBox from './DebugMenuResultBox';\nimport ViewAgentBox from './ViewAgentBox';\n\nconst BACK_ID = '-1'\nconst BACK_TEXT = \"Back\"\n\nclass DebugMenu extends Component { // from react\n\n  constructor(props){\n    super(props);\n    //const {location} = this.props;\n    this.debug_url = config.DEBUG_URL;\n    this.state = {\n      menu: {},\n      modelID: this.props.modelID,\n      modelName: this.props.modelName,\n      EXEC_KEY: this.props.EXEC_KEY,\n      handleReturn: this.props.handleReturn,\n      activeDisplay: '',\n      serverError: false,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const menu = await axios.get(`${this.debug_url}`);\n      this.setState({\n        menu: menu.data\n      })\n    } catch (e) {\n      this.setState({\n        serverError: true,\n      });\n      console.log(e);\n    }\n  }\n\n  handleClick = (id) => {\n    this.setState({\n      activeDisplay: id,\n    });\n  };\n  \n  MenuItem = (text, url, id) => {\n    const { activeDisplay } = this.state;\n    return (\n      <ListGroup.Item\n        className=\"w-50 p-3 list-group-item list-group-item-action\"\n        as=\"li\"\n        key={id}\n        active = {activeDisplay === id}\n        onClick={() => {\n          this.handleClick(id);\n          console.log(id);\n        }}\n      >\n        {text}\n      </ListGroup.Item>\n    );\n  };\n\n  renderMenuItem = () => {\n    const { menu, activeDisplay, handleReturn } = this.state;\n    return (\n      <div className=\"row margin-bottom-80\">\n        <div className=\"col w-25\">\n          <ListGroup className=\"col-5\">\n            {Object.keys(menu).map((id) => (\n              this.MenuItem(\n              menu[id].question,\n              menu[id].url,\n              id\n              )\n            ))}\n\n            <ListGroup.Item\n              className=\"w-50 p-3 list-group-item list-group-item-action\"\n              as=\"li\"\n              key={BACK_ID}\n              active = {activeDisplay === BACK_ID}\n              onClick={handleReturn}\n            >\n              { BACK_TEXT }\n            </ListGroup.Item>\n          </ListGroup>\n        </div>\n      </div>\n    );\n  };\n\n  renderHeader = () => {\n    const { modelName } = this.state;\n    return (\n      <div>\n        <Heading \n          sectionLevel={\"h1\"} \n          className={\"header\"} \n          text={`Debug menu for ${modelName}`}\n          style={{ marginBottom: '20px' }}\n        />\n      </div>\n    )\n  }\n\n  renderModelDetails = () => {\n    const { EXEC_KEY } = this.state;\n    return (\n      <div>\n          <DebugMenuResultBox\n            EXEC_KEY={ EXEC_KEY }\n            title={ \"Model Details\" }\n            type={ \"details\" }\n          />\n      </div>\n    )\n  }\n\n  renderSourceCode = () => {\n    const { modelID } = this.state;\n    return (\n      <div>\n          <DebugMenuResultBox\n            modelID={ modelID }\n            title={ \"Source Code\" }\n            type={ \"source\" }\n          />\n      </div>\n    )\n  }\n\n  renderAgent = () => {\n    const { EXEC_KEY } = this.state;\n    return (\n      <div>\n        <ViewAgentBox\n          EXEC_KEY={ EXEC_KEY }\n        />\n      </div>\n    )\n  }\n\n  renderRegistry = () => {\n    return (\n      <div>\n          <DebugMenuResultBox\n            title={ \"Registry\" }\n            type={ \"registry\" }\n          />\n      </div>\n    )\n  }\n\n  renderLocations = () => {\n    const { EXEC_KEY } = this.state;\n    return (\n      <div>\n          <DebugMenuResultBox\n            EXEC_KEY={ EXEC_KEY }\n            title={ \"Locations\" }\n            type={ \"locations\" }\n          />\n      </div>\n    )\n  }\n\n  renderPopHist = () => {\n    const { EXEC_KEY } = this.state;\n    return (\n      <div>\n          <DebugMenuResultBox\n            EXEC_KEY={ EXEC_KEY }\n            title={ \"Population History\" }\n            type={ \"pophist\" }\n          />\n      </div>\n    )\n  }\n\n  render() {\n    const { serverError, activeDisplay } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    return (\n      <div>\n        {this.renderHeader()}\n        <div>\n        </div>\n        {this.renderMenuItem()}\n        {(activeDisplay === '1') && this.renderModelDetails()}\n        {(activeDisplay === '2') && this.renderSourceCode()}\n        {(activeDisplay === '3') && this.renderAgent()}\n        {(activeDisplay === '4') && this.renderRegistry()}\n        {(activeDisplay === '5') && this.renderLocations()}\n        {(activeDisplay === '6') && this.renderPopHist()}\n      </div> \n    );\n  }\n}\n\nDebugMenu.propTypes = {\n  modelID: PropTypes.string,\n  modelName: PropTypes.string,\n  EXEC_KEY: PropTypes.number,\n  handleReturn: PropTypes.func,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n};\n\nDebugMenu.defaultProps = {\n  location: {\n    pathname: '',\n  },\n};\n\nexport default DebugMenu;\n","import React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport axios from 'axios';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\nimport PageLoader from './PageLoader';\nimport PopulationGraph from './PopulationGraph';\nimport ScatterPlot from './ScatterPlot';\nimport ModelStatusBox from './ModelStatusBox';\nimport RunModelButton from './RunModelButton';\nimport ErrorCatching from './ErrorCatching';\nimport Button from './Button';\nimport Heading from './Heading';\nimport './styles.css';\nimport config from 'IndraReactCommon/config';\nimport DebugMenu from './DebugMenu';\n\n\nconst POP = 2;\nconst SCATTER = 3;\nconst MENU_URL = config.MENU_URL;\nconst CLEAR_REGISTRY_URL = config.CLEAR_REGISTRY_URL;\nconst USER_MSGS_URL = config.USER_MSGS_URL;\n\nclass RunModel extends Component {\n  constructor(props) {\n    super(props);\n    const { location } = this.props;\n    const { state } = location;\n    const { environ } = state;\n    this.state = {\n      menu: {},\n      loadingData: true,\n      environ: {},\n      source: '',\n      periodNum: 10,\n      errorMessage: '',\n      disabledButton: false,\n      loadingPopulation: false,\n      loadingScatter: false,\n      activeDisplay: null,\n      continuousRun: true,\n      continuousRunDisabled: false,\n      initLoading: true,\n      EXEC_KEY: environ.exec_key,\n      serverError: false,\n      modelID: location.pathname.substr(13),\n      clickedItem: '', \n    };\n    autoBind(this);\n  }\n\n  async componentDidMount() {\n    const { location } = this.props;\n    const { state } = location;\n    const {\n      environ, name, source, graph,\n    } = state;\n    try {\n      document.title = 'Indra | Menu';\n      // you need to pass the execution key that you get from put_props\n      // which is in ModelParams, the current execution key is undefined\n      const m = await axios.get(`${MENU_URL}`);\n      // debugger;\n      this.setState({\n        menu: m.data,\n        name,\n        source,\n        environ,\n        graph,\n        // msg: environ.user.user_msgs,\n        loadingData: false,\n      });\n    } catch (error) {\n      this.setState({\n        serverError: true,\n      });\n      return false;\n    }\n    const defaultGraph = graph;\n    if (defaultGraph === 'scatter') {\n      this.setState({\n        loadingScatter: true,\n        activeDisplay: SCATTER,\n      });\n    } else {\n      this.setState({\n        loadingPopulation: true,\n        activeDisplay: POP,\n      });\n    }\n    try {\n      const code = await this.viewSource();\n      this.setState({\n        sourceCode: code,\n      });\n    } catch (error) {\n      return false;\n    }\n    return true;\n  }\n\n  async componentWillUnmount() {\n    // clear the registry in the backend.\n    const { EXEC_KEY } = this.state;\n    await axios.delete(\n      `${CLEAR_REGISTRY_URL}${EXEC_KEY}`,\n    );\n    // not doing anything with the response.\n    // allow the frontend to continue functioning.\n    // there should be a error reporting mechanism here to notify\n    // admins that a particular key was not cleared.\n  }\n\n\n  viewSource = async () => {\n    try {\n      const { source } = this.state;\n      const splitSource = source.split('/');\n      const filename = splitSource[splitSource.length - 1];\n      const res = await axios.get(\n        `https://raw.githubusercontent.com/gcallah/indras_net/master/models/${filename}`,\n      );\n      return res.data;\n    } catch (error) {\n      // this.setState({\n      //   serverError: true,\n      // });\n      return 'Something has gone wrong.';\n    }\n  };\n\n  handleRunPeriod = (e) => {\n    this.setState({\n      periodNum: e.target.value,\n    });\n\n    const valid = this.checkValidity(e.target.value);\n    if (valid === 0) {\n      this.setState({\n        errorMessage: '**Please input an integer',\n        disabledButton: true,\n      });\n    } else {\n      this.setState({\n        errorMessage: '',\n        disabledButton: false,\n      });\n    }\n  };\n\n  checkValidity = (data) => {\n    if (data % 1 === 0) {\n      return 1;\n    }\n    return 0;\n  };\n\n  handleClick = (e) => {\n    this.setState({\n      loadingData: false,\n      loadingSourceCode: false,\n      loadingDebugger: false,\n      loadingScatter: false,\n      loadingPopulation: false,\n      loadingLogs: false,\n      loadingBar: false,\n    });\n    this.setState({\n      activeDisplay: e,\n    });\n    switch (e) {\n      case POP:\n        this.setState({ loadingPopulation: true });\n        break;\n      case SCATTER:\n        this.setState({ loadingScatter: true });\n        break;\n      default:\n        break;\n    }\n  };\n\n  sendNumPeriods = async () => {\n    const { periodNum, environ, EXEC_KEY } = this.state;\n    const environWithExecutionKey = { ...environ, execution_key: EXEC_KEY };\n    this.setState({ loadingData: true });\n    try {\n      const res = await axios.put(\n        `${config.API_URL}models/run/${String(periodNum)}`,\n        environWithExecutionKey,\n        periodNum,\n      );\n      const msgData = await axios.get(`${USER_MSGS_URL}${EXEC_KEY}`);\n      this.setState({\n        environ: res.data,\n        loadingData: false,\n        msg: msgData.data,\n      });\n      // return true;\n    } catch (e) {\n      // return false;\n      this.setState({\n        serverError: true,\n      });\n    }\n  };\n\n  timeout = (m) => new Promise((r) => setTimeout(r, m))\n\n  continuousRun = async () => {\n    this.setState(\n      {\n        continuousRun: true,\n        continuousRunDisabled: true,\n        periodNum: 1,\n        initLoading: false,\n      },\n    );\n    await this.timeout(200);\n    /* eslint-disable */\n    while (this.state.continuousRun) {\n      // this.setState({periodNum: 1});\n      this.sendNumPeriods();\n      /* eslint-disable */\n      while (this.state.loadingData){\n        await this.timeout(200);\n      /* eslint-disable */\n        console.log('still waiting for data...')\n      }\n      /* eslint-disable */\n      console.log('data arrived!!')\n    }\n  }\n\n  stopRun = () => {\n    this.setState(\n      {\n        continuousRun: false,\n        continuousRunDisabled: false,\n      },\n    );\n  }\n\n  renderHeader = () => {\n    const { name } = this.state;\n    return <Heading \n      sectionLevel={\"h1\"} \n      className={\"header\"} \n      text={name}\n    />;\n  };\n\n  ModelAnalysisMenuItem = (id, action, text) => {\n    /**\n     * All models will have all the menu items appear on the page.\n     * However, we keep one of the graphs (Population graph or Scatter plot)\n     * disabled based on \"graph\" field from models.json\n     */\n    const { graph, EXEC_KEY, activeDisplay} = this.state;\n    const defaultGraph = graph;\n    const { history } = this.props;\n    return (\n      <ListGroup.Item\n        className=\"w-50 p-3 list-group-item list-group-item-action\"\n        as=\"li\"\n        active={activeDisplay === action}\n        disabled={\n          (action === SCATTER && defaultGraph === 'line')\n          || (action === POP && defaultGraph === 'scatter')\n        }\n        key={id}\n        onClick={() => {\n          this.handleClick(action);\n          console.log(id);\n          // if (id === '4') {\n          //   history.push(`/models/debug/${this.state.modelID}`);\n          // }\n          this.setState({ clickedItem: id });\n        }}\n      >\n        {text}\n      </ListGroup.Item>\n    );\n  };\n\n  renderGraph = () => {\n    const {\n      environ,\n      loadingPopulation,\n      loadingScatter,\n      EXEC_KEY\n    } = this.state;\n    return (\n      <div className=\"mt-5\">\n        <PopulationGraph loadingData={loadingPopulation} EXEC_KEY={EXEC_KEY} />\n        <ScatterPlot loadingData={loadingScatter} environ={environ} />\n      </div>\n    );\n  };\n\n  renderModelAnalysisMenu = () => {\n    const { menu } = this.state;\n    return (\n      <div className=\"row margin-bottom-80\">\n        <div className=\"col w-25\">\n        {/* loop over the menu items and add them to menu if active: */}\n          <ListGroup>\n            {Object.keys(menu).map((id) => (\n            menu[id].active_web == true\n              ? this.ModelAnalysisMenuItem(\n                id,\n                parseInt(id),\n                menu[id].question\n              )\n              : null))}\n          </ListGroup>\n        </div>\n      </div>\n    );\n  };\n\n  renderModelStatus = () => {\n    const { msg } = this.state;\n    return (\n      <div>\n          <ModelStatusBox\n            title=\"Model Status\"\n            msg={msg}\n            ref={this.modelStatusBoxElement}\n          />\n        </div>\n    )\n  }\n\n  renderRunButtons = () => {\n    const { disabledButton, errorMessage, continuousRunDisabled } = this.state\n    return (\n        <div>\n          <RunModelButton\n            disabledButton={disabledButton}\n            errorMessage={errorMessage}\n            sendNumPeriods={this.sendNumPeriods}\n            handleRunPeriod={this.handleRunPeriod}\n          />\n          {/* eslint-disable */}\n          <Button\n            onClick={this.continuousRun}\n            disabled={continuousRunDisabled}\n            className={\"btn btn-success m-2\"}\n            text={\"Continuous Run\"}\n          />\n          {/* eslint-disable */}\n          <Button\n            onClick={this.stopRun}\n            className={\"btn btn-danger m-2\"}\n            text={\"Stop\"}\n          />\n        </div>\n    )\n  }\n\n  renderModelAnalysis = () => {\n    return (\n      <div>\n        <Heading \n          sectionLevel={\"h3\"} \n          className={\"margin-top-50 mb-4\"} \n          text={\"Model Analysis:\"}\n        />\n        {this.renderModelAnalysisMenu()}\n      </div>\n    )\n  }\n\n  handleReturnFromDebug = () => {\n    this.setState({\n      clickedItem: ''\n    })\n  }\n\n  render() {\n    const {\n      loadingData, initLoading, serverError, clickedItem, modelID, name, EXEC_KEY\n    } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    if (loadingData && initLoading) {\n      return <PageLoader />;\n    }\n    if (clickedItem === '4'){\n      return <DebugMenu modelID={ modelID } modelName={ name } EXEC_KEY={ EXEC_KEY } handleReturn={ this.handleReturnFromDebug }/>\n    }\n    // if (loadingData && !initLoading){\n    //   return;\n    // }\n   \n    return (\n      <div>\n        {this.renderHeader()}\n        {this.renderModelStatus()}\n        <ul className=\"list-group\">\n            {this.renderRunButtons()}\n            {this.renderModelAnalysis()}\n        </ul>\n        {this.renderGraph()}\n      </div>\n    );\n  }\n}\n\nRunModel.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      environ: PropTypes.object,\n      name: PropTypes.string,\n      source: PropTypes.string,\n      graph: PropTypes.string,\n    }),\n    pathname: PropTypes.string,\n  }),\n  /* eslint-disable */\n  history: PropTypes.object,\n};\n\nRunModel.defaultProps = {\n  location: {\n    state: {\n      environ: {},\n    },\n  },\n  history: {},\n};\n\nexport default RunModel;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport PropTypes from 'prop-types';\nimport Heading from './Heading';\n\nimport './NotFoundPage.css';\n\nconst Status = ({ code, children }) => (\n  <Route\n    render={({ staticContext }) => {\n      if (staticContext) staticContext.status = code;\n      return children;\n    }}\n  />\n);\n\nconst NotFoundPage = () => (\n  <Status code={404}>\n    <div className=\"NotFoundPage\">\n      <Heading\n        sectionLevel={\"h1\"}\n        text={\"Oops!\"}\n      />\n      <div>Page not found.</div>\n      <div className=\"action\">\n        <a className=\"btn btn-primary\" href=\"/\">\n          Guide me to the right path!\n        </a>\n      </div>\n    </div>\n  </Status>\n);\n\nStatus.propTypes = {\n  code: PropTypes.number,\n  children: PropTypes.shape(),\n};\n\nStatus.defaultProps = {\n  code: 0,\n  children: {},\n};\n\nexport default NotFoundPage;\n","import {Dropdown} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport axios from \"axios\";\nimport config from 'IndraReactCommon/config';\n\nexport default function ({ secondData }) {\n  const [action, setAction] = useState(\"\");\n  const [actionName, setActionName] = useState(\"\");\n  const [loadingStepThree, setLoadingStepThree] = useState(false);\n\n  const modelAction = () => {\n    setLoadingStepThree(true);\n    axios.post(`${config.GENERATOR_CREATE_ACTION}${secondData && secondData.exec_key}?group_name=${action}&group_action=${actionName}`)\n      .then((res) => {\n        setLoadingStepThree(false);\n        console.log(res.data);\n      })\n      .catch(() => {\n        window.alert(\"something went wrong\");\n        setLoadingStepThree(false);\n      });\n  }\n  return (\n    <>\n      <p>Describe your action</p>\n      <input\n        className=\"col-sm-4 col-md-4 col-lg-4\"\n        value={action}\n        style={{ width: 200 }}\n        type=\"text\"\n        onChange={e => setAction(e.target.value)}\n      />\n      <br />\n      <div>You can choose a group name from below</div>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"outline-dark\" id=\"dropdown-basic\">\n          Choose...\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <div>23</div>\n          <div>34</div>\n        </Dropdown.Menu>\n      </Dropdown>\n      <div>Describe the group action</div>\n      <input onChange={e => setActionName(e.target.value)} />\n      <br />\n      <button\n        className=\"btn btn-success m-1\"\n        onClick={() => modelAction()}\n        disabled={!action}\n      >\n        Next\n      </button>\n      {loadingStepThree && <span>Loading...</span>}\n    </>\n  );\n}","\nimport React, {useState} from \"react\";\nimport axios from \"axios\";\nimport config from 'IndraReactCommon/config';\nimport ActionsInput from \"./ActionsInput\";\n\nexport default () => {\n  const [step, setStep] = useState(0);\n\n  const [firstData, setFirstData] = useState(null);\n\n  const [name, setName] = useState('');\n  const [loadingStepOne, setLoadingStepOne] = useState(false);\n  const createModel = () => {\n    setLoadingStepOne(true);\n    axios.post(`${config.GENERATOR_CREATE_MODEL}?model_name=${name}`)\n      .then((res) => {\n        setLoadingStepOne(false);\n        setFirstData(res.data);\n        setStep(1);\n        setName('');\n      })\n      .catch(() => {\n        window.alert('something went wrong');\n      });\n  };\n  const renderStepOne = () => (\n    <>\n      <p>Please specify the name of your model.</p>\n      <div>\n        <input value={name} className=\"col-sm-4 col-md-4 col-lg-4\" style={{ width: 200 }} type=\"text\" onChange={e => setName(e.target.value)} />\n      </div>\n      <br />\n      <button\n        disabled={!name}\n        className=\"btn btn-success m-1\"\n        onClick={() => createModel()}\n      >\n        Next\n      </button>\n      {loadingStepOne && <span>Loading...</span>}\n    </>\n  );\n\n  const [secondData, setSecondData] = useState(null);\n\n  const [group, setGroup] = useState({\n    name: '',\n    color: '',\n    membersNum: \"0\",\n    actionsNum: \"0\"\n  });\n  const [loadingStepTwo, setLoadingStepTwo] = useState(false);\n  const modelGroup = () => {\n    setLoadingStepTwo(true);\n    axios.post(`${config.GENERATOR_CREATE_GROUP}${firstData && firstData.exec_key}?group_name=${group.name}&group_color=${group.color}&group_number_of_members=${group.membersNum}&group_actions=${group.actionsNum}`)\n      .then((res) => {\n        setLoadingStepTwo(false);\n        setSecondData(res.data);\n        setStep(2)\n      })\n      .catch(() => {\n        window.alert(\"something went wrong\");\n        setLoadingStepTwo(false);\n      });\n  }\n  const renderStepTwo = () => (\n    <>\n      <p>What is the group name of your model?</p>\n      <div>\n        <input\n          className=\"col-sm-4 col-md-4 col-lg-4\"\n          value={group.name}\n          style={{ width: 200 }}\n          type=\"text\"\n          onChange={e => setGroup({\n            ...group,\n            name: e.target.value\n          })}\n        />\n      </div>\n      <p>What is the color of your group?</p>\n      <div>\n        <input\n          className=\"col-sm-4 col-md-4 col-lg-4\"\n          value={group.color}\n          style={{ width: 200 }}\n          type=\"text\"\n          onChange={e => setGroup({\n            ...group,\n            color: e.target.value\n          })}\n        />\n      </div>\n      <br />\n      <p>How many members are there in your group?</p>\n      <div>\n        <input\n          type=\"INT\"\n          className=\"col-sm-4 col-md-4 col-lg-4\"\n          value={group.membersNum}\n          style={{ width: 200 }}\n          onChange={e => setGroup({\n            ...group,\n            membersNum: e.target.value\n          })}\n        />\n      </div>\n      <button\n        className=\"btn btn-success m-1\"\n        onClick={() => modelGroup()}\n        disabled={!group.name || !group.color}\n      >\n        Next\n      </button>\n      {loadingStepTwo && <span>Loading...</span>}\n    </>\n  );\n\n  const renderStepThree = () => {\n    return (\n      <ActionsInput data={secondData} />\n    )\n  };\n\n  const renderForm = () => {\n    if (step === 0) {\n      return renderStepOne();\n    } else if (step === 1) {\n      return renderStepTwo();\n    } else if (step === 2) {\n      return renderStepThree();\n    }\n  }\n  return (\n    <>\n      <h4>Generate Your Model Now!</h4>\n      {renderForm()}\n    </>\n  );\n}\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport styled, { withTheme } from 'styled-components';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport WIP from './components/WIP';\nimport ModelParams from './components/ModelParams';\nimport RunModel from './components/RunModel';\nimport NotFoundPage from './components/NotFoundPage';\nimport ErrorCatching from './components/ErrorCatching';\nimport DebugMenu from './components/DebugMenu';\nimport autoBind from 'react-autobind';\nimport ModelGenerator from \"./components/ModelGenerator\";\n\n// The styling below should be in a style sheet, not in javascript:\nconst Wrapper = styled('div')`\n  background: ${(props) => props.theme.background};\n  width: 100vw;\n  min-height: 100vh;\n  font-family: -apple-stem, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\";\n  h1 {\n    color: ${(props) => props.theme.body};\n  }\n`;\n\nexport function IndraRoutes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/wip\" component={WIP} />\n      <Route exact path=\"/models/props/:id\" component={ModelParams} />\n      <Route exact path=\"/models/menu/:id\" component={RunModel} />\n      <Route exact path=\"/models/debug/:id\" component={DebugMenu} />\n      <Route exact path=\"/errorCatching\" component={ErrorCatching} />\n      <Route exact path=\"/generator\" component={ModelGenerator} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    window.history.pushState(null, document.title, window.location.href);\n    window.addEventListener('popstate', function (){\n      window.history.pushState(null, document.title,  window.location.href);\n    });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <HashRouter>\n          <Layout>\n            {IndraRoutes()}\n          </Layout>\n        </HashRouter>\n      </Wrapper>\n    );\n  }\n}\n\n\nexport default withTheme(App);\n","import theme from 'styled-theming';\n\nexport const backgroundColor = theme('mode', {\n  light: '#fafafa',\n  dark: '#222',\n});\n\nexport const textColor = theme('mode', {\n  light: '#000',\n  dark: '#fff',\n});\n\nexport const buttonBackgroundColor = theme('mode', {\n  light: '#222',\n  dark: '#eee',\n});\n\nexport const buttonTextColor = theme('mode', {\n  light: '#eee',\n  dark: '#222',\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable arrow-parens */\n/* eslint-disable arrow-body-style */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { Switch as Switch2 } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { backgroundColor, textColor } from './theme';\n\n\nconst ThemeToggleContext = React.createContext();\n\nexport const useTheme = () => React.useContext(ThemeToggleContext);\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#060606',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#060606',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch2\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport const MyThemeProvider = ({ children }) => {\n  const [themeState, setThemeState] = React.useState({\n    mode: 'light',\n    checkedB: true,\n\n  });\n\n  const Wrapper = styled.div`\n    background-color: ${backgroundColor};\n    color: ${textColor};\n  `;\n\n  const toggle = name => event => {\n    const mode = (themeState.mode === 'light' ? 'dark' : 'light');\n    setThemeState({ mode, [name]: event.target.checked });\n  };\n\n  return (\n    <ThemeToggleContext.Provider value={{ toggle }}>\n      <ThemeProvider\n        theme={{\n          mode: themeState.mode,\n        }}\n      >\n        <Wrapper>\n          <IOSSwitch\n            checked={themeState.checkedB}\n            onChange={toggle('checkedB')}\n            value=\"checkedB\"\n          />\n          {children}\n        </Wrapper>\n      </ThemeProvider>\n    </ThemeToggleContext.Provider>\n  );\n};\n\nexport default MyThemeProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MyThemeProvider } from './darkTheme/ThemeContext';\n\nReactDOM.render(\n  <MyThemeProvider>\n    <App />\n  </MyThemeProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}