{"version":3,"sources":["components/images/Sandpile.jpg","components/images/sandpile_2.png","components/images/mendelobrot_sq.jpg","components/Header.js","components/Layout.js","components/Carousel.js","components/Heading.js","components/Paragraph.js","components/ErrorCatching.js","../../IndraReactCommon/config.js","components/Button.js","components/Home.js","components/WIP.js","components/ModelInputField.js","components/PageLoader.js","components/ModelParams.js","components/CardWrapper.js","components/PopulationGraph.js","components/ScatterPlot.js","components/ModelStatusBox.js","components/RunModelButton.js","components/DebugMenuResultBox.js","components/ViewAgentBox.js","components/DebugMenu.js","components/RunModel.js","components/NotFoundPage.js","components/ModelGenerator.js","App.js","darkTheme/theme.js","darkTheme/ThemeContext.js","index.js"],"names":["module","exports","Header","Navbar","bg","expand","Nav","className","Link","as","to","Toggle","aria-controls","Collapse","id","href","Layout","props","children","Container","rel","defaultProps","Carousel","renderImage","dots","speed","autoplay","data","settings","arrows","infinite","slidesToShow","slidesToScroll","fade","areAllImagesLoaded","imagesLoadedStatus","state","i","length","map","item","index","key","title","src","image","style","display","alt","data-toggle","data-placement","onLoad","imagesLoadedStatusCopy","slice","setState","Array","fill","this","Component","Heading","autoBind","sectionLevel","text","heading","React","Paragraph","ErrorCatching","loadingData","a","document","Dimmer","active","inverted","Loader","size","textAlign","API_URL","process","REACT_APP_API_URL","config","PROPS_URL","MENU_URL","RUN_URL","CLEAR_REGISTRY_URL","POPHIST_URL","USER_MSGS_URL","DEBUG_URL","SOURCE_URL","REGISTRY_URL","LOCATION_URL","DETAILS_URL","AGENT_URL","GENERATOR_CREATE_MODEL","GENERATOR_CREATE_GROUP","GENERATOR_CREATE_ACTION","Button","onClick","disabled","type","Home","renderChooseModelProp","marginBottom","allItems","apiFailed","dataForCarousel","sandpileImg","sandpile1Img","mandelobrotImg","serverError","api_server","useGenerator","REACT_APP_USE_GENERATOR","history","axios","get","res","localStorage","setItem","JSON","stringify","push","Col","sm","lg","Dropdown","variant","Menu","Object","keys","OverlayTrigger","name","placement","overlay","Tooltip","doc","pathname","modelID","menuId","source","graph","marginTop","cols","span","offset","WIP","ModelInputField","label","placeholder","propChange","error","htmlFor","autoFocus","fontSize","onChange","color","PageDimmer","apiServer","ModelParams","states","modelParams","forEach","detailName","prevState","defaultVal","val","errors","errorMessage","disabledButton","errorSubmit","ans","propChanged","e","target","value","valid","checkValidity","parseInt","lowval","hival","atype","handleSubmit","event","preventDefault","put","itemId","environ","execKey","exec_key","toString","renderHeader","fontWeight","renderSubmitButton","goback","goBack","initialModelDetailState","getInitialModelDetails","properties","initialState","location","match","undefined","params","parse","getItem","filter","err","PageLoader","question","CardWrapper","Card","Body","PopulationGraph","useState","popHist","setPopHist","EXEC_KEY","useEffect","pops","fetchPopHist","colors","thisColor","env","group","iGroup","member","iMember","width","height","xtitle","ytitle","ScatterPlot","markerMap","tree","square","person","deceased","circle","default","members","dataset","pointStyle","markerProp","attrs","marker","pos","ModelStatusBox","msg","nextProps","RunModelButton","sendNumPeriods","handleRunPeriod","DebugMenuResultBox","content","ViewAgentBox","handleClick","agentName","displayBox","response","status","message","handleAgentName","renderAgentBox","DebugMenu","activeDisplay","MenuItem","url","ListGroup","Item","console","log","renderMenuItem","menu","handleReturn","modelName","renderModelDetails","renderSourceCode","renderAgent","renderRegistry","renderLocations","renderPopHist","debug_url","RunModel","viewSource","splitSource","split","filename","periodNum","loadingSourceCode","loadingDebugger","loadingScatter","loadingPopulation","loadingLogs","loadingBar","environWithExecutionKey","execution_key","String","msgData","timeout","m","Promise","r","setTimeout","continuousRun","continuousRunDisabled","initLoading","stopRun","ModelAnalysisMenuItem","action","defaultGraph","clickedItem","renderGraph","renderModelAnalysisMenu","renderModelStatus","ref","modelStatusBoxElement","renderRunButtons","renderModelAnalysis","handleReturnFromDebug","substr","code","sourceCode","delete","Status","render","staticContext","NotFoundPage","ModelGenerator","step","setStep","firstData","setFirstData","setName","loadingStepOne","setLoadingStepOne","renderStepOne","post","then","catch","window","alert","secondData","setSecondData","membersNum","actionsNum","setGroup","loadingStepTwo","setLoadingStepTwo","renderStepTwo","setAction","loadingStepThree","setLoadingStepThree","renderStepThree","Wrapper","styled","theme","background","body","App","pushState","addEventListener","exact","path","component","withTheme","backgroundColor","light","dark","textColor","ThemeToggleContext","createContext","IOSSwitch","withStyles","root","padding","margin","spacing","switchBase","transform","palette","common","white","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","MyThemeProvider","mode","checkedB","themeState","setThemeState","div","toggle","Provider","ReactDOM","getElementById"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,mQC+B5BC,MAzBf,WACE,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GANf,KAML,SAIF,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,oBAClB,kBAACR,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CACEO,KAAK,mDADP,SAKA,kBAACT,EAAA,EAAIE,KAAL,CAAUO,KAAK,0CAAf,mBCjBV,SAASC,EAAOC,GAAQ,IACdC,EAAaD,EAAbC,SACR,OACE,kBAACC,EAAA,EAAD,KACE,0BAAMC,IAAI,aAAaL,KAAK,wEAC5B,kBAAC,EAAD,MACCG,GASPF,EAAOK,aAAe,CACpBH,SAAU,IAGGF,Q,gHClBTM,E,kDACJ,WAAYL,GAAQ,IAAD,uBACjB,cAAMA,IAORM,YAAc,WAAO,IAAD,EAGd,EAAKN,MADPO,EAFgB,EAEhBA,KAAMC,EAFU,EAEVA,MAAOC,EAFG,EAEHA,SAAUnB,EAFP,EAEOA,UAAWoB,EAFlB,EAEkBA,KAE9BC,EAAW,CACfC,QAAQ,EACRL,OACAM,UAAU,EACVL,QACAM,aAAc,EACdC,eAAgB,EAChBN,WACAO,MAAM,EACN1B,aAEI2B,EAAqB,WAEzB,IAFgC,IACxBC,EAAuB,EAAKC,MAA5BD,mBACCE,EAAI,EAAGA,EAAIF,EAAmBG,OAAQD,GAAK,EAClD,IAAKF,EAAmBE,GAAI,OAAO,EAErC,OAAO,GAET,OACE,6BACE,kBAAC,IACKT,EAEHD,EAAKY,KAAI,SAACC,EAAMC,GAAP,OACR,yBAAKC,IAAKF,EAAKG,OACZT,IAAuB,KAAO,2CAC/B,yBACEU,IAAKJ,EAAKK,MACVC,MAAOZ,IAAuB,GAAK,CAAEa,QAAS,QAC9CxC,UAAU,0BACVyC,IAAI,mBACJC,cAAY,UACZC,iBAAe,MACfP,MAAOH,EAAKG,MACZQ,OAAQ,WAAO,IAEPC,EADyB,EAAKhB,MAA5BD,mBAC0CkB,QAClDD,EAAuBX,IAAS,EAChC,EAAKa,SAAS,CACZnB,mBAAoBiB,cAjDpC,IAAMjB,EAAqB,IAAIoB,MAAMtC,EAAMU,KAAKW,QAAQkB,MAAK,GAF5C,OAGjB,EAAKpB,MAAQ,CACXD,sBAJe,E,0CA8DnB,WACE,OACE,6BACGsB,KAAKlC,mB,GAlESmC,aAmFvBpC,EAASD,aAAe,CACtBG,MAAM,EACNC,MAAO,IACPC,UAAU,EACVnB,UAAW,GACXoB,KAAM,IAGOL,Q,iGC7FMqC,E,kDACnB,WAAY1C,GAAQ,IAAD,6BACjB,cAAMA,GACN2C,IAAS,gBAET,EAAKxB,MAAQ,CACXyB,aAAc,EAAK5C,MAAM4C,aACzBC,KAAM,EAAK7C,MAAM6C,KACjBvD,UAAW,EAAKU,MAAMV,UACtBuC,MAAO,EAAK7B,MAAM6B,OARH,E,0CAYnB,WAAU,IAIJiB,EAJG,EAGHN,KAAKrB,MADPyB,EAFK,EAELA,aAAcC,EAFT,EAESA,KAAMvD,EAFf,EAEeA,UAAWuC,EAF1B,EAE0BA,MAgBjC,MAbqB,OAAjBe,EACFE,EAAU,wBAAIxD,UAAWA,EAAWuC,MAAOA,GAAQgB,GACzB,OAAjBD,EACTE,EAAU,wBAAIxD,UAAWA,EAAWuC,MAAOA,GAAQgB,GACzB,OAAjBD,EACTE,EAAU,wBAAIxD,UAAWA,EAAWuC,MAAOA,GAAQgB,GACzB,OAAjBD,EACTE,EAAU,wBAAIxD,UAAWA,EAAWuC,MAAOA,GAAQgB,GACzB,OAAjBD,EACTE,EAAU,wBAAIxD,UAAWA,EAAWuC,MAAOA,GAAQgB,GACzB,OAAjBD,IACTE,EAAU,wBAAIxD,UAAWA,EAAWuC,MAAOA,GAAQgB,IAGnD,6BACGC,O,GAjC4BC,IAAMN,WA8C3CC,EAAQtC,aAAe,CACrBwC,aAAc,KACdtD,UAAW,GACXuD,KAAM,GACNhB,MAAO,I,IClDYmB,E,kDACnB,WAAYhD,GAAQ,IAAD,6BACjB,cAAMA,GACN2C,IAAS,gBAET,EAAKxB,MAAQ,CACX7B,UAAW,EAAKU,MAAMV,UACtBuD,KAAM,EAAK7C,MAAM6C,KACjBhB,MAAO,EAAK7B,MAAM6B,OAPH,E,0CAWnB,WAAU,IAAD,EAGHW,KAAKrB,MADP7B,EAFK,EAELA,UAAWuD,EAFN,EAEMA,KAAMhB,EAFZ,EAEYA,MAEnB,OACE,6BACE,uBAAGvC,UAAWA,EAAWuC,MAAOA,GAC7BgB,Q,GAnB4BE,IAAMN,WAgC7CO,EAAU5C,aAAe,CACvBd,UAAW,GACXuD,KAAM,GACNhB,MAAO,I,ICUMoB,E,kDA3Cb,WAAYjD,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACX+B,aAAa,GAHE,E,4FAOnB,sBAAAC,EAAA,sDACEX,KAAKH,SAAS,CAAEa,aAAa,IAC7BE,SAAS1B,MAAQ,2BACjBc,KAAKH,SAAS,CAAEa,aAAa,IAH/B,gD,0EAMA,WAEE,OADwBV,KAAKrB,MAArB+B,YAGJ,kBAACG,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAQC,KAAK,WAAb,eAMJ,6BACE,6BACA,kBAAC,EAAD,CACEb,aAAc,KACdf,MAAO,CAAE6B,UAAW,UACpBb,KAAM,uBAER,6BACA,6BACA,kBAAC,EAAD,CACEA,KAAQ,iGAEV,6BACA,kC,GAtCoBJ,aCSvBkB,EAAU,kCAEVC,iIAAYC,oBACdF,EAAUC,iIAAYC,mBAGxB,IAkBeC,EAFA,CAAEH,UAASI,UAhBVJ,EAAU,gBAgBWK,SAftBL,EAAU,cAesBM,QAdjCN,EAAU,cAcgCO,mBAb/BP,EAAU,kBAayCQ,YAZ1DR,EAAU,WAY6DS,cAXrET,EAAU,aAW0EU,UAVxFV,EAAU,cAUyFW,WATlGX,EAAU,UASoGY,aAR5GZ,EAAU,WAQgHa,aAP1Hb,EAAU,aAO8Hc,YANzId,EAAU,UAM4Ie,UALxJf,EAAU,QAKyJgB,uBAJtJhB,EAAU,+BAIoKiB,uBAH9KjB,EAAU,gCAG4LkB,wBAFrMlB,EAAU,mCC9BpBmB,E,kDACnB,WAAY9E,GAAQ,IAAD,6BACjB,cAAMA,GACN2C,IAAS,gBAET,EAAKxB,MAAQ,CACX7B,UAAW,EAAKU,MAAMV,UACtBuD,KAAM,EAAK7C,MAAM6C,KACjBkC,QAAS,EAAK/E,MAAM+E,QACpBC,SAAU,EAAKhF,MAAMgF,SACrBC,KAAM,EAAKjF,MAAMiF,MATF,E,0CAanB,WAAU,IAAD,EAGHzC,KAAKrB,MADP7B,EAFK,EAELA,UAAWuD,EAFN,EAEMA,KAAMkC,EAFZ,EAEYA,QAASC,EAFrB,EAEqBA,SAAUC,EAF/B,EAE+BA,KAEtC,OACE,6BACE,4BACE3F,UAAaA,EACbyF,QAASA,EACTC,SAAUA,EACVC,KAAMA,GAELpC,Q,GA1ByBE,IAAMN,WAyC1CqC,EAAO1E,aAAe,CACpBd,UAAW,GACXuD,KAAM,GACNkC,QAHoB,aAIpBC,UAAU,EACVC,KAAM,I,IC7BFC,E,kDACJ,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IAoCRmF,sBAAwB,kBACtB,kBAAC,EAAD,CACEvC,aAAc,KACdtD,UAAW,eACXuD,KAAM,0BACNhB,MAAO,CAAEuD,aAAc,WAxCzB,EAAKjE,MAAQ,CACXkE,SAAU,GACVnC,aAAa,EACboC,WAAW,EACXC,gBAAiB,CACf,CAAE3D,MAAO4D,IAAa9D,MAAO,qBAC7B,CAAEE,MAAO6D,IAAc/D,MAAO,qBAC9B,CAAEE,MAAO8D,IAAgBhE,MAAO,qBAElCiE,aAAa,GAEf,EAAKC,WAAa9B,EAAOH,QACzB,EAAKkC,aAAejC,iIAAYkC,wBAdf,E,4FAkBnB,8BAAA3C,EAAA,6DACU4C,EAAYvD,KAAKxC,MAAjB+F,QADV,SAGIvD,KAAKH,SAAS,CAAEa,aAAa,IAC7BE,SAAS1B,MAAQ,OAJrB,SAKsBsE,IAAMC,IAAN,UAAazD,KAAKoD,WAAlB,uBALtB,OAKUM,EALV,OAOI1D,KAAKH,SAAS,CAAEgD,SAAUa,EAAIxF,KAAMwC,aAAa,IAGjDiD,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUJ,EAAIxF,OAVnE,kDAYI8B,KAAKH,SAAS,CACZsD,aAAa,IAEfI,EAAQQ,KAAK,kBAfjB,0D,0EA4BA,WAAU,IAAD,EAGH/D,KAAKrB,MADP+B,EAFK,EAELA,YAAaqC,EAFR,EAEQA,gBAAiBF,EAFzB,EAEyBA,SAAUC,EAFnC,EAEmCA,UAE1C,OAJO,EAE8CK,YAG5C,kBAAC,EAAD,MAELL,EACK,kBAAC,EAAD,CACL1C,aAAc,KACdC,KAAM,cAGNK,EAEA,kBAACG,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAQC,KAAK,WAAb,eAKJ,yBAAKnE,UAAU,aACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CACEsD,aAAc,KACdtD,UAAW,YACXuD,KAAM,uCAGV,yBAAKvD,UAAU,OACb,kBAACkH,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGpH,UAAU,QAC3BkD,KAAK2C,wBACN,kBAACwB,EAAA,EAAD,KACE,kBAACA,EAAA,EAASjH,OAAV,CAAiBkH,QAAQ,eAAe/G,GAAG,kBAA3C,aAGA,kBAAC8G,EAAA,EAASE,KAAV,KACGC,OAAOC,KAAK1B,GAAU/D,KAAI,SAACC,GAAD,MAAa,WAAY8D,EAAS9D,KAC9B,IAA1B8D,EAAS9D,GAAM+B,OAsBd,KArBF,kBAAC0D,EAAA,EAAD,CACEvF,IAAG,UAAK4D,EAAS9D,GAAM0F,KAApB,YACHC,UAAU,QACVC,QAAS,kBAACC,EAAA,EAAD,KAAU/B,EAAS9D,GAAM8F,MAElC,kBAAC,IAAD,CACE5H,GAAI,CACF6H,SAAS,iBAAD,OAAmBjC,EAAS9D,GAAMgG,SAC1CpG,MAAO,CACLqG,OAAQnC,EAAS9D,GAAMgG,QACvBN,KAAM5B,EAAS9D,GAAM0F,KACrBQ,OAAQpC,EAAS9D,GAAMkG,OACvBC,MAAOrC,EAAS9D,GAAMmG,QAG1BpI,UAAU,+BACVmC,IAAK4D,EAAS9D,GAAM0F,MAEnB5B,EAAS9D,GAAM0F,WAMxBzE,KAAKqD,cACH,yBAAKhE,MAAO,CAAE8F,UAAW,MACvB,kBAAC,IAAD,CAAMlI,GAAG,cACP,kBAAC,EAAD,CAAQoD,KAAK,2BAMzB,kBAAC2D,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,CAAEkB,KAAM,EAAGC,KAAM,EAAGC,OAAQ,IAC3C,kBAAC,EAAD,CACEtH,MAAO,IACPC,UAAQ,EACRnB,UAAU,MACVoB,KAAM6E,W,GA5HD9C,aAyInByC,EAAK9E,aAAe,CAClB2F,QAAS,IAGIb,QClHA6C,E,kDA3Cb,WAAY/H,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACX+B,aAAa,GAHE,E,4FAOnB,sBAAAC,EAAA,sDACEX,KAAKH,SAAS,CAAEa,aAAa,IAC7BE,SAAS1B,MAAQ,2BACjBc,KAAKH,SAAS,CAAEa,aAAa,IAH/B,gD,0EAMA,WAEE,OADwBV,KAAKrB,MAArB+B,YAGJ,kBAACG,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAQC,KAAK,WAAb,eAMJ,6BACE,6BACA,kBAAC,EAAD,CACEb,aAAc,KACdf,MAAO,CAAE6B,UAAW,UACpBb,KAAM,uCAER,6BACA,6BAEA,oEAEA,6BACA,kC,GAtCUJ,a,kBCDlB,SAASuF,GAAgBhI,GAAQ,IAE7BiI,EACEjI,EADFiI,MAAOhB,EACLjH,EADKiH,KAAMhC,EACXjF,EADWiF,KAAMiD,EACjBlI,EADiBkI,YAAaC,EAC9BnI,EAD8BmI,WAAYC,EAC1CpI,EAD0CoI,MAE9C,OACE,yBAAK3G,IAAKwG,EAAO3I,UAAU,cACzB,6BACE,2BACE+I,QAASpB,EACT3H,UAAU,6BACVmC,IAAKwG,GAEJA,EACA,IACA,KAEH,2BAEEK,WAAS,EACTzI,GAAIoH,EACJhC,KAAMA,EACN3F,UAAU,6BACVuC,MAAO,CAAE0G,SAAU,QACnBL,YAAaA,EACbM,SAAUL,EACVlB,KAAMA,IAER,0BAAM3H,UAAU,6BAA6BuC,MAAO,CAAE4G,MAAO,MAAOF,SAAU,KAC3EH,GAEH,+BAeRJ,GAAgB5H,aAAe,CAC7B6H,MAAO,GACPhB,KAAM,GACNhC,KAAM,GACNiD,YAAa,EACbC,WAL6B,aAM7BC,MAAO,IAGMJ,UC9CAU,OARf,WACE,OACE,kBAACrF,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAQC,KAAK,WAAb,gBCUAkF,GAAY7E,EAAOC,UAEnB6E,G,kDACJ,WAAY5I,GAAQ,IAAD,uBACjB,cAAMA,IAwDR6I,OAAS,SAACnI,GAAU,IACVoI,EAAgB,EAAK3H,MAArB2H,YAERhC,OAAOC,KAAK+B,GAAaC,SAAQ,SAACC,GAChC,EAAK3G,UAAS,SAAC4G,GAAD,MAAgB,CAC5BH,YAAY,6BACPG,EAAUH,aADJ,mBAERE,EAFQ,6BAGJC,EAAUH,YAAYE,IAHlB,IAIPE,WAAYxI,EAAKsI,GAAYG,gBAlEpB,EA0EnBC,OAAS,WAAO,IACNN,EAAgB,EAAK3H,MAArB2H,YACRhC,OAAOC,KAAK+B,GAAaC,SAAQ,SAACxH,GAAD,OAAU,EAAKc,UAAS,SAAC4G,GAAD,MAAgB,CACvEH,YAAY,6BACPG,EAAUH,aADJ,mBAERvH,EAFQ,6BAGJ0H,EAAUH,YAAYvH,IAHlB,IAIP8H,aAAc,GACdC,gBAAgB,cAlFL,EAwFnBC,YAAc,WAAO,IACXT,EAAgB,EAAK3H,MAArB2H,YACJU,GAAM,EAIV,OAHA1C,OAAOC,KAAK+B,GAAaC,SAAQ,SAACxH,GAChCiI,EAAMA,GAAOV,EAAYvH,GAAM+H,kBAE1BE,GA9FU,EAiGnBC,YAAc,SAACC,GAAO,IACZZ,EAAgB,EAAK3H,MAArB2H,YADW,EAEKY,EAAEC,OAAlB1C,EAFW,EAEXA,KAAM2C,EAFK,EAELA,MACRC,EAAQ,EAAKC,cAAc7C,EAAM2C,GACvCd,EAAY7B,GAAMqC,gBAAiB,EA7G5B,IA+GHO,GACFf,EAAY7B,GAAMkC,IAAMY,SAASH,EAAO,IACxCd,EAAY7B,GAAMoC,aAAe,GACjCP,EAAY7B,GAAMqC,gBAAiB,EACnC,EAAKjH,SAAS,CAAEyG,kBAlHL,IAmHFe,GACTf,EAAY7B,GAAMoC,aAAe,qBACjCP,EAAY7B,GAAMkC,IAAML,EAAY7B,GAAMiC,WAC1C,EAAK7G,SAAS,CAAEyG,kBAEhBA,EACE7B,GACAoC,aAFF,0CAEoDP,EAAY7B,GAAM+C,OAFtE,gBAEoFlB,EAAY7B,GAAMgD,MAFtG,KAGAnB,EAAY7B,GAAMkC,IAAML,EAAY7B,GAAMiC,WAC1C,EAAK7G,SAAS,CAAEyG,iBAGlB,EAAKzG,SAAS,CAAEiH,eAAgB,EAAKC,iBAxHpB,EA2HnBO,cAAgB,SAAC7C,EAAM2C,GAAW,IACxBd,EAAgB,EAAK3H,MAArB2H,YACR,OACEc,GAASd,EAAY7B,GAAMgD,OACxBL,GAASd,EAAY7B,GAAM+C,OAEE,QAA5BlB,EAAY7B,GAAMiD,QAAqC,OAAfN,EAAQ,IAGpB,QAA5Bd,EAAY7B,GAAMiD,MA5IjB,GACM,EACI,GAMA,EA6InBC,aA7ImB,uCA6IJ,WAAOC,GAAP,mCAAAjH,EAAA,6DACbiH,EAAMC,iBADO,EAIT,EAAKlJ,MADP2H,EAHW,EAGXA,YAAatB,EAHF,EAGEA,OAAQP,EAHV,EAGUA,KAAMQ,EAHhB,EAGgBA,OAAQC,EAHxB,EAGwBA,MAE7B3B,EAAY,EAAK/F,MAAjB+F,QALK,kBAQOC,IAAMsE,IACtB3B,GAAYnB,EACZsB,GAVS,OAQL5C,EARK,OAYLqE,EAAS/C,EACTgD,EAAUtE,EAAIxF,KACd+J,EAAUvE,EAAIxF,KAAKgK,SACzB3E,EAAQQ,KAAK,CACXe,SAAS,gBAAD,OAAkBiD,EAAOI,SAAS,KAC1CxJ,MAAO,CACLqJ,UACAvD,OACAQ,SACAC,QACA+C,aAtBO,kDA0BX,EAAKpI,SAAS,CACZsD,aAAa,IAEfI,EAAQQ,KAAK,kBA7BF,0DA7II,wDA8KnBqE,aAAe,WAAO,IACZ3D,EAAS,EAAK9F,MAAd8F,KACR,OACE,kBAAC,EAAD,CACErE,aAAc,KACdtD,UAAW,SACXuC,MAAO,CAAE6B,UAAW,SAAUmH,WAAY,OAC1ChI,KAAI,4CAAuCoE,EAAvC,aArLS,EA0LnB6D,mBAAqB,WAAO,IAClBxB,EAAmB,EAAKnI,MAAxBmI,eAER,OACE,kBAAC,EAAD,CACErE,KAAM,SACNF,QAAUuE,EAAqC,KAApB,EAAKa,aAChCnF,SAAUsE,EACVhK,UAAW,sBACXuD,KAAM,YAnMO,EAwMnBkI,OAAS,WACa,EAAK/K,MAAjB+F,QACAiF,UAxMR,IAAMC,EAA0B,EAAKC,yBAFpB,OAGjB,EAAK/J,MAAL,cACE2H,YAAa,GACb5F,aAAa,EACboG,gBAAgB,EAChB3D,aAAa,GACVsF,GARY,E,4FAYnB,gCAAA9H,EAAA,6DACU4C,EAAYvD,KAAKxC,MAAjB+F,QACAyB,EAAWhF,KAAKrB,MAAhBqG,OAFV,SAIIpE,SAAS1B,MAAQ,mBACjBc,KAAKH,SAAS,CAAEa,aAAa,IALjC,SAM6B8C,IAAMC,IAAN,UACpB0C,IADoB,OACRnB,IAPrB,OAMU2D,EANV,OASI3I,KAAKH,SAAS,CAAEyG,YAAaqC,EAAWzK,OACxC8B,KAAKqG,OAAOsC,EAAWzK,MACvB8B,KAAK4G,OAAO+B,EAAWzK,MACvB8B,KAAKH,SAAS,CAAEa,aAAa,IAZjC,kDAcIV,KAAKH,SAAS,CACZsD,aAAa,IAEfI,EAAQQ,KAAK,kBAjBjB,0D,0FAqBA,WAA0B,IAEpB6E,EAFmB,EACc5I,KAAKxC,MAAlCqL,EADe,EACfA,SAAUtF,EADK,EACLA,QAASuF,EADJ,EACIA,MAE3B,IAAK,IACKnK,EAAUkK,EAAVlK,MACR,QAAcoK,IAAVpK,EAAqB,CAEvB,IAAMqG,EAASuC,SAASuB,EAAME,OAAO3L,GAAI,IACnCiJ,EAAczC,KAAKoF,MAAMtF,aAAauF,QAAQ,wBAAwBC,QAAO,SAACpK,GAAD,OAAUA,EAAK,cAAgBiG,KAAQ,GAC1H4D,EAAe,CACb5D,SACAP,KAAM6B,EAAY7B,KAClBQ,OAAQqB,EAAYrB,OACpBC,MAAOoB,EAAYpB,YAGrB0D,EAAejK,EAEjB,MAAOyK,GACP7F,EAAQQ,KAAK,kBAEf,OAAO6E,I,oBAuJT,WAAU,IAAD,SAC2C5I,KAAKrB,MAA/C+B,EADD,EACCA,YAAa4F,EADd,EACcA,YACrB,OAFO,EAC2BnD,YAEzB,kBAAC,EAAD,MAELzC,EACK,kBAAC2I,GAAD,MAGP,6BACE,kBAAC,EAAD,CACEjJ,aAAc,KACdtD,UAAW,kBAEZkD,KAAKoI,eACN,6BACA,6BACA,8BACE,yBAAKtL,UAAU,aACZwH,OAAOC,KAAK+B,GAAaxH,KAAI,SAACC,GAC7B,MAtOG,aAsOauH,EAAYvH,IACS,MAA/BuH,EAAYvH,GAAZ,SAEF,kBAAC,GAAD,CACE0G,MAAOa,EAAYvH,GAAMuK,SACzB7G,KAAM6D,EAAYvH,GAAM2I,MACxBhC,YAAaY,EAAYvH,GAAM4H,IAC/Bf,MAAOU,EAAYvH,GAAM8H,aACzBlB,WAAY,EAAKsB,YACjBxC,KAAM1F,EACNE,IAAKF,IAIJ,UAIb,6BACA,6BACCiB,KAAKsI,0B,GAtPYrI,aA6Q1BmG,GAAYxI,aAAe,CACzB2F,QAAS,GACTsF,SAAU,CACRlK,MAAO,IAETmK,MAAO,CACLE,OAAQ,CACN3L,GAAI,MAKK+I,U,+CCrRAmD,GAjBK,SAAC,GAAD,IAAGrK,EAAH,EAAGA,MAAOzB,EAAV,EAAUA,SAAV,OAClB,kBAAC+L,GAAA,EAAD,KACE,kBAAC,EAAD,CACEpJ,aAAc,KACdf,MAAO,CAAE6B,UAAW,SAAU6E,SAAU,IACxCjJ,UAAW,oCACXuD,KAAMnB,IAER,kBAACsK,GAAA,EAAKC,KAAN,KAAYhM,KCJVkE,GAAeL,EAAOK,YAE5B,SAAS+H,GAAgBlM,GAAQ,IAAD,EACAmM,mBAAS,IADT,oBACvBC,EADuB,KACdC,EADc,KAEtBnJ,EAA0BlD,EAA1BkD,YAAaoJ,EAAatM,EAAbsM,SACrBC,qBAAU,WAAM,4CACd,4BAAApJ,EAAA,+EAEsB6C,IAAMC,IAAN,UAAa9B,IAAb,OAA2BmI,IAFjD,OAEUpG,EAFV,OAGImG,EAAWnG,EAAIxF,KAAK8L,MAHxB,yEAKW,kBAAC,EAAD,OALX,0DADc,uBAAC,WAAD,wBAUdC,KACC,CAACzM,EAAOsM,IAEX,IACMI,EAAS,CAAC,MAAO,QAAS,OAAQ,QAAS,SAAU,UAAW,UAClEC,EAAY,EAChB,GAAIzJ,EAAa,CACf,IAAMxC,EAAO,GACPkM,EAAMR,EAkBZ,OAfAtF,OAAOC,KAAK6F,GAAK7D,SAAQ,SAAC8D,EAAOC,GAC/BpM,EAAK6F,KAAK,CACRU,KAAM4F,EACNpE,MAAOiE,EAAOC,EAXD,GAcbjM,KAAM,KAIRoG,OAAOC,KAAK6F,EAAIC,IAAQ9D,SAAQ,SAACgE,EAAQC,GACvCtM,EAAKoM,GAAQpM,KAAKqM,GAAUH,EAAIC,GAAOG,MAEzCL,GAAa,KAGb,kBAAC,GAAD,CAAajL,MAAM,oBACjB,kBAAC,KAAD,CAAWhB,KAAMA,EAAMuM,MAAM,QAAQC,OAAO,QAAQC,OAAO,SAASC,OAAO,gBAIjF,OAAO,KAQTlB,GAAgB9L,aAAe,CAC7B8C,aAAa,EACboJ,SAAU,GAGGJ,UC9Df,SAASmB,GAAYrN,GAAQ,IACnBkD,EAA6BlD,EAA7BkD,YAAasH,EAAgBxK,EAAhBwK,QAaf8C,GAb+BtN,EAAPH,GAaZ,CAChB0N,KAAM,WACNC,OAAQ,OACRC,OAAQ,SACRC,SAAU,SACVC,OAAQ,SACRC,QAAS,WAEX,GAAI1K,EAAa,CACf,IAAM0J,EAAMpC,EAAQoC,IAAIiB,QAClBnN,EAAO,GACPoN,EAAU,CACdC,WAAY,UAkBd,OAhBAjH,OAAOC,KAAK6F,GAAK7D,SAAQ,SAAC8D,EAAOC,GAC/BpM,EAAK6F,KAAK,CACRU,KAAM2F,EAAIC,GAAO5F,KACjBwB,MAAOmE,EAAIC,GAAOpE,MAClB/H,KAAM,KAER,IAAMsN,EAAapB,EAAIC,GAAOoB,MAAMC,OACpCJ,EAAQC,WAAaC,KAAcV,EAAYA,EAAUV,EAAIC,GAAOoB,MAAMC,QAAU,SACpFpH,OAAOC,KAAK6F,EAAIC,GAAOgB,SAAS9E,SAAQ,SAACgE,GACA,OAAnCH,EAAIC,GAAOgB,QAAQd,GAAQoB,KAC7BzN,EAAKoM,GAAQpM,KAAK6F,KAChBqG,EAAIC,GAAOgB,QAAQd,GAAQoB,WAMjC,kBAAC,GAAD,CAAazM,MAAM,gBACjB,kBAAC,KAAD,CAAcoM,QAASA,EAASpN,KAAMA,EAAMuM,MAAM,QAAQC,OAAO,WAIvE,OAAO,KASTG,GAAYjN,aAAe,CACzB8C,aAAa,EACbsH,QAAS,GACT3K,GAAI,GAGSwN,UCnEMe,G,kDACnB,WAAYpO,GAAQ,IAAD,sBACjB,cAAMA,GACN2C,IAAS,gBAFQ,MAGM,EAAK3C,MAApBqO,EAHS,EAGTA,IAAK3M,EAHI,EAGJA,MAHI,OAIjB,EAAKP,MAAQ,CACXkN,MACA3M,SANe,E,0CAiBnB,WAAU,IAAD,EACgBc,KAAKrB,MAApBkN,EADD,EACCA,IAAK3M,EADN,EACMA,MACb,OACE,6BACE,yBAAKpC,UAAU,0BACb,kBAAC,EAAD,CACEsD,aAAc,KACdf,MAAO,CAAE6B,UAAW,SAAU6E,SAAU,IACxCjJ,UAAW,oCACXuD,KAAMnB,IAER,yBAAKpC,UAAU,2BACb,yBAAKA,UAAU,aACX+O,S,uCApBd,SAAgCC,EAAWrF,GACzC,OAAIqF,EAAUD,MAAQpF,EAAUoF,IACvB,CAAEA,IAAKC,EAAUD,KAEnB,S,GAfiCtL,IAAMN,WA6ClD2L,GAAehO,aAAe,CAC5BiO,IAAK,GACL3M,MAAO,I,IChDY6M,G,kDACnB,WAAYvO,GAAQ,IAAD,6BACjB,cAAMA,GACN2C,IAAS,gBAET,EAAKxB,MAAQ,CACXmI,eAAgBtJ,EAAMsJ,eACtBD,aAAcrJ,EAAMqJ,aACpBmF,eAAgBxO,EAAMwO,eACtBC,gBAAiBzO,EAAMyO,iBARR,E,0CAYnB,WAAU,IAAD,EAGHjM,KAAKrB,MADPmI,EAFK,EAELA,eAAgBkF,EAFX,EAEWA,eAAgBC,EAF3B,EAE2BA,gBAAiBpF,EAF5C,EAE4CA,aAEnD,OACE,6BACE,4BACEpE,KAAK,SACLD,SAAUsE,EACVvE,QAAUuE,EAAkC,KAAjBkF,EAC3BlP,UAAU,uBAET,KANH,MAQG,MAEF,IACD,2CACC,IACD,2BACE2F,KAAK,MACL3F,UAAU,gCACVuC,MAAO,CAAEoL,MAAO,QAChB/E,YAAY,KACZM,SAAUiG,IAEX,IArBH,WAuBE,0BAAMnP,UAAU,iBACb+J,Q,GA1CiCtG,IAAMN,WAwDlD8L,GAAenO,aAAe,CAC5BkJ,gBAAgB,EAChBD,aAAc,GACdmF,eAH4B,aAI5BC,gBAJ4B,cCnD9B,IAAMhK,GAAcX,EAAOW,YACrBH,GAAaR,EAAOQ,WACpBC,GAAeT,EAAOS,aACtBC,GAAeV,EAAOU,aACtBL,GAAcL,EAAOK,YAGNuK,G,kDACnB,WAAY1O,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXoG,QAAS,EAAKvH,MAAMuH,QACpB7F,MAAO,EAAK1B,MAAM0B,MAClB4K,SAAU,EAAKtM,MAAMsM,SACrBrH,KAAM,EAAKjF,MAAMiF,KACjB0J,QAAS,GACTzL,aAAa,EACbyC,aAAa,GAEfhD,IAAS,gBAXQ,E,4FAcnB,oCAAAQ,EAAA,wDACsCX,KAAKrB,MAAjCoG,EADV,EACUA,QAAS+E,EADnB,EACmBA,SAAUrH,EAD7B,EAC6BA,KAD7B,cAIWA,EAJX,OAKW,YALX,OAcW,WAdX,QAuBW,aAvBX,QA+BW,cA/BX,QAuCW,YAvCX,wCAMoBe,IAAMC,IAAN,UAAaxB,IAAb,OAA2B6H,IAN/C,cAMQpG,EANR,OAQQ1D,KAAKH,SAAS,CACZsM,QAAStI,KAAKC,UAAUJ,EAAIxF,KAAM,KAAM,GACxCwC,aAAa,IAVvB,8CAeoB8C,IAAMC,IAAN,UAAa3B,IAAb,OAA0BiD,IAf9C,eAeQrB,EAfR,OAiBQ1D,KAAKH,SAAS,CACZsM,QAASzI,EAAIxF,KACbwC,aAAa,IAnBvB,8CAwBoB8C,IAAMC,IAAN,UAAa1B,KAxBjC,eAwBQ2B,EAxBR,OAyBQ1D,KAAKH,SAAS,CACZsM,QAAStI,KAAKC,UAAUJ,EAAIxF,KAAM,KAAM,GACxCwC,aAAa,IA3BvB,8CAgCoB8C,IAAMC,IAAN,UAAazB,IAAb,OAA4B8H,IAhChD,eAgCQpG,EAhCR,OAiCQ1D,KAAKH,SAAS,CACZsM,QAAStI,KAAKC,UAAUJ,EAAIxF,KAAM,KAAM,GACxCwC,aAAa,IAnCvB,8CAwCoB8C,IAAMC,IAAN,UAAa9B,IAAb,OAA2BmI,IAxC/C,eAwCQpG,EAxCR,OAyCQ1D,KAAKH,SAAS,CACZsM,QAAStI,KAAKC,UAAUJ,EAAIxF,KAAM,KAAM,GACxCwC,aAAa,IA3CvB,6BAgDQV,KAAKH,SAAS,CACZsD,aAAa,IAjDvB,0DAqDInD,KAAKH,SAAS,CACZsD,aAAa,IAtDnB,0D,0EA2DA,WAAU,IAAD,EAGHnD,KAAKrB,MADP+B,EAFK,EAELA,YAAayC,EAFR,EAEQA,YAAagJ,EAFrB,EAEqBA,QAASjN,EAF9B,EAE8BA,MAErC,OAAIiE,EACK,kBAAC,EAAD,MAELzC,EACK,kBAAC2I,GAAD,MAGP,6BACE,yBAAKvM,UAAU,QACb,kBAAC,EAAD,CACEsD,aAAc,KACdf,MAAO,CAAE6B,UAAW,SAAU6E,SAAU,IACxCjJ,UAAW,oCACXuD,KAAMnB,IAER,yBAAKpC,UAAU,2BACb,yBAAKA,UAAU,aACb,8BACIqP,W,GAhG8B5L,IAAMN,WAoHtDiM,GAAmBtO,aAAe,CAChCmH,QAAS,GACT7F,MAAO,GACP4K,UAAW,EACXrH,KAAM,GACN0J,QAAS,GACTzL,aAAa,EACbyC,aAAa,GClIf,IAAMjB,GAAYZ,EAAOY,UAEJkK,G,kDACnB,WAAY5O,GAAQ,IAAD,8BACjB,cAAMA,IAeR6O,YAhBmB,sBAgBL,kCAAA1L,EAAA,2DACoB,EAAKhC,MAA7BmL,EADI,EACJA,WAAUwC,EADN,EACMA,WADN,wBAGV,EAAKzM,SAAS,CACZa,aAAa,EACbmG,aAAc,KALN,kBAQQrD,IAAMC,IAAN,UAAavB,IAAa,CACxC8G,OAAQ,CACNd,SAAU4B,EACVrF,KAAM6H,KAXF,OAQJ5I,EARI,OAcR,EAAK7D,SAAS,CACZsM,QAAStI,KAAKC,UAAUJ,EAAIxF,KAAM,KAAM,GACxCqO,YAAY,EACZ7L,aAAa,IAjBP,kDAoBsB,MAA1B,KAAM8L,SAASC,OACjB,EAAK5M,SAAS,CACZgH,aAAc,KAAM2F,SAAStO,KAAKwO,QAClChM,aAAa,EACb6L,YAAY,IAGd,EAAK1M,SAAS,CACZsD,aAAa,IA5BT,gCAkCV,EAAKtD,SAAS,CACZgH,aAAc,iCAnCN,0DAhBK,EAwDnB8F,gBAAkB,SAACzF,GACjB,EAAKrH,SAAS,CACZyM,UAAWpF,EAAEC,OAAOC,SA1DL,EA8DnBwF,eAAiB,WAAO,IAAD,EACM,EAAKjO,MAAxBO,EADa,EACbA,MAAOiN,EADM,EACNA,QACf,OACE,6BACE,yBAAKrP,UAAU,QACb,kBAAC,EAAD,CACEsD,aAAc,KACdf,MAAO,CAAE6B,UAAW,SAAU6E,SAAU,IACxCjJ,UAAW,oCACXuD,KAAMnB,IAER,yBAAKpC,UAAU,2BACb,yBAAKA,UAAU,aACb,8BACIqP,QA1EdhM,IAAS,gBAET,EAAKxB,MAAQ,CACXmL,SAAU,EAAKtM,MAAMsM,SACrBwC,UAAW,GACXC,YAAY,EACZrN,MAAO,QACP2H,aAAc,GACdsF,QAAS,GACThJ,aAAa,EACbzC,aAAa,GAZE,E,0CAqFnB,WAAU,IAAD,EACwDV,KAAKrB,MAA5DkI,EADD,EACCA,aAAc1D,EADf,EACeA,YAAaoJ,EAD5B,EAC4BA,WAAY7L,EADxC,EACwCA,YAC/C,OAAIyC,EACK,kBAAC,EAAD,MAELzC,EACK,kBAAC2I,GAAD,MAGP,6BACE,6BACE,6BACG,IACD,6DACC,IACD,2BACE5G,KAAK,OACL3F,UAAU,mBACVuC,MAAO,CAAEoL,MAAO,SAChBzE,SAAUhG,KAAK2M,kBAEjB,4BACElK,KAAK,SACLF,QAASvC,KAAKqM,YACdvP,UAAU,uBAET,KALH,SAOG,MAEH,0BAAMA,UAAU,iBACf+J,IAGD0F,GAAevM,KAAK4M,uB,GAxHUrM,IAAMN,WA0IhDmM,GAAaxO,aAAe,CAC1BkM,UAAW,EACXwC,UAAW,GACXC,YAAY,EACZrN,MAAO,GACP2H,aAAc,GACdsF,QAAS,GACThJ,aAAa,EACbzC,aAAa,GCnJf,IAGMmM,G,kDAEJ,WAAYrP,GAAO,IAAD,8BAChB,cAAMA,IA4BR6O,YAAc,SAAChP,GACb,EAAKwC,SAAS,CACZiN,cAAezP,KA/BD,EAmClB0P,SAAW,SAAC1M,EAAM2M,EAAK3P,GAAQ,IACrByP,EAAkB,EAAKnO,MAAvBmO,cACR,OACE,kBAACG,GAAA,EAAUC,KAAX,CACEpQ,UAAU,kDACVE,GAAG,KACHiC,IAAK5B,EACLyD,OAAUgM,IAAkBzP,EAC5BkF,QAAS,WACP,EAAK8J,YAAYhP,GACjB8P,QAAQC,IAAI/P,KAGbgD,IAhDW,EAqDlBgN,eAAiB,WAAO,IAAD,EACyB,EAAK1O,MAA3C2O,EADa,EACbA,KAAMR,EADO,EACPA,cAAeS,EADR,EACQA,aAC7B,OACE,yBAAKzQ,UAAU,wBACb,yBAAKA,UAAU,YACb,kBAACmQ,GAAA,EAAD,CAAWnQ,UAAU,SAClBwH,OAAOC,KAAK+I,GAAMxO,KAAI,SAACzB,GAAD,OACrB,EAAK0P,SACLO,EAAKjQ,GAAIiM,SACTgE,EAAKjQ,GAAI2P,IACT3P,MAIF,kBAAC4P,GAAA,EAAUC,KAAX,CACEpQ,UAAU,kDACVE,GAAG,KACHiC,IA3EE,KA4EF6B,OA5EE,OA4EQgM,EACVvK,QAASgL,GA5EL,YAIE,EAkFlBnF,aAAe,WAAO,IACZoF,EAAc,EAAK7O,MAAnB6O,UACR,OACE,6BACE,kBAAC,EAAD,CACEpN,aAAc,KACdtD,UAAW,SACXuD,KAAI,yBAAoBmN,GACxBnO,MAAO,CAAEuD,aAAc,YA1Fb,EAgGlB6K,mBAAqB,WAAO,IAClB3D,EAAa,EAAKnL,MAAlBmL,SACR,OACE,6BACI,kBAAC,GAAD,CACEA,SAAWA,EACX5K,MAAQ,gBACRuD,KAAO,cAvGC,EA6GlBiL,iBAAmB,WAAO,IAChB3I,EAAY,EAAKpG,MAAjBoG,QACR,OACE,6BACI,kBAAC,GAAD,CACEA,QAAUA,EACV7F,MAAQ,cACRuD,KAAO,aApHC,EA0HlBkL,YAAc,WAAO,IACX7D,EAAa,EAAKnL,MAAlBmL,SACR,OACE,6BACE,kBAAC,GAAD,CACEA,SAAWA,MA/HD,EAqIlB8D,eAAiB,WACf,OACE,6BACI,kBAAC,GAAD,CACE1O,MAAQ,WACRuD,KAAO,eA1IC,EAgJlBoL,gBAAkB,WAAO,IACf/D,EAAa,EAAKnL,MAAlBmL,SACR,OACE,6BACI,kBAAC,GAAD,CACEA,SAAWA,EACX5K,MAAQ,YACRuD,KAAO,gBAvJC,EA6JlBqL,cAAgB,WAAO,IACbhE,EAAa,EAAKnL,MAAlBmL,SACR,OACE,6BACI,kBAAC,GAAD,CACEA,SAAWA,EACX5K,MAAQ,qBACRuD,KAAO,cAjKf,EAAKsL,UAAYzM,EAAOO,UACxB,EAAKlD,MAAQ,CACX2O,KAAM,GACNvI,QAAS,EAAKvH,MAAMuH,QACpByI,UAAW,EAAKhQ,MAAMgQ,UACtB1D,SAAU,EAAKtM,MAAMsM,SACrByD,aAAc,EAAK/P,MAAM+P,aACzBT,cAAe,GACf3J,aAAa,GAXC,E,4FAelB,4BAAAxC,EAAA,+EAEuB6C,IAAMC,IAAN,UAAazD,KAAK+N,YAFzC,OAEUT,EAFV,OAGItN,KAAKH,SAAS,CACZyN,KAAMA,EAAKpP,OAJjB,gDAOI8B,KAAKH,SAAS,CACZsD,aAAa,IAEfgK,QAAQC,IAAR,MAVJ,yD,0EA2JA,WAAU,IAAD,EACgCpN,KAAKrB,MAApCwE,EADD,EACCA,YAAa2J,EADd,EACcA,cACrB,OAAI3J,EACK,kBAAC,EAAD,MAGP,6BACGnD,KAAKoI,eACN,8BAECpI,KAAKqN,iBACc,MAAlBP,GAA0B9M,KAAKyN,qBACb,MAAlBX,GAA0B9M,KAAK0N,mBACb,MAAlBZ,GAA0B9M,KAAK2N,cACb,MAAlBb,GAA0B9M,KAAK4N,iBACb,MAAlBd,GAA0B9M,KAAK6N,kBACb,MAAlBf,GAA0B9M,KAAK8N,qB,GA5LjB7N,aA4MxB4M,GAAUjP,aAAe,CACvBiL,SAAU,CACR/D,SAAU,KAIC+H,UC3MTrL,GAAWF,EAAOE,SAClBE,GAAqBJ,EAAOI,mBAC5BE,GAAgBN,EAAOM,cAEvBoM,G,kDACJ,WAAYxQ,GAAQ,IAAD,uBACjB,cAAMA,IAyFRyQ,WA1FmB,sBA0FN,kCAAAtN,EAAA,sEAEDsE,EAAW,EAAKtG,MAAhBsG,OACFiJ,EAAcjJ,EAAOkJ,MAAM,KAC3BC,EAAWF,EAAYA,EAAYrP,OAAS,GAJzC,SAKS2E,IAAMC,IAAN,6EACsD2K,IAN/D,cAKH1K,EALG,yBAQFA,EAAIxF,MARF,2DAaF,6BAbE,0DA1FM,EA2GnB+N,gBAAkB,SAAC/E,GACjB,EAAKrH,SAAS,CACZwO,UAAWnH,EAAEC,OAAOC,QAIR,IADA,EAAKE,cAAcJ,EAAEC,OAAOC,OAExC,EAAKvH,SAAS,CACZgH,aAAc,4BACdC,gBAAgB,IAGlB,EAAKjH,SAAS,CACZgH,aAAc,GACdC,gBAAgB,KAzHH,EA8HnBQ,cAAgB,SAACpJ,GACf,OAAIA,EAAO,IAAM,EACR,EAEF,GAlIU,EAqInBmO,YAAc,SAACnF,GAab,OAZA,EAAKrH,SAAS,CACZa,aAAa,EACb4N,mBAAmB,EACnBC,iBAAiB,EACjBC,gBAAgB,EAChBC,mBAAmB,EACnBC,aAAa,EACbC,YAAY,IAEd,EAAK9O,SAAS,CACZiN,cAAe5F,IAETA,GACN,KA1JM,EA2JJ,EAAKrH,SAAS,CAAE4O,mBAAmB,IACnC,MACF,KA5JU,EA6JR,EAAK5O,SAAS,CAAE2O,gBAAgB,MAvJnB,EA8JnBxC,eA9JmB,sBA8JF,wCAAArL,EAAA,+DAC0B,EAAKhC,MAAtC0P,EADO,EACPA,UAAWrG,EADJ,EACIA,QAAS8B,EADb,EACaA,SACtB8E,EAFS,6BAEsB5G,GAFtB,IAE+B6G,cAAe/E,IAC7D,EAAKjK,SAAS,CAAEa,aAAa,IAHd,kBAKK8C,IAAMsE,IAAN,UACbxG,EAAOH,QADM,sBACe2N,OAAOT,IACtCO,EACAP,GARW,cAKP3K,EALO,gBAUSF,IAAMC,IAAN,UAAa7B,IAAb,OAA6BkI,IAVtC,OAUPiF,EAVO,OAWb,EAAKlP,SAAS,CACZmI,QAAStE,EAAIxF,KACbwC,aAAa,EACbmL,IAAKkD,EAAQ7Q,OAdF,kDAmBb,EAAK2B,SAAS,CACZsD,aAAa,IApBF,0DA9JE,EAuLnB6L,QAAU,SAACC,GAAD,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAOC,WAAWD,EAAGF,OAvL/B,EAyLnBI,cAzLmB,sBAyLH,sBAAA1O,EAAA,6DACd,EAAKd,SACH,CACEwP,eAAe,EACfC,uBAAuB,EACvBjB,UAAW,EACXkB,aAAa,IANH,SASR,EAAKP,QAAQ,KATL,WAWP,EAAKrQ,MAAM0Q,cAXJ,iBAaZ,EAAKrD,iBAbO,WAeL,EAAKrN,MAAM+B,YAfN,iCAgBJ,EAAKsO,QAAQ,KAhBT,OAkBV7B,QAAQC,IAAI,6BAlBF,uBAqBZD,QAAQC,IAAI,kBArBA,2DAzLG,EAkNnBoC,QAAU,WACR,EAAK3P,SACH,CACEwP,eAAe,EACfC,uBAAuB,KAtNV,EA2NnBlH,aAAe,WAAO,IACZ3D,EAAS,EAAK9F,MAAd8F,KACR,OAAO,kBAAC,EAAD,CACLrE,aAAc,KACdtD,UAAW,SACXuD,KAAMoE,KAhOS,EAoOnBgL,sBAAwB,SAACpS,EAAIqS,EAAQrP,GAAS,MAMF,EAAK1B,MAAvCuG,EANoC,EAMpCA,MAAiB4H,GANmB,EAM7BhD,SAN6B,EAMnBgD,eACnB6C,EAAezK,EACD,EAAK1H,MAAjB+F,QACR,OACE,kBAAC0J,GAAA,EAAUC,KAAX,CACEpQ,UAAU,kDACVE,GAAG,KACH8D,OAAQgM,IAAkB4C,EAC1BlN,SAxPQ,IAyPLkN,GAAuC,SAAjBC,GA1PrB,IA2PED,GAAmC,YAAjBC,EAExB1Q,IAAK5B,EACLkF,QAAS,WACP,EAAK8J,YAAYqD,GACjBvC,QAAQC,IAAI/P,GAIZ,EAAKwC,SAAS,CAAE+P,YAAavS,MAG9BgD,IAhQY,EAqQnBwP,YAAc,WAAO,IAAD,EAMd,EAAKlR,MAJPqJ,EAFgB,EAEhBA,QACAyG,EAHgB,EAGhBA,kBACAD,EAJgB,EAIhBA,eACA1E,EALgB,EAKhBA,SAEF,OACE,yBAAKhN,UAAU,QACb,kBAAC,GAAD,CAAiB4D,YAAa+N,EAAmB3E,SAAUA,IAC3D,kBAAC,GAAD,CAAapJ,YAAa8N,EAAgBxG,QAASA,MA/QtC,EAoRnB8H,wBAA0B,WAAO,IACvBxC,EAAS,EAAK3O,MAAd2O,KACR,OACE,yBAAKxQ,UAAU,wBACb,yBAAKA,UAAU,YACb,kBAACmQ,GAAA,EAAD,KACG3I,OAAOC,KAAK+I,GAAMxO,KAAI,SAACzB,GAAD,OACvBkK,SAASlK,GAAM,EACX,EAAKoS,sBACLpS,EACAkK,SAASlK,GACTiQ,EAAKjQ,GAAIiM,UAET,YAjSK,EAwSnByG,kBAAoB,WAAO,IACjBlE,EAAQ,EAAKlN,MAAbkN,IACR,OACE,6BACI,kBAAC,GAAD,CACE3M,MAAM,eACN2M,IAAKA,EACLmE,IAAK,EAAKC,0BA/SD,EAqTnBC,iBAAmB,WAAO,IAAD,EACyC,EAAKvR,MAA7DmI,EADe,EACfA,eAAgBD,EADD,EACCA,aAAcyI,EADf,EACeA,sBACtC,OACI,6BACE,kBAAC,GAAD,CACExI,eAAgBA,EAChBD,aAAcA,EACdmF,eAAgB,EAAKA,eACrBC,gBAAiB,EAAKA,kBAGxB,kBAAC,EAAD,CACE1J,QAAS,EAAK8M,cACd7M,SAAU8M,EACVxS,UAAW,sBACXuD,KAAM,mBAGR,kBAAC,EAAD,CACEkC,QAAS,EAAKiN,QACd1S,UAAW,qBACXuD,KAAM,WA1UG,EAgVnB8P,oBAAsB,WACpB,OACE,6BACE,kBAAC,EAAD,CACE/P,aAAc,KACdtD,UAAW,qBACXuD,KAAM,oBAEP,EAAKyP,4BAxVO,EA6VnBM,sBAAwB,WACtB,EAAKvQ,SAAS,CACZ+P,YAAa,MA/VE,IAET/G,EAAa,EAAKrL,MAAlBqL,SAEAb,EADUa,EAAVlK,MACAqJ,QAJS,OAKjB,EAAKrJ,MAAQ,CACX2O,KAAM,GACN5M,aAAa,EACbsH,QAAS,GACT/C,OAAQ,GACRoJ,UAAW,GACXxH,aAAc,GACdC,gBAAgB,EAChB2H,mBAAmB,EACnBD,gBAAgB,EAChB1B,cAAe,KACfuC,eAAe,EACfC,uBAAuB,EACvBC,aAAa,EACbzF,SAAU9B,EAAQE,SAClB/E,aAAa,EACb4B,QAAS8D,EAAS/D,SAASuL,OAAO,IAClCT,YAAa,IAEfzP,IAAS,gBAxBQ,E,4FA2BnB,0CAAAQ,EAAA,6DACUkI,EAAa7I,KAAKxC,MAAlBqL,SACAlK,EAAUkK,EAAVlK,MAENqJ,EACErJ,EADFqJ,QAASvD,EACP9F,EADO8F,KAAMQ,EACbtG,EADasG,OAAQC,EACrBvG,EADqBuG,MAJ3B,SAOItE,SAAS1B,MAAQ,eAPrB,SAUoBsE,IAAMC,IAAN,UAAajC,KAVjC,OAUUyN,EAVV,OAYIjP,KAAKH,SAAS,CACZyN,KAAM2B,EAAE/Q,KACRuG,OACAQ,SACA+C,UACA9C,QAEAxE,aAAa,IAnBnB,yDAsBIV,KAAKH,SAAS,CACZsD,aAAa,IAvBnB,mBAyBW,GAzBX,cA4BuB,YADA+B,EAEnBlF,KAAKH,SAAS,CACZ2O,gBAAgB,EAChB1B,cAhEQ,IAmEV9M,KAAKH,SAAS,CACZ4O,mBAAmB,EACnB3B,cAtEI,IAkCV,oBAwCuB9M,KAAKiO,aAxC5B,QAwCUqC,EAxCV,OAyCItQ,KAAKH,SAAS,CACZ0Q,WAAYD,IA1ClB,6EA6CW,GA7CX,kCA+CS,GA/CT,kE,+HAkDA,4BAAA3P,EAAA,6DAEUmJ,EAAa9J,KAAKrB,MAAlBmL,SAFV,SAGQtG,IAAMgN,OAAN,UACD9O,IADC,OACoBoI,IAJ5B,gD,0EAsRA,WAAU,IAAD,EAGH9J,KAAKrB,MADP+B,EAFK,EAELA,YAAa6O,EAFR,EAEQA,YAAapM,EAFrB,EAEqBA,YAAayM,EAFlC,EAEkCA,YAAa7K,EAF/C,EAE+CA,QAASN,EAFxD,EAEwDA,KAAMqF,EAF9D,EAE8DA,SAErE,OAAI3G,EACK,kBAAC,EAAD,MAELzC,GAAe6O,EACV,kBAAClG,GAAD,MAEW,MAAhBuG,EACK,kBAAC,GAAD,CAAW7K,QAAUA,EAAUyI,UAAY/I,EAAOqF,SAAWA,EAAWyD,aAAevN,KAAKoQ,wBAOnG,6BACGpQ,KAAKoI,eACLpI,KAAK+P,oBACN,wBAAIjT,UAAU,cACTkD,KAAKkQ,mBACLlQ,KAAKmQ,uBAETnQ,KAAK6P,mB,GA7XS5P,aAiZvB+N,GAASpQ,aAAe,CACtBiL,SAAU,CACRlK,MAAO,CACLqJ,QAAS,KAGbzE,QAAS,IAGIyK,UC3aTyC,I,OAAS,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAM7S,EAAT,EAASA,SAAT,OACb,kBAAC,IAAD,CACEiT,OAAQ,YAAwB,IAArBC,EAAoB,EAApBA,cAET,OADIA,IAAeA,EAAclE,OAAS6D,GACnC7S,OA2BbgT,GAAO7S,aAAe,CACpB0S,KAAM,EACN7S,SAAU,IAGGmT,I,GAAAA,GA3BM,kBACnB,kBAAC,GAAD,CAAQN,KAAM,KACZ,yBAAKxT,UAAU,gBACb,kBAAC,EAAD,CACEsD,aAAc,KACdC,KAAM,UAER,gDACA,yBAAKvD,UAAU,UACb,uBAAGA,UAAU,kBAAkBQ,KAAK,KAApC,mCCpBKuT,GAAiB,WAAO,IAAD,EACVlH,mBAAS,GADC,oBAC3BmH,EAD2B,KACrBC,EADqB,OAGApH,mBAAS,MAHT,oBAG3BqH,EAH2B,KAGhBC,EAHgB,OAKVtH,mBAAS,IALC,oBAK3BlF,EAL2B,KAKrByM,EALqB,OAMUvH,oBAAS,GANnB,oBAM3BwH,EAN2B,KAMXC,EANW,KAoB5BC,EAAgB,kBACpB,oCACE,qEACA,6BACE,2BAAOjK,MAAO3C,EAAM3H,UAAU,6BAA6BuC,MAAO,CAAEoL,MAAO,KAAOhI,KAAK,OAAOuD,SAAU,SAAAkB,GAAC,OAAIgK,EAAQhK,EAAEC,OAAOC,WAEhI,6BACA,4BACE5E,UAAWiC,EACX3H,UAAU,sBACVyF,QAAS,kBAtBb6O,GAAkB,QAClB5N,IAAM8N,KAAN,UAAchQ,EAAOa,uBAArB,uBAA0DsC,IACvD8M,MAAK,SAAC7N,GACL0N,GAAkB,GAClBH,EAAavN,EAAIxF,MACjB6S,EAAQ,GACRG,EAAQ,OAETM,OAAM,WACLC,OAAOC,MAAM,6BAUf,QAOCP,GAAkB,8CAlCW,EAsCExH,mBAAS,MAtCX,oBAsC3BgI,EAtC2B,KAsCfC,EAtCe,OAwCRjI,mBAAS,CACjClF,KAAM,GACNwB,MAAO,GACP4L,WAAY,IACZC,WAAY,MA5CoB,oBAwC3BzH,EAxC2B,KAwCpB0H,EAxCoB,OA8CUpI,oBAAS,GA9CnB,oBA8C3BqI,EA9C2B,KA8CXC,EA9CW,KA4D5BC,EAAgB,kBACpB,oCACE,oEACA,6BACE,2BACEpV,UAAU,6BACVsK,MAAOiD,EAAM5F,KACbpF,MAAO,CAAEoL,MAAO,KAChBhI,KAAK,OACLuD,SAAU,SAAAkB,GAAC,OAAI6K,EAAS,6BACnB1H,GADkB,IAErB5F,KAAMyC,EAAEC,OAAOC,aAIrB,+DACA,6BACE,2BACEtK,UAAU,6BACVsK,MAAOiD,EAAMpE,MACb5G,MAAO,CAAEoL,MAAO,KAChBhI,KAAK,OACLuD,SAAU,SAAAkB,GAAC,OAAI6K,EAAS,6BACnB1H,GADkB,IAErBpE,MAAOiB,EAAEC,OAAOC,aAItB,6BACA,wEACA,6BACE,2BACE3E,KAAK,MACL3F,UAAU,6BACVsK,MAAOiD,EAAMwH,WACbxS,MAAO,CAAEoL,MAAO,KAChBzE,SAAU,SAAAkB,GAAC,OAAI6K,EAAS,6BACnB1H,GADkB,IAErBwH,WAAY3K,EAAEC,OAAOC,aAI3B,4BACEtK,UAAU,sBACVyF,QAAS,kBAxDb0P,GAAkB,QAClBzO,IAAM8N,KAAN,UAAchQ,EAAOc,wBAArB,OAA8C4O,GAAaA,EAAU9I,SAArE,uBAA4FmC,EAAM5F,KAAlG,wBAAsH4F,EAAMpE,MAA5H,oCAA6JoE,EAAMwH,WAAnK,0BAA+LxH,EAAMyH,aAClMP,MAAK,SAAC7N,GACLuO,GAAkB,GAClBL,EAAclO,EAAIxF,MAClB6S,EAAQ,MAETS,OAAM,WACLC,OAAOC,MAAM,wBACbO,GAAkB,OAgDlBzP,UAAW6H,EAAM5F,OAAS4F,EAAMpE,OAHlC,QAOC+L,GAAkB,8CA7GW,EAiHNrI,mBAAS,IAjHH,oBAiH3B+F,EAjH2B,KAiHnByC,EAjHmB,OAkHcxI,oBAAS,GAlHvB,oBAkH3ByI,EAlH2B,KAkHTC,EAlHS,KAiI5BC,EAAkB,WACtB,OACE,oCACE,mDACA,2BACExV,UAAU,6BACVsK,MAAOsI,EACPrQ,MAAO,CAAEoL,MAAO,KAChBhI,KAAK,OACLuD,SAAU,SAAAkB,GAAC,OAAIiL,EAAUjL,EAAEC,OAAOC,UAEpC,6BACA,4BACEtK,UAAU,sBACVyF,QAAS,kBA1Bf8P,GAAoB,QACpB7O,IAAM8N,KAAN,UAAchQ,EAAOe,yBAArB,OAA+CsP,GAAcA,EAAWzJ,SAAxE,uBAA+FwH,IAC5F6B,MAAK,SAAC7N,GACL2O,GAAoB,GACpBlF,QAAQC,IAAI1J,EAAIxF,SAEjBsT,OAAM,WACLC,OAAOC,MAAM,wBACbW,GAAoB,OAmBlB7P,UAAWkN,GAHb,QAOC0C,GAAoB,8CAc3B,OACE,oCACE,wDAVW,IAATtB,EACKO,IACW,IAATP,EACFoB,IACW,IAATpB,EACFwB,SADF,ICpJLC,GAAUC,YAAO,MAAPA,CAAH,wMACG,SAAChV,GAAD,OAAWA,EAAMiV,MAAMC,cAK1B,SAAClV,GAAD,OAAWA,EAAMiV,MAAME,Q,OAmB9BC,G,kDAEJ,WAAYpV,GAAQ,IAAD,6BACjB,cAAMA,GACN2C,IAAS,gBAFQ,E,qDAKnB,WACEsR,OAAOlO,QAAQsP,UAAU,KAAMjS,SAAS1B,MAAOuS,OAAO5I,SAASvL,MAC/DmU,OAAOqB,iBAAiB,YAAY,WAClCrB,OAAOlO,QAAQsP,UAAU,KAAMjS,SAAS1B,MAAQuS,OAAO5I,SAASvL,W,oBAIpE,WACE,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KA/BN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyV,OAAK,EAACC,KAAK,IAAIC,UAAWvQ,IACjC,kBAAC,IAAD,CAAOqQ,OAAK,EAACC,KAAK,OAAOC,UAAW1N,IACpC,kBAAC,IAAD,CAAOwN,OAAK,EAACC,KAAK,oBAAoBC,UAAW7M,KACjD,kBAAC,IAAD,CAAO2M,OAAK,EAACC,KAAK,mBAAmBC,UAAWjF,KAChD,kBAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,oBAAoBC,UAAWpG,KACjD,kBAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,iBAAiBC,UAAWxS,IAC9C,kBAAC,IAAD,CAAOsS,OAAK,EAACC,KAAK,aAAaC,UAAWpC,KAC1C,kBAAC,IAAD,CAAOoC,UAAWrC,a,GAKNrQ,IAAMN,WA4BTiT,eAAUN,I,wEClEZO,GAAkBV,KAAM,OAAQ,CAC3CW,MAAO,UACPC,KAAM,SAGKC,GAAYb,KAAM,OAAQ,CACrCW,MAAO,OACPC,KAAM,SCEFE,IDC+Bd,KAAM,OAAQ,CACjDW,MAAO,OACPC,KAAM,SAGuBZ,KAAM,OAAQ,CAC3CW,MAAO,OACPC,KAAM,SCRmB9S,IAAMiT,iBAG3BC,GAAYC,cAAW,SAAAjB,GAAK,MAAK,CACrCkB,KAAM,CACJlJ,MAAO,GACPC,OAAQ,GACRkJ,QAAS,EACTC,OAAQpB,EAAMqB,QAAQ,IAExBC,WAAY,CACVH,QAAS,EACT,YAAa,CACXI,UAAW,mBACX/N,MAAOwM,EAAMwB,QAAQC,OAAOC,MAC5B,aAAc,CACZhB,gBAAiB,UACjBiB,QAAS,EACTC,OAAQ,SAGZ,wBAAyB,CACvBpO,MAAO,UACPoO,OAAQ,mBAGZC,MAAO,CACL7J,MAAO,GACPC,OAAQ,IAEV6J,MAAO,CACLC,aAAc,GACdH,OAAO,aAAD,OAAe5B,EAAMwB,QAAQQ,KAAK,MACxCtB,gBAAiBV,EAAMwB,QAAQQ,KAAK,IACpCL,QAAS,EACTM,WAAYjC,EAAMkC,YAAYC,OAAO,CAAC,mBAAoB,YAE5DC,QAAS,GACTC,aAAc,MAnCEpB,EAoCd,YAA4B,IAAzBqB,EAAwB,EAAxBA,QAAYvX,EAAY,4BAC7B,OACE,kBAACwX,GAAA,EAAD,eACEC,sBAAuBF,EAAQD,aAC/BI,eAAa,EACbH,QAAS,CACPpB,KAAMoB,EAAQpB,KACdI,WAAYgB,EAAQhB,WACpBO,MAAOS,EAAQT,MACfC,MAAOQ,EAAQR,MACfM,QAASE,EAAQF,UAEfrX,OAKG2X,GAAkB,SAAC,GAAkB,IAAhB1X,EAAe,EAAfA,SAAe,EACX8C,IAAMoJ,SAAS,CACjDyL,KAAM,QACNC,UAAU,IAHmC,oBACxCC,EADwC,KAC5BC,EAD4B,KAOzChD,EAAUC,IAAOgD,IAAV,4EACSrC,GACXG,IAGLmC,EAAS,SAAAhR,GAAI,OAAI,SAAAmD,GACrB,IAAMwN,EAA4B,UAApBE,EAAWF,KAAmB,OAAS,QACrDG,EAAc,cAAEH,QAAO3Q,EAAOmD,EAAMT,OAAO0N,YAG7C,OACE,kBAACtB,GAAmBmC,SAApB,CAA6BtO,MAAO,CAAEqO,WACpC,kBAAC,IAAD,CACEhD,MAAO,CACL2C,KAAME,EAAWF,OAGnB,kBAAC7C,EAAD,KACE,kBAACkB,GAAD,CACEoB,QAASS,EAAWD,SACpBrP,SAAUyP,EAAO,YACjBrO,MAAM,aAEP3J,MCzFXkY,IAASjF,OACP,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF9P,SAASgV,eAAe,W","file":"static/js/main.eed8e9ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sandpile.090bc1a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sandpile_2.d38b3fb1.png\";","module.exports = __webpack_public_path__ + \"static/media/mendelobrot_sq.875dd8b8.jpg\";","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst home = '/';\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link as={Link} to={home}>\r\n          HOME\r\n        </Nav.Link>\r\n      </Nav>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            href=\"https://gcallah.github.io/indras_net/index.html\"\r\n          >\r\n            ABOUT\r\n          </Nav.Link>\r\n          <Nav.Link href=\"https://github.com/gcallah/indras_net/\">\r\n            SOURCE CODE\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport PropType from 'prop-types';\r\nimport Header from './Header';\r\n\r\nfunction Layout(props) {\r\n  const { children } = props;\r\n  return (\r\n    <Container>\r\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\" />\r\n      <Header />\r\n      {children}\r\n    </Container>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropType.shape(),\r\n};\r\n\r\nLayout.defaultProps = {\r\n  children: {},\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Carousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const imagesLoadedStatus = new Array(props.data.length).fill(false);\r\n    this.state = {\r\n      imagesLoadedStatus,\r\n    };\r\n  }\r\n\r\n  renderImage = () => {\r\n    const {\r\n      dots, speed, autoplay, className, data,\r\n    } = this.props;\r\n    const settings = {\r\n      arrows: false,\r\n      dots,\r\n      infinite: true,\r\n      speed,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay,\r\n      fade: true,\r\n      className,\r\n    };\r\n    const areAllImagesLoaded = () => {\r\n      const { imagesLoadedStatus } = this.state;\r\n      for (let i = 0; i < imagesLoadedStatus.length; i += 1) {\r\n        if (!imagesLoadedStatus[i]) return false;\r\n      }\r\n      return true;\r\n    };\r\n    return (\r\n      <div>\r\n        <Slider\r\n          {...settings} /* eslint-disable-line react/jsx-props-no-spreading */\r\n        >\r\n          {data.map((item, index) => (\r\n            <div key={item.title}>\r\n              {areAllImagesLoaded() ? null : <div>Loading...</div>}\r\n              <img\r\n                src={item.image}\r\n                style={areAllImagesLoaded() ? {} : { display: 'none' }}\r\n                className=\"rounded-circle carousel\"\r\n                alt=\"Responsive Model\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={item.title}\r\n                onLoad={() => {\r\n                  const { imagesLoadedStatus } = this.state;\r\n                  const imagesLoadedStatusCopy = imagesLoadedStatus.slice();\r\n                  imagesLoadedStatusCopy[index] = true;\r\n                  this.setState({\r\n                    imagesLoadedStatus: imagesLoadedStatusCopy,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderImage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCarousel.propTypes = {\r\n  dots: PropTypes.bool,\r\n  speed: PropTypes.number,\r\n  autoplay: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n  })),\r\n};\r\n\r\nCarousel.defaultProps = {\r\n  dots: false,\r\n  speed: 1000,\r\n  autoplay: false,\r\n  className: '',\r\n  data: [],\r\n};\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Heading extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n\r\n    this.state = {\r\n      sectionLevel: this.props.sectionLevel,\r\n      text: this.props.text,\r\n      className: this.props.className,\r\n      style: this.props.style\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      sectionLevel, text, className, style\r\n    } = this.state;\r\n    let heading;\r\n    if (sectionLevel === \"h1\"){\r\n      heading = <h1 className={className} style={style}>{text}</h1>\r\n    } else if (sectionLevel === \"h2\") {\r\n      heading = <h2 className={className} style={style}>{text}</h2>\r\n    } else if (sectionLevel === \"h3\") {\r\n      heading = <h3 className={className} style={style}>{text}</h3>\r\n    } else if (sectionLevel === \"h4\") {\r\n      heading = <h4 className={className} style={style}>{text}</h4>\r\n    } else if (sectionLevel === \"h5\") {\r\n      heading = <h5 className={className} style={style}>{text}</h5>\r\n    } else if (sectionLevel === \"h6\") {\r\n      heading = <h6 className={className} style={style}>{text}</h6>\r\n    } \r\n    return (\r\n      <div>\r\n        {heading}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeading.propTypes = {\r\n  sectionLevel: PropTypes.string,\r\n  className: PropTypes.string,\r\n  text: PropTypes.string,\r\n  style: PropTypes.object\r\n};\r\n\r\nHeading.defaultProps = {\r\n  sectionLevel: \"h1\",\r\n  className: \"\",\r\n  text: \"\",\r\n  style: {}\r\n};\r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Paragraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n\r\n    this.state = {\r\n      className: this.props.className,\r\n      text: this.props.text,\r\n      style: this.props.style\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className, text, style,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <p className={className} style={style}>\r\n          {text}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nParagraph.propTypes = {\r\n  className: PropTypes.string,\r\n  text: PropTypes.string,\r\n  style: PropTypes.object\r\n};\r\n\r\nParagraph.defaultProps = {\r\n  className: \"\",\r\n  text: \"\",\r\n  style: {}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\nimport Heading from './Heading';\r\nimport Paragraph from './Paragraph';\r\n\r\nclass ErrorCatching extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadingData: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loadingData: true });\r\n    document.title = 'Indra | Work in Progress';\r\n    this.setState({ loadingData: false });\r\n  }\r\n\r\n  render() {\r\n    const { loadingData } = this.state;\r\n    if (loadingData) {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"massive\">Loading...</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <br />\r\n        <Heading \r\n          sectionLevel={\"h1\"} \r\n          style={{ textAlign: 'center' }} \r\n          text={\"Indra ABM platform\"}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Paragraph\r\n          text = {\"We are encountering some problems with the API server. We will have this model running soon!\"}\r\n        />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorCatching;\r\n","/**\r\n * Default API_URL of Indra would be production URL.\r\n * If the user has set the environment variable - REACT_APP_API_URL -\r\n * then that value will be set a the API_URL.\r\n * One of the ways to set REACT_APP_API_URL is by running the frontend using\r\n * the below command -\r\n *        REACT_APP_API_URL=http://127.0.0.1:8000/ npm start\r\n * (Make sure the backend is running at http://127.0.0.1:8000/)\r\n *\r\n *\r\n * Note: All environment variables in create-react-app setup needs to have\r\n * the prefix REACT_APP_\r\n * For more infromation - https://create-react-app.dev/docs/adding-custom-environment-variables/\r\n */\r\n let API_URL = 'https://indraabm.herokuapp.com/';\r\n \r\n if (process.env.REACT_APP_API_URL) {\r\n   API_URL = process.env.REACT_APP_API_URL;\r\n }\r\n \r\n let PROPS_URL = API_URL + 'models/props/';\r\n let MENU_URL = API_URL + 'menus/model';\r\n let RUN_URL = API_URL + 'models/run/';\r\n let CLEAR_REGISTRY_URL = API_URL + 'registry/clear/';\r\n let POPHIST_URL = API_URL + 'pophist/';\r\n let USER_MSGS_URL = API_URL + 'user/msgs/';\r\n let DEBUG_URL = API_URL + 'menus/debug';\r\n let SOURCE_URL = API_URL + 'source/';\r\n let REGISTRY_URL = API_URL + 'registry';\r\n let LOCATION_URL = API_URL + 'locations/';\r\n let DETAILS_URL = API_URL + 'models/';\r\n let AGENT_URL = API_URL + 'agent';\r\n let GENERATOR_CREATE_MODEL = API_URL + 'models/generate/create_model';\r\n let GENERATOR_CREATE_GROUP = API_URL + 'models/generate/create_group/';\r\n let GENERATOR_CREATE_ACTION = API_URL + 'models/generate/create_actions/';\r\n\r\n const config = { API_URL, PROPS_URL, MENU_URL, RUN_URL, CLEAR_REGISTRY_URL, POPHIST_URL, USER_MSGS_URL, DEBUG_URL, SOURCE_URL, REGISTRY_URL, LOCATION_URL, DETAILS_URL, AGENT_URL, GENERATOR_CREATE_MODEL, GENERATOR_CREATE_GROUP, GENERATOR_CREATE_ACTION };\r\n \r\n export default config;\r\n \r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n\r\n    this.state = {\r\n      className: this.props.className,\r\n      text: this.props.text,\r\n      onClick: this.props.onClick,\r\n      disabled: this.props.disabled,\r\n      type: this.props.type\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className, text, onClick, disabled, type,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <button\r\n          className = {className}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n          type={type}\r\n        >\r\n          {text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  type: PropTypes.string\r\n};\r\n\r\nButton.defaultProps = {\r\n  className: \"\",\r\n  text: \"\",\r\n  onClick() {},\r\n  disabled: false,\r\n  type: \"\"\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Carousel from './Carousel';\r\nimport sandpileImg from './images/Sandpile.jpg';\r\nimport sandpile1Img from './images/sandpile_2.png';\r\nimport mandelobrotImg from './images/mendelobrot_sq.jpg';\r\nimport './styles.css';\r\nimport axios from 'axios';\r\nimport ErrorCatching from './ErrorCatching';\r\nimport Heading from './Heading';\r\n\r\n//import { getModels } from 'IndraReactCommon/APICalls';\r\nimport config from 'IndraReactCommon/config';\r\nimport Button from \"./Button\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allItems: [],\r\n      loadingData: false,\r\n      apiFailed: false,\r\n      dataForCarousel: [\r\n        { image: sandpileImg, title: 'by Seth Terashima' },\r\n        { image: sandpile1Img, title: 'by Colt Browninga' },\r\n        { image: mandelobrotImg, title: 'by Adam Majewski' },\r\n      ],\r\n      serverError: false,\r\n    };\r\n    this.api_server = config.API_URL;\r\n    this.useGenerator = process.env.REACT_APP_USE_GENERATOR;\r\n  }\r\n \r\n\r\n  async componentDidMount() {\r\n    const { history } = this.props;\r\n    try {\r\n      this.setState({ loadingData: true });\r\n      document.title = 'Home';\r\n      const res = await axios.get(`${this.api_server}models?active=true`);\r\n      // let models = await getModels();\r\n      this.setState({ allItems: res.data, loadingData: false });\r\n      // setting this so model properties like name, graph etc are access\r\n      // in all tabs of a browser\r\n      localStorage.setItem('indra_model_details', JSON.stringify(res.data));\r\n    } catch (e) {\r\n      this.setState({\r\n        serverError: true,\r\n      });\r\n      history.push('/errorCatching');\r\n    }\r\n  }\r\n\r\n  renderChooseModelProp = () => (\r\n    <Heading\r\n      sectionLevel={\"h1\"}\r\n      className={\"small-header\"}\r\n      text={\"Please choose a model: \"}\r\n      style={{ marginBottom: '15px' }}\r\n    />\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      loadingData, dataForCarousel, allItems, apiFailed, serverError,\r\n    } = this.state;\r\n    if (serverError) {\r\n      return <ErrorCatching />;\r\n    }\r\n    if (apiFailed) {\r\n      return <Heading\r\n        sectionLevel={\"h1\"}\r\n        text={\"404 Error\"}\r\n      />;\r\n    }\r\n    if (loadingData) {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"massive\">Loading...</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"margin-bottom-80\">\r\n          <Heading\r\n            sectionLevel={\"h1\"}\r\n            className={\"text-left\"}\r\n            text={\"Indra Agent-Based Modeling System\"}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <Col sm={12} lg={4} className=\"mb-5\">\r\n            {this.renderChooseModelProp()}\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"outline-dark\" id=\"dropdown-basic\">\r\n                Choose...\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                {Object.keys(allItems).map((item) => (!('active' in allItems[item])\r\n                  || allItems[item].active === true ? (\r\n                    <OverlayTrigger\r\n                      key={`${allItems[item].name}-tooltip`}\r\n                      placement=\"right\"\r\n                      overlay={<Tooltip>{allItems[item].doc}</Tooltip>}\r\n                    >\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/models/props/${allItems[item].modelID}`,\r\n                          state: {\r\n                            menuId: allItems[item].modelID,\r\n                            name: allItems[item].name,\r\n                            source: allItems[item].source,\r\n                            graph: allItems[item].graph,\r\n                          },\r\n                        }}\r\n                        className=\"link text-dark dropdown-item\"\r\n                        key={allItems[item].name}\r\n                      >\r\n                        {allItems[item].name}\r\n                      </Link>\r\n                    </OverlayTrigger>\r\n                  ) : null))}\r\n              </Dropdown.Menu>\r\n              {\r\n                this.useGenerator &&\r\n                  <div style={{ marginTop: 200 }}>\r\n                    <Link to=\"/generator\">\r\n                      <Button text=\"Generate New Model\" />\r\n                    </Link>\r\n                  </div>\r\n              }\r\n            </Dropdown>\r\n          </Col>\r\n          <Col sm={12} lg={{ cols: 6, span: 6, offset: 2 }}>\r\n            <Carousel\r\n              speed={5000}\r\n              autoplay\r\n              className=\"col\"\r\n              data={dataForCarousel}\r\n            />\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  history: PropTypes.shape(),\r\n};\r\n\r\nHome.defaultProps = {\r\n  history: {},\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\nimport Heading from './Heading';\r\n\r\nclass WIP extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadingData: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loadingData: true });\r\n    document.title = 'Indra | Work in Progress';\r\n    this.setState({ loadingData: false });\r\n  }\r\n\r\n  render() {\r\n    const { loadingData } = this.state;\r\n    if (loadingData) {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"massive\">Loading...</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <br />\r\n        <Heading\r\n          sectionLevel={\"h1\"}\r\n          style={{ textAlign: 'center' }}\r\n          text={\"Welcome to the Indra ABM platform!\"}\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        <p>We will have this model running soon!</p>\r\n\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WIP;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ModelInputField(props) {\r\n  const {\r\n    label, name, type, placeholder, propChange, error,\r\n  } = props;\r\n  return (\r\n    <div key={label} className=\"form-group\">\r\n      <div>\r\n        <label\r\n          htmlFor={name}\r\n          className=\"col-sm-4 col-md-4 col-lg-4\"\r\n          key={label}\r\n        >\r\n          {label}\r\n          {' '}\r\n          {' '}\r\n        </label>\r\n        <input\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus\r\n          id={name}\r\n          type={type}\r\n          className=\"col-sm-2 col-md-2 col-lg-2\"\r\n          style={{ fontSize: '15pt' }}\r\n          placeholder={placeholder}\r\n          onChange={propChange} /* style={{width: 60}} */\r\n          name={name}\r\n        />\r\n        <span className=\"col-sm-6 col-md-6 col-lg-6\" style={{ color: 'red', fontSize: 12 }}>\r\n          {error}\r\n        </span>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModelInputField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.number,\r\n  propChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n};\r\n\r\nModelInputField.defaultProps = {\r\n  label: '',\r\n  name: '',\r\n  type: '',\r\n  placeholder: 0,\r\n  propChange() {},\r\n  error: '',\r\n};\r\n\r\nexport default ModelInputField;\r\n","import React from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\n\r\nfunction PageDimmer() {\r\n  return (\r\n    <Dimmer active inverted>\r\n      <Loader size=\"massive\">Loading...</Loader>\r\n    </Dimmer>\r\n  );\r\n}\r\n\r\nexport default PageDimmer;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport ModelInputField from './ModelInputField';\r\nimport PageLoader from './PageLoader';\r\nimport './styles.css';\r\nimport config from 'IndraReactCommon/config';\r\nimport ErrorCatching from './ErrorCatching';\r\nimport Button from './Button';\r\nimport Heading from './Heading';\r\n\r\nconst OK = 1\r\nconst BAD_TYPE = -1\r\nconst OUT_OF_RANGE = 0\r\nconst QUESTION = 'question'\r\n\r\nconst apiServer = config.PROPS_URL;\r\n\r\nclass ModelParams extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const initialModelDetailState = this.getInitialModelDetails();\r\n    this.state = {\r\n      modelParams: {},\r\n      loadingData: false,\r\n      disabledButton: false,\r\n      serverError: false,\r\n      ...initialModelDetailState,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { history } = this.props;\r\n    const { menuId } = this.state;\r\n    try {\r\n      document.title = 'Indra | Property';\r\n      this.setState({ loadingData: true });\r\n      const properties = await axios.get(\r\n        `${apiServer}${menuId}`,\r\n      );\r\n      this.setState({ modelParams: properties.data });\r\n      this.states(properties.data);\r\n      this.errors(properties.data);\r\n      this.setState({ loadingData: false });\r\n    } catch (e) {\r\n      this.setState({\r\n        serverError: true,\r\n      });\r\n      history.push('/errorCatching');\r\n    }\r\n  }\r\n\r\n  getInitialModelDetails() {\r\n    const { location, history, match } = this.props;\r\n    let initialState;\r\n    try {\r\n      const { state } = location;\r\n      if (state === undefined) {\r\n      // this is undefined when someone tried to open the model in a new tab from the home screen.\r\n        const menuId = parseInt(match.params.id, 10);\r\n        const modelParams = JSON.parse(localStorage.getItem('indra_model_details')).filter((item) => item['model ID'] === menuId)[0];\r\n        initialState = {\r\n          menuId,\r\n          name: modelParams.name,\r\n          source: modelParams.source,\r\n          graph: modelParams.graph,\r\n        };\r\n      } else {\r\n        initialState = state;\r\n      }\r\n    } catch (err) {\r\n      history.push('/errorCatching');\r\n    }\r\n    return initialState;\r\n  }\r\n\r\n  states = (data) => {\r\n    const { modelParams } = this.state;\r\n    // loop over objects in data and create object in this.state\r\n    Object.keys(modelParams).forEach((detailName) => {\r\n      this.setState((prevState) => ({\r\n        modelParams: {\r\n          ...prevState.modelParams,\r\n          [detailName]: {\r\n            ...prevState.modelParams[detailName],\r\n            defaultVal: data[detailName].val,\r\n          },\r\n        },\r\n      }));\r\n      // Object.keys(modelParams).forEach((item) => this.setState({ [item]: data[item] }));\r\n    });\r\n  };\r\n\r\n  errors = () => {\r\n    const { modelParams } = this.state;\r\n    Object.keys(modelParams).forEach((item) => this.setState((prevState) => ({\r\n      modelParams: {\r\n        ...prevState.modelParams,\r\n        [item]: {\r\n          ...prevState.modelParams[item],\r\n          errorMessage: '',\r\n          disabledButton: false,\r\n        },\r\n      },\r\n    })));\r\n  };\r\n\r\n  errorSubmit = () => {\r\n    const { modelParams } = this.state;\r\n    let ans = false;\r\n    Object.keys(modelParams).forEach((item) => {\r\n      ans = ans || modelParams[item].disabledButton;\r\n    });\r\n    return ans;\r\n  };\r\n\r\n  propChanged = (e) => {\r\n    const { modelParams } = this.state;\r\n    const { name, value } = e.target;\r\n    const valid = this.checkValidity(name, value);\r\n    modelParams[name].disabledButton = true;\r\n\r\n    if (valid === OK) {\r\n      modelParams[name].val = parseInt(value, 10);\r\n      modelParams[name].errorMessage = '';\r\n      modelParams[name].disabledButton = false;\r\n      this.setState({ modelParams });\r\n    } else if (valid === BAD_TYPE) {\r\n      modelParams[name].errorMessage = '**Wrong Input Type';\r\n      modelParams[name].val = modelParams[name].defaultVal;\r\n      this.setState({ modelParams });\r\n    } else {\r\n      modelParams[\r\n        name\r\n      ].errorMessage = `**Please input a number between ${modelParams[name].lowval} and ${modelParams[name].hival}.`;\r\n      modelParams[name].val = modelParams[name].defaultVal;\r\n      this.setState({ modelParams });\r\n    }\r\n\r\n    this.setState({ disabledButton: this.errorSubmit() });\r\n  };\r\n\r\n  checkValidity = (name, value) => {\r\n    const { modelParams } = this.state;\r\n    if (\r\n      value <= modelParams[name].hival\r\n      && value >= modelParams[name].lowval\r\n    ) {\r\n      if (modelParams[name].atype === 'INT' && !!(value % 1) === false) {\r\n        return OK;\r\n      }\r\n      if (modelParams[name].atype === 'DBL') {\r\n        return OK;\r\n      }\r\n\r\n      return BAD_TYPE;\r\n    }\r\n    return OUT_OF_RANGE;\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      modelParams, menuId, name, source, graph,\r\n    } = this.state;\r\n    const { history } = this.props;\r\n    try {\r\n      // res gives us back the model returned from put props\r\n      const res = await axios.put(\r\n        apiServer + menuId,\r\n        modelParams,\r\n      );\r\n      const itemId = menuId;\r\n      const environ = res.data;\r\n      const execKey = res.data.exec_key;\r\n      history.push({\r\n        pathname: `/models/menu/${itemId.toString(10)}`,\r\n        state: {\r\n          environ,\r\n          name,\r\n          source,\r\n          graph,\r\n          execKey,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      this.setState({\r\n        serverError: true,\r\n      });\r\n      history.push('/errorCatching');\r\n    }\r\n  };\r\n\r\n  renderHeader = () => {\r\n    const { name } = this.state;\r\n    return (\r\n      <Heading\r\n        sectionLevel={\"h1\"}\r\n        className={\"header\"}\r\n        style={{ textAlign: 'center', fontWeight: '200' }}\r\n        text={`Please set the parameters for the ${name} model`}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSubmitButton = () => {\r\n    const { disabledButton } = this.state;\r\n    // console.log(this.state);\r\n    return (\r\n      <Button\r\n        type={\"button\"}\r\n        onClick={!disabledButton ? this.handleSubmit : null}\r\n        disabled={disabledButton}\r\n        className={\"btn btn-primary m-2\"}\r\n        text={\"Submit\"}\r\n      />\r\n    );\r\n  };\r\n\r\n  goback = () => {\r\n    const { history } = this.props;\r\n    history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { loadingData, modelParams, serverError } = this.state;\r\n    if (serverError) {\r\n      return <ErrorCatching />;\r\n    }\r\n    if (loadingData) {\r\n      return <PageLoader />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Heading\r\n          sectionLevel={\"h1\"}\r\n          className={\"margin-top-60\"}\r\n        />\r\n        {this.renderHeader()}\r\n        <br />\r\n        <br />\r\n        <form>\r\n          <div className=\"container\">\r\n            {Object.keys(modelParams).map((item) => {\r\n              if (QUESTION in modelParams[item]\r\n                 && modelParams[item][QUESTION] != null) {\r\n                return (\r\n                  <ModelInputField\r\n                    label={modelParams[item].question}\r\n                    type={modelParams[item].atype}\r\n                    placeholder={modelParams[item].val}\r\n                    error={modelParams[item].errorMessage}\r\n                    propChange={this.propChanged}\r\n                    name={item}\r\n                    key={item}\r\n                  />\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </div>\r\n        </form>\r\n        <br />\r\n        <br />\r\n        {this.renderSubmitButton()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModelParams.propTypes = {\r\n  history: PropTypes.shape(),\r\n  location: PropTypes.shape({\r\n    state: PropTypes.shape({\r\n      menuId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      name: PropTypes.string,\r\n      source: PropTypes.string,\r\n      graph: PropTypes.string,\r\n    }),\r\n  }),\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  }),\r\n};\r\n\r\nModelParams.defaultProps = {\r\n  history: {},\r\n  location: {\r\n    state: {},\r\n  },\r\n  match: {\r\n    params: {\r\n      id: '',\r\n    },\r\n  },\r\n};\r\n\r\nexport default ModelParams;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport propTypes from 'prop-types';\r\nimport Heading from './Heading';\r\n\r\nconst CardWrapper = ({ title, children }) => (\r\n  <Card>\r\n    <Heading \r\n      sectionLevel={\"h5\"}\r\n      style={{ textAlign: 'center', fontSize: 16 }}\r\n      className={\"card-header bg-primary text-white\"}\r\n      text={title}\r\n    />\r\n    <Card.Body>{children}</Card.Body>\r\n  </Card>\r\n);\r\n\r\nCardWrapper.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  children: propTypes.node.isRequired,\r\n};\r\n\r\nexport default CardWrapper;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LineChart } from 'react-chartkick';\r\nimport 'chart.js';\r\nimport PropType from 'prop-types';\r\nimport CardWrapper from './CardWrapper';\r\nimport axios from 'axios';\r\nimport config from 'IndraReactCommon/config';\r\nimport ErrorCatching from './ErrorCatching';\r\n\r\nconst POPHIST_URL  = config.POPHIST_URL ;\r\n\r\nfunction PopulationGraph(props) {\r\n  const [popHist, setPopHist] = useState({});\r\n  const { loadingData, EXEC_KEY } = props;\r\n  useEffect(() => {\r\n    async function fetchPopHist() {\r\n      try {\r\n        const res = await axios.get(`${POPHIST_URL}${EXEC_KEY}`);\r\n        setPopHist(res.data.pops);\r\n      } catch (e) {\r\n        return <ErrorCatching />;\r\n      }\r\n    }\r\n\r\n    fetchPopHist();\r\n  }, [props, EXEC_KEY]);\r\n\r\n  const NUM_COLORS = 7;\r\n  const colors = ['red', 'green', 'blue', 'black', 'purple', 'magenta', 'orange'];\r\n  let thisColor = 0;\r\n  if (loadingData) {\r\n    const data = [];\r\n    const env = popHist;\r\n    // populate 'data' array with groups from 'pops'\r\n    // and their respective values\r\n    Object.keys(env).forEach((group, iGroup) => {\r\n      data.push({\r\n        name: group,\r\n        color: colors[thisColor % NUM_COLORS],\r\n        //color: environ.members[group]\r\n          //? environ.members[group].attrs.color : colors[thisColor % NUM_COLORS],\r\n        data: {},\r\n      });\r\n      // modify individual 'data' dictionary of each pops\r\n      // group by copying over value\r\n      Object.keys(env[group]).forEach((member, iMember) => {\r\n        data[iGroup].data[member] = env[group][iMember];\r\n      });\r\n      thisColor += 1;\r\n    });\r\n    return (\r\n      <CardWrapper title=\"Population Graph\">\r\n        <LineChart data={data} width=\"600px\" height=\"600px\" xtitle=\"Period\" ytitle=\"Population\" />\r\n      </CardWrapper>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nPopulationGraph.propTypes = {\r\n  loadingData: PropType.bool,\r\n  EXEC_KEY: PropType.number\r\n};\r\n\r\nPopulationGraph.defaultProps = {\r\n  loadingData: true,\r\n  EXEC_KEY: 0\r\n};\r\n\r\nexport default PopulationGraph;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { ScatterChart } from 'react-chartkick';\r\nimport 'chart.js';\r\nimport PropTypes from 'prop-types';\r\nimport CardWrapper from './CardWrapper';\r\n\r\nfunction ScatterPlot(props) {\r\n  const { loadingData, environ, id } = props;\r\n  const pointStyles = [\r\n    'circle',\r\n    'cross',\r\n    'crossRot',\r\n    'dash',\r\n    'line',\r\n    'rect',\r\n    'rectRounded',\r\n    'rectRot',\r\n    'star',\r\n    'triangle',\r\n  ];\r\n  const markerMap = {\r\n    tree: 'triangle',\r\n    square: 'rect',\r\n    person: 'circle',\r\n    deceased: 'circle',\r\n    circle: 'circle',\r\n    default: 'circle',\r\n  };\r\n  if (loadingData) {\r\n    const env = environ.env.members;\r\n    const data = [];\r\n    const dataset = {\r\n      pointStyle: 'circle',\r\n    };\r\n    Object.keys(env).forEach((group, iGroup) => {\r\n      data.push({\r\n        name: env[group].name,\r\n        color: env[group].color,\r\n        data: [],\r\n      });\r\n      const markerProp = env[group].attrs.marker;\r\n      dataset.pointStyle = markerProp in markerMap ? markerMap[env[group].attrs.marker] : 'circle';\r\n      Object.keys(env[group].members).forEach((member) => {\r\n        if (env[group].members[member].pos !== null) {\r\n          data[iGroup].data.push(\r\n            env[group].members[member].pos,\r\n          );\r\n        }\r\n      });\r\n    });\r\n    return (\r\n      <CardWrapper title=\"Scatter Plot\">\r\n        <ScatterChart dataset={dataset} data={data} width=\"600px\" height=\"600px\" />\r\n      </CardWrapper>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nScatterPlot.propTypes = {\r\n  loadingData: PropTypes.bool,\r\n  environ: PropTypes.shape(),\r\n  id: PropTypes.number,\r\n};\r\n\r\nScatterPlot.defaultProps = {\r\n  loadingData: true,\r\n  environ: {},\r\n  id: 0,\r\n};\r\n\r\nexport default ScatterPlot;\r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\nimport Heading from './Heading';\r\n\r\nexport default class ModelStatusBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n    const { msg, title } = this.props;\r\n    this.state = {\r\n      msg,\r\n      title,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.msg !== prevState.msg) {\r\n      return { msg: nextProps.msg };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { msg, title } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"card w-50 model-status\">\r\n          <Heading\r\n            sectionLevel={\"h5\"}\r\n            style={{ textAlign: 'center', fontSize: 16 }}\r\n            className={\"card-header bg-primary text-white\"}\r\n            text={title}\r\n          />\r\n          <div className=\"card-body overflow-auto\">\r\n            <pre className=\"card-text\">\r\n              { msg }\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModelStatusBox.propTypes = {\r\n  msg: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\nModelStatusBox.defaultProps = {\r\n  msg: '',\r\n  title: '',\r\n};\r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class RunModelButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n\r\n    this.state = {\r\n      disabledButton: props.disabledButton,\r\n      errorMessage: props.errorMessage,\r\n      sendNumPeriods: props.sendNumPeriods,\r\n      handleRunPeriod: props.handleRunPeriod,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      disabledButton, sendNumPeriods, handleRunPeriod, errorMessage,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          disabled={disabledButton}\r\n          onClick={!disabledButton ? sendNumPeriods : null}\r\n          className=\"btn btn-success m-2\"\r\n        >\r\n          {'  '}\r\n          Run\r\n          {'  '}\r\n        </button>\r\n        {' '}\r\n        <span>model for</span>\r\n        {' '}\r\n        <input\r\n          type=\"INT\"\r\n          className=\"from-control m-2 number-input\"\r\n          style={{ width: '40px' }}\r\n          placeholder=\"10\"\r\n          onChange={handleRunPeriod}\r\n        />\r\n        {' '}\r\n        periods.\r\n        <span className=\"error-message\">\r\n          {errorMessage}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRunModelButton.propTypes = {\r\n  disabledButton: PropTypes.bool,\r\n  errorMessage: PropTypes.string,\r\n  sendNumPeriods: PropTypes.func,\r\n  handleRunPeriod: PropTypes.func,\r\n};\r\n\r\nRunModelButton.defaultProps = {\r\n  disabledButton: true,\r\n  errorMessage: '',\r\n  sendNumPeriods() {},\r\n  handleRunPeriod() {},\r\n};\r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport config from 'IndraReactCommon/config';\r\nimport PageLoader from './PageLoader';\r\nimport ErrorCatching from './ErrorCatching';\r\nimport Heading from './Heading';\r\n\r\nconst DETAILS_URL = config.DETAILS_URL;\r\nconst SOURCE_URL = config.SOURCE_URL;\r\nconst REGISTRY_URL = config.REGISTRY_URL;\r\nconst LOCATION_URL = config.LOCATION_URL;\r\nconst POPHIST_URL = config.POPHIST_URL;\r\n\r\n\r\nexport default class DebugMenuResultBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modelID: this.props.modelID,\r\n      title: this.props.title,\r\n      EXEC_KEY: this.props.EXEC_KEY,\r\n      type: this.props.type,\r\n      content: \"\",\r\n      loadingData: true,\r\n      serverError: false\r\n    };\r\n    autoBind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { modelID, EXEC_KEY, type } = this.state\r\n    try {\r\n      let res;\r\n      switch(type) {\r\n        case \"details\":\r\n          res = await axios.get(`${DETAILS_URL}${EXEC_KEY}`);\r\n\r\n          this.setState({\r\n            content: JSON.stringify(res.data, null, 2),\r\n            loadingData: false\r\n          });\r\n          break;\r\n\r\n        case \"source\":\r\n          res = await axios.get(`${SOURCE_URL}${modelID}`);\r\n\r\n          this.setState({\r\n            content: res.data,\r\n            loadingData: false\r\n          });\r\n          break;\r\n\r\n        case \"registry\":\r\n          res = await axios.get(`${REGISTRY_URL}`);\r\n          this.setState({\r\n            content: JSON.stringify(res.data, null, 2),\r\n            loadingData: false\r\n          });\r\n          break;\r\n        \r\n        case \"locations\":\r\n          res = await axios.get(`${LOCATION_URL}${EXEC_KEY}`);\r\n          this.setState({\r\n            content: JSON.stringify(res.data, null, 2),\r\n            loadingData: false\r\n          });\r\n          break;\r\n\r\n        case \"pophist\":\r\n          res = await axios.get(`${POPHIST_URL}${EXEC_KEY}`);\r\n          this.setState({\r\n            content: JSON.stringify(res.data, null, 2),\r\n            loadingData: false\r\n          });\r\n          break;\r\n\r\n        default:\r\n          this.setState({\r\n            serverError: true\r\n          })\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        serverError: true\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loadingData, serverError, content, title\r\n    } = this.state;\r\n    if (serverError) {\r\n      return <ErrorCatching />;\r\n    }\r\n    if (loadingData) {\r\n      return <PageLoader/>;\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <Heading\r\n            sectionLevel={\"h5\"}\r\n            style={{ textAlign: 'center', fontSize: 16 }}\r\n            className={\"card-header bg-primary text-white\"}\r\n            text={title}\r\n          />\r\n          <div className=\"card-body overflow-auto\">\r\n            <pre className=\"card-text\">\r\n              <code>\r\n                { content }\r\n              </code>\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nDebugMenuResultBox.propTypes = {\r\n  modelID: PropTypes.string,\r\n  title: PropTypes.string,\r\n  EXEC_KEY: PropTypes.number,\r\n  type: PropTypes.string,\r\n  content: PropTypes.string,\r\n  loadingData: PropTypes.bool,\r\n  serverError: PropTypes.bool\r\n};\r\n\r\nDebugMenuResultBox.defaultProps = {\r\n  modelID: \"\",\r\n  title: \"\",\r\n  EXEC_KEY: -1,\r\n  type: \"\",\r\n  content: \"\",\r\n  loadingData: true,\r\n  serverError: false\r\n};\r\n","import React from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\nimport config from 'IndraReactCommon/config';\r\nimport axios from 'axios';\r\nimport ErrorCatching from './ErrorCatching';\r\nimport Heading from './Heading';\r\nimport PageLoader from './PageLoader';\r\n\r\nconst AGENT_URL = config.AGENT_URL\r\n\r\nexport default class ViewAgentBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n\r\n    this.state = {\r\n      EXEC_KEY: this.props.EXEC_KEY,\r\n      agentName: \"\",\r\n      displayBox: false,\r\n      title: \"Agent\",\r\n      errorMessage: \"\",\r\n      content: \"\",\r\n      serverError: false,\r\n      loadingData: false,\r\n    };\r\n  }\r\n\r\n  handleClick = async () => {\r\n    const { EXEC_KEY, agentName } = this.state;\r\n    if (agentName) {\r\n      this.setState({\r\n        loadingData: true,\r\n        errorMessage: \"\"\r\n      })\r\n      try {\r\n        let res = await axios.get(`${AGENT_URL}`, {\r\n          params: {\r\n            exec_key: EXEC_KEY,\r\n            name: agentName\r\n          }\r\n        })\r\n        this.setState({\r\n          content: JSON.stringify(res.data, null, 2),\r\n          displayBox: true,\r\n          loadingData: false\r\n        });\r\n      } catch (error) {\r\n        if (error.response.status === 404) {\r\n          this.setState({\r\n            errorMessage: error.response.data.message,\r\n            loadingData: false,\r\n            displayBox: false\r\n          });\r\n        } else {\r\n          this.setState({\r\n            serverError: true\r\n          });\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        errorMessage: \"Error: No agent name entered\"\r\n      })\r\n    }\r\n  }\r\n\r\n  handleAgentName = (e) => {\r\n    this.setState({\r\n      agentName: e.target.value,\r\n    });\r\n  }\r\n\r\n  renderAgentBox = () => {\r\n    const { title, content } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <Heading\r\n            sectionLevel={\"h5\"}\r\n            style={{ textAlign: 'center', fontSize: 16 }}\r\n            className={\"card-header bg-primary text-white\"}\r\n            text={title}\r\n          />\r\n          <div className=\"card-body overflow-auto\">\r\n            <pre className=\"card-text\">\r\n              <code>\r\n                { content }\r\n              </code>\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage, serverError, displayBox, loadingData } = this.state;\r\n    if (serverError) {\r\n      return <ErrorCatching />;\r\n    }\r\n    if (loadingData) {\r\n      return <PageLoader/>;\r\n    }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div>\r\n            {' '}\r\n            <span>Please enter name of agent:</span>\r\n            {' '}\r\n            <input\r\n              type=\"text\"\r\n              className=\"from-control m-2\"\r\n              style={{ width: '100px' }}\r\n              onChange={this.handleAgentName}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.handleClick}\r\n              className=\"btn btn-success m-2\"\r\n            >\r\n              {'  '}\r\n              Submit\r\n              {'  '}\r\n            </button>\r\n            <span className=\"error-message\">\r\n            {errorMessage}\r\n            </span>\r\n          </div>\r\n          {(displayBox) && this.renderAgentBox()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nViewAgentBox.propTypes = {\r\n  EXEC_KEY: PropTypes.number,\r\n  agentName: PropTypes.string,\r\n  displayBox: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  errorMessage: PropTypes.string,\r\n  content: PropTypes.string,\r\n  serverError: PropTypes.bool,\r\n  loadingData: PropTypes.bool,\r\n};\r\n\r\nViewAgentBox.defaultProps = {\r\n  EXEC_KEY: -1,\r\n  agentName: \"\",\r\n  displayBox: false,\r\n  title: \"\",\r\n  errorMessage: \"\",\r\n  content: \"\",\r\n  serverError: false,\r\n  loadingData: false,\r\n};\r\n","import React, { Component } from 'react';\r\nimport config from 'IndraReactCommon/config';\r\nimport axios from 'axios';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorCatching from './ErrorCatching';\r\nimport Heading from './Heading';\r\nimport DebugMenuResultBox from './DebugMenuResultBox';\r\nimport ViewAgentBox from './ViewAgentBox';\r\n\r\nconst BACK_ID = '-1'\r\nconst BACK_TEXT = \"Back\"\r\n\r\nclass DebugMenu extends Component { // from react\r\n\r\n  constructor(props){\r\n    super(props);\r\n    //const {location} = this.props;\r\n    this.debug_url = config.DEBUG_URL;\r\n    this.state = {\r\n      menu: {},\r\n      modelID: this.props.modelID,\r\n      modelName: this.props.modelName,\r\n      EXEC_KEY: this.props.EXEC_KEY,\r\n      handleReturn: this.props.handleReturn,\r\n      activeDisplay: '',\r\n      serverError: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const menu = await axios.get(`${this.debug_url}`);\r\n      this.setState({\r\n        menu: menu.data\r\n      })\r\n    } catch (e) {\r\n      this.setState({\r\n        serverError: true,\r\n      });\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  handleClick = (id) => {\r\n    this.setState({\r\n      activeDisplay: id,\r\n    });\r\n  };\r\n  \r\n  MenuItem = (text, url, id) => {\r\n    const { activeDisplay } = this.state;\r\n    return (\r\n      <ListGroup.Item\r\n        className=\"w-50 p-3 list-group-item list-group-item-action\"\r\n        as=\"li\"\r\n        key={id}\r\n        active = {activeDisplay === id}\r\n        onClick={() => {\r\n          this.handleClick(id);\r\n          console.log(id);\r\n        }}\r\n      >\r\n        {text}\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  renderMenuItem = () => {\r\n    const { menu, activeDisplay, handleReturn } = this.state;\r\n    return (\r\n      <div className=\"row margin-bottom-80\">\r\n        <div className=\"col w-25\">\r\n          <ListGroup className=\"col-5\">\r\n            {Object.keys(menu).map((id) => (\r\n              this.MenuItem(\r\n              menu[id].question,\r\n              menu[id].url,\r\n              id\r\n              )\r\n            ))}\r\n\r\n            <ListGroup.Item\r\n              className=\"w-50 p-3 list-group-item list-group-item-action\"\r\n              as=\"li\"\r\n              key={BACK_ID}\r\n              active = {activeDisplay === BACK_ID}\r\n              onClick={handleReturn}\r\n            >\r\n              { BACK_TEXT }\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderHeader = () => {\r\n    const { modelName } = this.state;\r\n    return (\r\n      <div>\r\n        <Heading \r\n          sectionLevel={\"h1\"} \r\n          className={\"header\"} \r\n          text={`Debug menu for ${modelName}`}\r\n          style={{ marginBottom: '20px' }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderModelDetails = () => {\r\n    const { EXEC_KEY } = this.state;\r\n    return (\r\n      <div>\r\n          <DebugMenuResultBox\r\n            EXEC_KEY={ EXEC_KEY }\r\n            title={ \"Model Details\" }\r\n            type={ \"details\" }\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderSourceCode = () => {\r\n    const { modelID } = this.state;\r\n    return (\r\n      <div>\r\n          <DebugMenuResultBox\r\n            modelID={ modelID }\r\n            title={ \"Source Code\" }\r\n            type={ \"source\" }\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderAgent = () => {\r\n    const { EXEC_KEY } = this.state;\r\n    return (\r\n      <div>\r\n        <ViewAgentBox\r\n          EXEC_KEY={ EXEC_KEY }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderRegistry = () => {\r\n    return (\r\n      <div>\r\n          <DebugMenuResultBox\r\n            title={ \"Registry\" }\r\n            type={ \"registry\" }\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderLocations = () => {\r\n    const { EXEC_KEY } = this.state;\r\n    return (\r\n      <div>\r\n          <DebugMenuResultBox\r\n            EXEC_KEY={ EXEC_KEY }\r\n            title={ \"Locations\" }\r\n            type={ \"locations\" }\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderPopHist = () => {\r\n    const { EXEC_KEY } = this.state;\r\n    return (\r\n      <div>\r\n          <DebugMenuResultBox\r\n            EXEC_KEY={ EXEC_KEY }\r\n            title={ \"Population History\" }\r\n            type={ \"pophist\" }\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { serverError, activeDisplay } = this.state;\r\n    if (serverError) {\r\n      return <ErrorCatching />;\r\n    }\r\n    return (\r\n      <div>\r\n        {this.renderHeader()}\r\n        <div>\r\n        </div>\r\n        {this.renderMenuItem()}\r\n        {(activeDisplay === '1') && this.renderModelDetails()}\r\n        {(activeDisplay === '2') && this.renderSourceCode()}\r\n        {(activeDisplay === '3') && this.renderAgent()}\r\n        {(activeDisplay === '4') && this.renderRegistry()}\r\n        {(activeDisplay === '5') && this.renderLocations()}\r\n        {(activeDisplay === '6') && this.renderPopHist()}\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nDebugMenu.propTypes = {\r\n  modelID: PropTypes.string,\r\n  modelName: PropTypes.string,\r\n  EXEC_KEY: PropTypes.number,\r\n  handleReturn: PropTypes.func,\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nDebugMenu.defaultProps = {\r\n  location: {\r\n    pathname: '',\r\n  },\r\n};\r\n\r\nexport default DebugMenu;\r\n","import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport axios from 'axios';\r\nimport autoBind from 'react-autobind';\r\nimport PropTypes from 'prop-types';\r\nimport PageLoader from './PageLoader';\r\nimport PopulationGraph from './PopulationGraph';\r\nimport ScatterPlot from './ScatterPlot';\r\nimport ModelStatusBox from './ModelStatusBox';\r\nimport RunModelButton from './RunModelButton';\r\nimport ErrorCatching from './ErrorCatching';\r\nimport Button from './Button';\r\nimport Heading from './Heading';\r\nimport './styles.css';\r\nimport config from 'IndraReactCommon/config';\r\nimport DebugMenu from './DebugMenu';\r\n\r\n\r\nconst POP = 2;\r\nconst SCATTER = 3;\r\nconst MENU_URL = config.MENU_URL;\r\nconst CLEAR_REGISTRY_URL = config.CLEAR_REGISTRY_URL;\r\nconst USER_MSGS_URL = config.USER_MSGS_URL;\r\n\r\nclass RunModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { location } = this.props;\r\n    const { state } = location;\r\n    const { environ } = state;\r\n    this.state = {\r\n      menu: {},\r\n      loadingData: true,\r\n      environ: {},\r\n      source: '',\r\n      periodNum: 10,\r\n      errorMessage: '',\r\n      disabledButton: false,\r\n      loadingPopulation: false,\r\n      loadingScatter: false,\r\n      activeDisplay: null,\r\n      continuousRun: true,\r\n      continuousRunDisabled: false,\r\n      initLoading: true,\r\n      EXEC_KEY: environ.exec_key,\r\n      serverError: false,\r\n      modelID: location.pathname.substr(13),\r\n      clickedItem: '', \r\n    };\r\n    autoBind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const { state } = location;\r\n    const {\r\n      environ, name, source, graph,\r\n    } = state;\r\n    try {\r\n      document.title = 'Indra | Menu';\r\n      // you need to pass the execution key that you get from put_props\r\n      // which is in ModelParams, the current execution key is undefined\r\n      const m = await axios.get(`${MENU_URL}`);\r\n      // debugger;\r\n      this.setState({\r\n        menu: m.data,\r\n        name,\r\n        source,\r\n        environ,\r\n        graph,\r\n        // msg: environ.user.user_msgs,\r\n        loadingData: false,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        serverError: true,\r\n      });\r\n      return false;\r\n    }\r\n    const defaultGraph = graph;\r\n    if (defaultGraph === 'scatter') {\r\n      this.setState({\r\n        loadingScatter: true,\r\n        activeDisplay: SCATTER,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        loadingPopulation: true,\r\n        activeDisplay: POP,\r\n      });\r\n    }\r\n    try {\r\n      const code = await this.viewSource();\r\n      this.setState({\r\n        sourceCode: code,\r\n      });\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    // clear the registry in the backend.\r\n    const { EXEC_KEY } = this.state;\r\n    await axios.delete(\r\n      `${CLEAR_REGISTRY_URL}${EXEC_KEY}`,\r\n    );\r\n    // not doing anything with the response.\r\n    // allow the frontend to continue functioning.\r\n    // there should be a error reporting mechanism here to notify\r\n    // admins that a particular key was not cleared.\r\n  }\r\n\r\n\r\n  viewSource = async () => {\r\n    try {\r\n      const { source } = this.state;\r\n      const splitSource = source.split('/');\r\n      const filename = splitSource[splitSource.length - 1];\r\n      const res = await axios.get(\r\n        `https://raw.githubusercontent.com/gcallah/indras_net/master/models/${filename}`,\r\n      );\r\n      return res.data;\r\n    } catch (error) {\r\n      // this.setState({\r\n      //   serverError: true,\r\n      // });\r\n      return 'Something has gone wrong.';\r\n    }\r\n  };\r\n\r\n  handleRunPeriod = (e) => {\r\n    this.setState({\r\n      periodNum: e.target.value,\r\n    });\r\n\r\n    const valid = this.checkValidity(e.target.value);\r\n    if (valid === 0) {\r\n      this.setState({\r\n        errorMessage: '**Please input an integer',\r\n        disabledButton: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMessage: '',\r\n        disabledButton: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  checkValidity = (data) => {\r\n    if (data % 1 === 0) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      loadingData: false,\r\n      loadingSourceCode: false,\r\n      loadingDebugger: false,\r\n      loadingScatter: false,\r\n      loadingPopulation: false,\r\n      loadingLogs: false,\r\n      loadingBar: false,\r\n    });\r\n    this.setState({\r\n      activeDisplay: e,\r\n    });\r\n    switch (e) {\r\n      case POP:\r\n        this.setState({ loadingPopulation: true });\r\n        break;\r\n      case SCATTER:\r\n        this.setState({ loadingScatter: true });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  sendNumPeriods = async () => {\r\n    const { periodNum, environ, EXEC_KEY } = this.state;\r\n    const environWithExecutionKey = { ...environ, execution_key: EXEC_KEY };\r\n    this.setState({ loadingData: true });\r\n    try {\r\n      const res = await axios.put(\r\n        `${config.API_URL}models/run/${String(periodNum)}`,\r\n        environWithExecutionKey,\r\n        periodNum,\r\n      );\r\n      const msgData = await axios.get(`${USER_MSGS_URL}${EXEC_KEY}`);\r\n      this.setState({\r\n        environ: res.data,\r\n        loadingData: false,\r\n        msg: msgData.data,\r\n      });\r\n      // return true;\r\n    } catch (e) {\r\n      // return false;\r\n      this.setState({\r\n        serverError: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  timeout = (m) => new Promise((r) => setTimeout(r, m))\r\n\r\n  continuousRun = async () => {\r\n    this.setState(\r\n      {\r\n        continuousRun: true,\r\n        continuousRunDisabled: true,\r\n        periodNum: 1,\r\n        initLoading: false,\r\n      },\r\n    );\r\n    await this.timeout(200);\r\n    /* eslint-disable */\r\n    while (this.state.continuousRun) {\r\n      // this.setState({periodNum: 1});\r\n      this.sendNumPeriods();\r\n      /* eslint-disable */\r\n      while (this.state.loadingData){\r\n        await this.timeout(200);\r\n      /* eslint-disable */\r\n        console.log('still waiting for data...')\r\n      }\r\n      /* eslint-disable */\r\n      console.log('data arrived!!')\r\n    }\r\n  }\r\n\r\n  stopRun = () => {\r\n    this.setState(\r\n      {\r\n        continuousRun: false,\r\n        continuousRunDisabled: false,\r\n      },\r\n    );\r\n  }\r\n\r\n  renderHeader = () => {\r\n    const { name } = this.state;\r\n    return <Heading \r\n      sectionLevel={\"h1\"} \r\n      className={\"header\"} \r\n      text={name}\r\n    />;\r\n  };\r\n\r\n  ModelAnalysisMenuItem = (id, action, text) => {\r\n    /**\r\n     * All models will have all the menu items appear on the page.\r\n     * However, we keep one of the graphs (Population graph or Scatter plot)\r\n     * disabled based on \"graph\" field from models.json\r\n     */\r\n    const { graph, EXEC_KEY, activeDisplay} = this.state;\r\n    const defaultGraph = graph;\r\n    const { history } = this.props;\r\n    return (\r\n      <ListGroup.Item\r\n        className=\"w-50 p-3 list-group-item list-group-item-action\"\r\n        as=\"li\"\r\n        active={activeDisplay === action}\r\n        disabled={\r\n          (action === SCATTER && defaultGraph === 'line')\r\n          || (action === POP && defaultGraph === 'scatter')\r\n        }\r\n        key={id}\r\n        onClick={() => {\r\n          this.handleClick(action);\r\n          console.log(id);\r\n          // if (id === '4') {\r\n          //   history.push(`/models/debug/${this.state.modelID}`);\r\n          // }\r\n          this.setState({ clickedItem: id });\r\n        }}\r\n      >\r\n        {text}\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  renderGraph = () => {\r\n    const {\r\n      environ,\r\n      loadingPopulation,\r\n      loadingScatter,\r\n      EXEC_KEY\r\n    } = this.state;\r\n    return (\r\n      <div className=\"mt-5\">\r\n        <PopulationGraph loadingData={loadingPopulation} EXEC_KEY={EXEC_KEY} />\r\n        <ScatterPlot loadingData={loadingScatter} environ={environ} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderModelAnalysisMenu = () => {\r\n    const { menu } = this.state;\r\n    return (\r\n      <div className=\"row margin-bottom-80\">\r\n        <div className=\"col w-25\">\r\n          <ListGroup>\r\n            {Object.keys(menu).map((id) => (\r\n            parseInt(id) > 1\r\n              ? this.ModelAnalysisMenuItem(\r\n                id,\r\n                parseInt(id),\r\n                menu[id].question\r\n              )\r\n              : null))}\r\n          </ListGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderModelStatus = () => {\r\n    const { msg } = this.state;\r\n    return (\r\n      <div>\r\n          <ModelStatusBox\r\n            title=\"Model Status\"\r\n            msg={msg}\r\n            ref={this.modelStatusBoxElement}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n\r\n  renderRunButtons = () => {\r\n    const { disabledButton, errorMessage, continuousRunDisabled } = this.state\r\n    return (\r\n        <div>\r\n          <RunModelButton\r\n            disabledButton={disabledButton}\r\n            errorMessage={errorMessage}\r\n            sendNumPeriods={this.sendNumPeriods}\r\n            handleRunPeriod={this.handleRunPeriod}\r\n          />\r\n          {/* eslint-disable */}\r\n          <Button\r\n            onClick={this.continuousRun}\r\n            disabled={continuousRunDisabled}\r\n            className={\"btn btn-success m-2\"}\r\n            text={\"Continuous Run\"}\r\n          />\r\n          {/* eslint-disable */}\r\n          <Button\r\n            onClick={this.stopRun}\r\n            className={\"btn btn-danger m-2\"}\r\n            text={\"Stop\"}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n\r\n  renderModelAnalysis = () => {\r\n    return (\r\n      <div>\r\n        <Heading \r\n          sectionLevel={\"h3\"} \r\n          className={\"margin-top-50 mb-4\"} \r\n          text={\"Model Analysis:\"}\r\n        />\r\n        {this.renderModelAnalysisMenu()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleReturnFromDebug = () => {\r\n    this.setState({\r\n      clickedItem: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loadingData, initLoading, serverError, clickedItem, modelID, name, EXEC_KEY\r\n    } = this.state;\r\n    if (serverError) {\r\n      return <ErrorCatching />;\r\n    }\r\n    if (loadingData && initLoading) {\r\n      return <PageLoader />;\r\n    }\r\n    if (clickedItem === '4'){\r\n      return <DebugMenu modelID={ modelID } modelName={ name } EXEC_KEY={ EXEC_KEY } handleReturn={ this.handleReturnFromDebug }/>\r\n    }\r\n    // if (loadingData && !initLoading){\r\n    //   return;\r\n    // }\r\n   \r\n    return (\r\n      <div>\r\n        {this.renderHeader()}\r\n        {this.renderModelStatus()}\r\n        <ul className=\"list-group\">\r\n            {this.renderRunButtons()}\r\n            {this.renderModelAnalysis()}\r\n        </ul>\r\n        {this.renderGraph()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRunModel.propTypes = {\r\n  location: PropTypes.shape({\r\n    state: PropTypes.shape({\r\n      environ: PropTypes.object,\r\n      name: PropTypes.string,\r\n      source: PropTypes.string,\r\n      graph: PropTypes.string,\r\n    }),\r\n    pathname: PropTypes.string,\r\n  }),\r\n  /* eslint-disable */\r\n  history: PropTypes.object,\r\n};\r\n\r\nRunModel.defaultProps = {\r\n  location: {\r\n    state: {\r\n      environ: {},\r\n    },\r\n  },\r\n  history: {},\r\n};\r\n\r\nexport default RunModel;\r\n","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport Heading from './Heading';\r\n\r\nimport './NotFoundPage.css';\r\n\r\nconst Status = ({ code, children }) => (\r\n  <Route\r\n    render={({ staticContext }) => {\r\n      if (staticContext) staticContext.status = code;\r\n      return children;\r\n    }}\r\n  />\r\n);\r\n\r\nconst NotFoundPage = () => (\r\n  <Status code={404}>\r\n    <div className=\"NotFoundPage\">\r\n      <Heading\r\n        sectionLevel={\"h1\"}\r\n        text={\"Oops!\"}\r\n      />\r\n      <div>Page not found.</div>\r\n      <div className=\"action\">\r\n        <a className=\"btn btn-primary\" href=\"/\">\r\n          Guide me to the right path!\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </Status>\r\n);\r\n\r\nStatus.propTypes = {\r\n  code: PropTypes.number,\r\n  children: PropTypes.shape(),\r\n};\r\n\r\nStatus.defaultProps = {\r\n  code: 0,\r\n  children: {},\r\n};\r\n\r\nexport default NotFoundPage;\r\n","\r\nimport React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport config from 'IndraReactCommon/config';\r\n\r\nexport const ModelGenerator = () => {\r\n  const [step, setStep] = useState(0);\r\n\r\n  const [firstData, setFirstData] = useState(null);\r\n\r\n  const [name, setName] = useState('');\r\n  const [loadingStepOne, setLoadingStepOne] = useState(false);\r\n  const createModel = () => {\r\n    setLoadingStepOne(true);\r\n    axios.post(`${config.GENERATOR_CREATE_MODEL}?model_name=${name}`)\r\n      .then((res) => {\r\n        setLoadingStepOne(false);\r\n        setFirstData(res.data);\r\n        setStep(1);\r\n        setName('');\r\n      })\r\n      .catch(() => {\r\n        window.alert('something went wrong');\r\n      });\r\n  };\r\n  const renderStepOne = () => (\r\n    <>\r\n      <p>Please specify the name of your model.</p>\r\n      <div>\r\n        <input value={name} className=\"col-sm-4 col-md-4 col-lg-4\" style={{ width: 200 }} type=\"text\" onChange={e => setName(e.target.value)} />\r\n      </div>\r\n      <br />\r\n      <button\r\n        disabled={!name}\r\n        className=\"btn btn-success m-1\"\r\n        onClick={() => createModel()}\r\n      >\r\n        Next\r\n      </button>\r\n      {loadingStepOne && <span>Loading...</span>}\r\n    </>\r\n  );\r\n\r\n  const [secondData, setSecondData] = useState(null);\r\n\r\n  const [group, setGroup] = useState({\r\n    name: '',\r\n    color: '',\r\n    membersNum: \"0\",\r\n    actionsNum: \"0\"\r\n  });\r\n  const [loadingStepTwo, setLoadingStepTwo] = useState(false);\r\n  const modelGroup = () => {\r\n    setLoadingStepTwo(true);\r\n    axios.post(`${config.GENERATOR_CREATE_GROUP}${firstData && firstData.exec_key}?group_name=${group.name}&group_color=${group.color}&group_number_of_members=${group.membersNum}&group_actions=${group.actionsNum}`)\r\n      .then((res) => {\r\n        setLoadingStepTwo(false);\r\n        setSecondData(res.data);\r\n        setStep(2)\r\n      })\r\n      .catch(() => {\r\n        window.alert(\"something went wrong\");\r\n        setLoadingStepTwo(false);\r\n      });\r\n  }\r\n  const renderStepTwo = () => (\r\n    <>\r\n      <p>What is the group name of your model?</p>\r\n      <div>\r\n        <input\r\n          className=\"col-sm-4 col-md-4 col-lg-4\"\r\n          value={group.name}\r\n          style={{ width: 200 }}\r\n          type=\"text\"\r\n          onChange={e => setGroup({\r\n            ...group,\r\n            name: e.target.value\r\n          })}\r\n        />\r\n      </div>\r\n      <p>What is the color of your group?</p>\r\n      <div>\r\n        <input\r\n          className=\"col-sm-4 col-md-4 col-lg-4\"\r\n          value={group.color}\r\n          style={{ width: 200 }}\r\n          type=\"text\"\r\n          onChange={e => setGroup({\r\n            ...group,\r\n            color: e.target.value\r\n          })}\r\n        />\r\n      </div>\r\n      <br />\r\n      <p>How many members are there in your group?</p>\r\n      <div>\r\n        <input\r\n          type=\"INT\"\r\n          className=\"col-sm-4 col-md-4 col-lg-4\"\r\n          value={group.membersNum}\r\n          style={{ width: 200 }}\r\n          onChange={e => setGroup({\r\n            ...group,\r\n            membersNum: e.target.value\r\n          })}\r\n        />\r\n      </div>\r\n      <button\r\n        className=\"btn btn-success m-1\"\r\n        onClick={() => modelGroup()}\r\n        disabled={!group.name || !group.color}\r\n      >\r\n        Next\r\n      </button>\r\n      {loadingStepTwo && <span>Loading...</span>}\r\n    </>\r\n  );\r\n\r\n  const [action, setAction] = useState(\"\");\r\n  const [loadingStepThree, setLoadingStepThree] = useState(false);\r\n\r\n  const modelAction = () => {\r\n    setLoadingStepThree(true);\r\n    axios.post(`${config.GENERATOR_CREATE_ACTION}${secondData && secondData.exec_key}?group_name=${action}`)\r\n      .then((res) => {\r\n        setLoadingStepThree(false);\r\n        console.log(res.data);\r\n      })\r\n      .catch(() => {\r\n        window.alert(\"something went wrong\");\r\n        setLoadingStepThree(false);\r\n      });\r\n  }\r\n\r\n  const renderStepThree = () => {\r\n    return (\r\n      <>\r\n        <p>Describe your action</p>\r\n        <input\r\n          className=\"col-sm-4 col-md-4 col-lg-4\"\r\n          value={action}\r\n          style={{ width: 200 }}\r\n          type=\"text\"\r\n          onChange={e => setAction(e.target.value)}\r\n        />\r\n        <br />\r\n        <button\r\n          className=\"btn btn-success m-1\"\r\n          onClick={() => modelAction()}\r\n          disabled={!action}\r\n        >\r\n          Next\r\n        </button>\r\n        {loadingStepThree && <span>Loading...</span>}\r\n      </>\r\n    )\r\n  };\r\n\r\n  const renderForm = () => {\r\n    if (step === 0) {\r\n      return renderStepOne();\r\n    } else if (step === 1) {\r\n      return renderStepTwo();\r\n    } else if (step === 2) {\r\n      return renderStepThree();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <h4>Generate Your Model Now!</h4>\r\n      {renderForm()}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport Layout from './components/Layout';\r\nimport Home from './components/Home';\r\nimport WIP from './components/WIP';\r\nimport ModelParams from './components/ModelParams';\r\nimport RunModel from './components/RunModel';\r\nimport NotFoundPage from './components/NotFoundPage';\r\nimport ErrorCatching from './components/ErrorCatching';\r\nimport DebugMenu from './components/DebugMenu';\r\nimport autoBind from 'react-autobind';\r\nimport { ModelGenerator } from \"./components/ModelGenerator\";\r\n\r\n// The styling below should be in a style sheet, not in javascript:\r\nconst Wrapper = styled('div')`\r\n  background: ${(props) => props.theme.background};\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  font-family: -apple-stem, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\";\r\n  h1 {\r\n    color: ${(props) => props.theme.body};\r\n  }\r\n`;\r\n\r\nexport function IndraRoutes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/wip\" component={WIP} />\r\n      <Route exact path=\"/models/props/:id\" component={ModelParams} />\r\n      <Route exact path=\"/models/menu/:id\" component={RunModel} />\r\n      <Route exact path=\"/models/debug/:id\" component={DebugMenu} />\r\n      <Route exact path=\"/errorCatching\" component={ErrorCatching} />\r\n      <Route exact path=\"/generator\" component={ModelGenerator} />\r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    autoBind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.history.pushState(null, document.title, window.location.href);\r\n    window.addEventListener('popstate', function (){\r\n      window.history.pushState(null, document.title,  window.location.href);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <HashRouter>\r\n          <Layout>\r\n            {IndraRoutes()}\r\n          </Layout>\r\n        </HashRouter>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withTheme(App);\r\n","import theme from 'styled-theming';\r\n\r\nexport const backgroundColor = theme('mode', {\r\n  light: '#fafafa',\r\n  dark: '#222',\r\n});\r\n\r\nexport const textColor = theme('mode', {\r\n  light: '#000',\r\n  dark: '#fff',\r\n});\r\n\r\nexport const buttonBackgroundColor = theme('mode', {\r\n  light: '#222',\r\n  dark: '#eee',\r\n});\r\n\r\nexport const buttonTextColor = theme('mode', {\r\n  light: '#eee',\r\n  dark: '#222',\r\n});\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable arrow-parens */\r\n/* eslint-disable arrow-body-style */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { Switch as Switch2 } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { backgroundColor, textColor } from './theme';\r\n\r\n\r\nconst ThemeToggleContext = React.createContext();\r\n\r\nexport const useTheme = () => React.useContext(ThemeToggleContext);\r\nconst IOSSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    margin: theme.spacing(1),\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    '&$checked': {\r\n      transform: 'translateX(16px)',\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        backgroundColor: '#060606',\r\n        opacity: 1,\r\n        border: 'none',\r\n      },\r\n    },\r\n    '&$focusVisible $thumb': {\r\n      color: '#060606',\r\n      border: '6px solid #fff',\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color', 'border']),\r\n  },\r\n  checked: {},\r\n  focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch2\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport const MyThemeProvider = ({ children }) => {\r\n  const [themeState, setThemeState] = React.useState({\r\n    mode: 'light',\r\n    checkedB: true,\r\n\r\n  });\r\n\r\n  const Wrapper = styled.div`\r\n    background-color: ${backgroundColor};\r\n    color: ${textColor};\r\n  `;\r\n\r\n  const toggle = name => event => {\r\n    const mode = (themeState.mode === 'light' ? 'dark' : 'light');\r\n    setThemeState({ mode, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <ThemeToggleContext.Provider value={{ toggle }}>\r\n      <ThemeProvider\r\n        theme={{\r\n          mode: themeState.mode,\r\n        }}\r\n      >\r\n        <Wrapper>\r\n          <IOSSwitch\r\n            checked={themeState.checkedB}\r\n            onChange={toggle('checkedB')}\r\n            value=\"checkedB\"\r\n          />\r\n          {children}\r\n        </Wrapper>\r\n      </ThemeProvider>\r\n    </ThemeToggleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MyThemeProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MyThemeProvider } from './darkTheme/ThemeContext';\r\n\r\nReactDOM.render(\r\n  <MyThemeProvider>\r\n    <App />\r\n  </MyThemeProvider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}