{"version":3,"sources":["components/images/Sandpile.jpg","components/images/sandpile_2.png","components/images/mendelobrot_sq.jpg","components/Header.js","components/Layout.js","components/Carousel.js","components/ErrorCatching.js","../../IndraReactCommon/config.js","components/Home.js","components/WIP.js","components/ModelInputField.js","components/PageLoader.js","components/ModelDetail.js","components/CardWrapper.js","components/PopulationGraph.js","components/ScatterPlot.js","components/ModelStatusBox.js","components/RunModelButton.js","components/ActionMenu.js","components/NotFoundPage.js","components/DebugMenu.js","App.js","darkTheme/theme.js","darkTheme/ThemeContext.js","index.js"],"names":["module","exports","Header","Navbar","bg","expand","Nav","className","Link","as","to","Toggle","aria-controls","Collapse","id","href","Layout","props","children","Container","rel","defaultProps","Carousel","renderImage","dots","speed","autoplay","data","settings","arrows","infinite","slidesToShow","slidesToScroll","fade","areAllImagesLoaded","imagesLoadedStatus","state","i","length","map","item","index","key","title","src","image","style","display","alt","data-toggle","data-placement","onLoad","imagesLoadedStatusCopy","slice","setState","Array","fill","this","Component","ErrorCatching","loadingData","a","document","Dimmer","active","inverted","Loader","size","textAlign","API_URL","process","REACT_APP_API_URL","config","PROPS_URL","MENU_URL","RUN_URL","CLEAR_REGISTRY_URL","POPHIST_URL","USER_MSGS_URL","DEBUG_URL","Home","renderChooseModelProp","allItems","apiFailed","dataForCarousel","sandpileImg","sandpile1Img","mandelobrotImg","serverError","api_server","history","axios","get","res","localStorage","setItem","JSON","stringify","push","Col","sm","lg","Dropdown","variant","Menu","Object","keys","OverlayTrigger","name","placement","overlay","Tooltip","doc","pathname","modelID","menuId","source","graph","cols","span","offset","WIP","ModelInputField","label","type","placeholder","propChange","error","htmlFor","autoFocus","fontSize","onChange","color","PageDimmer","apiServer","ModelDetail","states","modelParams","forEach","detailName","prevState","defaultVal","val","errors","errorMessage","disabledButton","errorSubmit","ans","propChanged","e","target","value","valid","checkValidity","parseInt","lowval","hival","atype","handleSubmit","event","preventDefault","put","itemId","envFile","execKey","exec_key","toString","renderHeader","fontWeight","renderSubmitButton","disabled","onClick","goback","goBack","initialModelDetailState","getInitialModelDetails","properties","initialState","location","match","undefined","params","parse","getItem","filter","err","PageLoader","question","CardWrapper","Card","Body","PopulationGraph","useState","popHist","setPopHist","EXEC_KEY","useEffect","pops","fetchPopHist","colors","thisColor","env","group","iGroup","member","iMember","width","height","ScatterPlot","markerMap","tree","square","person","deceased","circle","default","members","dataset","pointStyle","markerProp","attrs","marker","pos","ModelStatusBox","autoBind","msg","nextProps","React","RunModelButton","sendNumPeriods","handleRunPeriod","ActionMenu","viewSource","splitSource","split","filename","periodNum","handleClick","loadingSourceCode","loadingDebugger","loadingScatter","loadingPopulation","loadingLogs","loadingBar","activeDisplay","envFileWithExecutionKey","execution_key","String","msgData","timeout","m","Promise","r","setTimeout","continuousRun","continuousRunDisabled","initLoading","console","log","stopRun","MenuItem","action","text","defaultGraph","ListGroup","Item","renderMenuItem","renderMapItem","menu","code","sourceCode","delete","ref","modelStatusBoxElement","Status","render","staticContext","status","NotFoundPage","DebugMenu","url","debug_url","substr","Wrapper","styled","theme","background","body","IndraRoutes","exact","path","component","withTheme","backgroundColor","light","dark","textColor","ThemeToggleContext","createContext","IOSSwitch","withStyles","root","padding","margin","spacing","switchBase","transform","palette","common","white","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","MyThemeProvider","mode","checkedB","themeState","setThemeState","div","toggle","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.282067f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sandpile.090bc1a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sandpile_2.d38b3fb1.png\";","module.exports = __webpack_public_path__ + \"static/media/mendelobrot_sq.875dd8b8.jpg\";","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst home = '/';\n\nfunction Header() {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link as={Link} to={home}>\n          HOME\n        </Nav.Link>\n      </Nav>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link\n            href=\"https://gcallah.github.io/indras_net/index.html\"\n          >\n            ABOUT\n          </Nav.Link>\n          <Nav.Link href=\"https://github.com/gcallah/indras_net/\">\n            SOURCE CODE\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport PropType from 'prop-types';\nimport Header from './Header';\n\nfunction Layout(props) {\n  const { children } = props;\n  return (\n    <Container>\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\" />\n      <Header />\n      {children}\n    </Container>\n  );\n}\n\nLayout.propTypes = {\n  children: PropType.shape(),\n};\n\nLayout.defaultProps = {\n  children: {},\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport PropTypes from 'prop-types';\n\nclass Carousel extends Component {\n  constructor(props) {\n    super(props);\n    const imagesLoadedStatus = new Array(props.data.length).fill(false);\n    this.state = {\n      imagesLoadedStatus,\n    };\n  }\n\n  renderImage = () => {\n    const {\n      dots, speed, autoplay, className, data,\n    } = this.props;\n    const settings = {\n      arrows: false,\n      dots,\n      infinite: true,\n      speed,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay,\n      fade: true,\n      className,\n    };\n    const areAllImagesLoaded = () => {\n      const { imagesLoadedStatus } = this.state;\n      for (let i = 0; i < imagesLoadedStatus.length; i += 1) {\n        if (!imagesLoadedStatus[i]) return false;\n      }\n      return true;\n    };\n    return (\n      <div>\n        <Slider\n          {...settings} /* eslint-disable-line react/jsx-props-no-spreading */\n        >\n          {data.map((item, index) => (\n            <div key={item.title}>\n              {areAllImagesLoaded() ? null : <div>Loading...</div>}\n              <img\n                src={item.image}\n                style={areAllImagesLoaded() ? {} : { display: 'none' }}\n                className=\"rounded-circle carousel\"\n                alt=\"Responsive Model\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={item.title}\n                onLoad={() => {\n                  const { imagesLoadedStatus } = this.state;\n                  const imagesLoadedStatusCopy = imagesLoadedStatus.slice();\n                  imagesLoadedStatusCopy[index] = true;\n                  this.setState({\n                    imagesLoadedStatus: imagesLoadedStatusCopy,\n                  });\n                }}\n              />\n            </div>\n          ))}\n        </Slider>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderImage()}\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  dots: PropTypes.bool,\n  speed: PropTypes.number,\n  autoplay: PropTypes.bool,\n  className: PropTypes.string,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    image: PropTypes.string,\n    title: PropTypes.string,\n  })),\n};\n\nCarousel.defaultProps = {\n  dots: false,\n  speed: 1000,\n  autoplay: false,\n  className: '',\n  data: [],\n};\n\nexport default Carousel;\n","import React, { Component } from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\n\nclass ErrorCatching extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = 'Indra | Work in Progress';\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    const { loadingData } = this.state;\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <br />\n        <h1 style={{ textAlign: 'center' }}>\n          Indra ABM platform\n        </h1>\n        <br />\n        <br />\n        <p>\n          We are encountering some problems with the API server.\n          We will have this model running soon!\n        </p>\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default ErrorCatching;\n","/**\n * Default API_URL of Indra would be production URL.\n * If the user has set the environment variable - REACT_APP_API_URL -\n * then that value will be set a the API_URL.\n * One of the ways to set REACT_APP_API_URL is by running the frontend using\n * the below command -\n *        REACT_APP_API_URL=http://127.0.0.1:8000/ npm start\n * (Make sure the backend is running at http://127.0.0.1:8000/)\n *\n *\n * Note: All environment variables in create-react-app setup needs to have\n * the prefix REACT_APP_\n * For more infromation - https://create-react-app.dev/docs/adding-custom-environment-variables/\n */\n let API_URL = 'https://indraabm.herokuapp.com/';\n \n if (process.env.REACT_APP_API_URL) {\n   API_URL = process.env.REACT_APP_API_URL;\n }\n \n let PROPS_URL = API_URL + 'models/props/';\n let MENU_URL = API_URL + 'menus/model';\n let RUN_URL = API_URL + 'models/run/';\n let CLEAR_REGISTRY_URL = API_URL + 'registry/clear/';\n let POPHIST_URL = API_URL + 'pophist/';\n let USER_MSGS_URL = API_URL + 'user/msgs/';\n let DEBUG_URL = API_URL + 'menus/debug';\n\n const config = { API_URL, PROPS_URL, MENU_URL, RUN_URL, CLEAR_REGISTRY_URL, POPHIST_URL, USER_MSGS_URL, DEBUG_URL };\n \n export default config;\n \n","import React, { Component } from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport { Dropdown } from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Carousel from './Carousel';\nimport sandpileImg from './images/Sandpile.jpg';\nimport sandpile1Img from './images/sandpile_2.png';\nimport mandelobrotImg from './images/mendelobrot_sq.jpg';\nimport './styles.css';\nimport axios from 'axios';\nimport ErrorCatching from './ErrorCatching';\n\n//import { getModels } from 'IndraReactCommon/APICalls';\nimport config from 'IndraReactCommon/config';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allItems: [],\n      loadingData: false,\n      apiFailed: false,\n      dataForCarousel: [\n        { image: sandpileImg, title: 'by Seth Terashima' },\n        { image: sandpile1Img, title: 'by Colt Browninga' },\n        { image: mandelobrotImg, title: 'by Adam Majewski' },\n      ],\n      serverError: false,\n    };\n    this.api_server = config.API_URL;\n  }\n \n\n  async componentDidMount() {\n    const { history } = this.props;\n    try {\n      this.setState({ loadingData: true });\n      document.title = 'Home';\n      const res = await axios.get(`${this.api_server}models?active=true`);\n      // let models = await getModels();\n      this.setState({ allItems: res.data, loadingData: false });\n      // setting this so model properties like name, graph etc are access\n      // in all tabs of a browser\n      localStorage.setItem('indra_model_details', JSON.stringify(res.data));\n    } catch (e) {\n      this.setState({\n        serverError: true,\n      });\n      history.push('/errorCatching');\n    }\n  }\n\n  renderChooseModelProp = () => (\n    <h1 className=\"small-header\">Please choose a model: </h1>\n  );\n\n  render() {\n    const {\n      loadingData, dataForCarousel, allItems, apiFailed, serverError,\n    } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    if (apiFailed) {\n      return <h1>404 Error</h1>;\n    }\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading...</Loader>\n        </Dimmer>\n      );\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"margin-bottom-80\">\n          <h1 className=\"text-left\">Indra Agent-Based Modeling System</h1>\n        </div>\n        <div className=\"row\">\n          <Col sm={12} lg={4} className=\"mb-5\">\n            {this.renderChooseModelProp()}\n            <Dropdown>\n              <Dropdown.Toggle variant=\"outline-dark\" id=\"dropdown-basic\">\n                Choose...\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {Object.keys(allItems).map((item) => (!('active' in allItems[item])\n                  || allItems[item].active === true ? (\n                    <OverlayTrigger\n                      key={`${allItems[item].name}-tooltip`}\n                      placement=\"right\"\n                      overlay={<Tooltip>{allItems[item].doc}</Tooltip>}\n                    >\n                      <Link\n                        to={{\n                          pathname: `/models/props/${allItems[item].modelID}`,\n                          state: {\n                            menuId: allItems[item].modelID,\n                            name: allItems[item].name,\n                            source: allItems[item].source,\n                            graph: allItems[item].graph,\n                          },\n                        }}\n                        className=\"link text-dark dropdown-item\"\n                        key={allItems[item].name}\n                      >\n                        {allItems[item].name}\n                      </Link>\n                    </OverlayTrigger>\n                  ) : null))}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col sm={12} lg={{ cols: 6, span: 6, offset: 2 }}>\n            <Carousel\n              speed={5000}\n              autoplay\n              className=\"col\"\n              data={dataForCarousel}\n            />\n          </Col>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  history: PropTypes.shape(),\n};\n\nHome.defaultProps = {\n  history: {},\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\n\nclass WIP extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = 'Indra | Work in Progress';\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    const { loadingData } = this.state;\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <br />\n        <h1 style={{ textAlign: 'center' }}>\n          Welcome to the Indra ABM platform!\n        </h1>\n        <br />\n        <br />\n\n        <p>We will have this model running soon!</p>\n\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default WIP;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ModelInputField(props) {\n  const {\n    label, name, type, placeholder, propChange, error,\n  } = props;\n  return (\n    <div key={label} className=\"form-group\">\n      <div>\n        <label\n          htmlFor={name}\n          className=\"col-sm-4 col-md-4 col-lg-4\"\n          key={label}\n        >\n          {label}\n          {' '}\n          {' '}\n        </label>\n        <input\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus\n          id={name}\n          type={type}\n          className=\"col-sm-2 col-md-2 col-lg-2\"\n          style={{ fontSize: '15pt' }}\n          placeholder={placeholder}\n          onChange={propChange} /* style={{width: 60}} */\n          name={name}\n        />\n        <span className=\"col-sm-6 col-md-6 col-lg-6\" style={{ color: 'red', fontSize: 12 }}>\n          {error}\n        </span>\n        <br />\n      </div>\n    </div>\n  );\n}\n\nModelInputField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.number,\n  propChange: PropTypes.func,\n  error: PropTypes.string,\n};\n\nModelInputField.defaultProps = {\n  label: '',\n  name: '',\n  type: '',\n  placeholder: 0,\n  propChange() {},\n  error: '',\n};\n\nexport default ModelInputField;\n","import React from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\n\nfunction PageDimmer() {\n  return (\n    <Dimmer active inverted>\n      <Loader size=\"massive\">Loading...</Loader>\n    </Dimmer>\n  );\n}\n\nexport default PageDimmer;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport ModelInputField from './ModelInputField';\nimport PageLoader from './PageLoader';\nimport './styles.css';\nimport config from 'IndraReactCommon/config';\nimport ErrorCatching from './ErrorCatching';\n\nconst OK = 1\nconst BAD_TYPE = -1\nconst OUT_OF_RANGE = 0\nconst QUESTION = 'question'\n\nconst apiServer = config.PROPS_URL;\n\nclass ModelDetail extends Component {\n  constructor(props) {\n    super(props);\n    const initialModelDetailState = this.getInitialModelDetails();\n    this.state = {\n      modelParams: {},\n      loadingData: false,\n      disabledButton: false,\n      serverError: false,\n      ...initialModelDetailState,\n    };\n  }\n\n  async componentDidMount() {\n    const { history } = this.props;\n    const { menuId } = this.state;\n    try {\n      document.title = 'Indra | Property';\n      this.setState({ loadingData: true });\n      const properties = await axios.get(\n        `${apiServer}${menuId}`,\n      );\n      this.setState({ modelParams: properties.data });\n      this.states(properties.data);\n      this.errors(properties.data);\n      this.setState({ loadingData: false });\n    } catch (e) {\n      this.setState({\n        serverError: true,\n      });\n      history.push('/errorCatching');\n    }\n  }\n\n  getInitialModelDetails() {\n    const { location, history, match } = this.props;\n    let initialState;\n    try {\n      const { state } = location;\n      if (state === undefined) {\n      // this is undefined when someone tried to open the model in a new tab from the home screen.\n        const menuId = parseInt(match.params.id, 10);\n        const modelParams = JSON.parse(localStorage.getItem('indra_model_details')).filter((item) => item['model ID'] === menuId)[0];\n        initialState = {\n          menuId,\n          name: modelParams.name,\n          source: modelParams.source,\n          graph: modelParams.graph,\n        };\n      } else {\n        initialState = state;\n      }\n    } catch (err) {\n      history.push('/errorCatching');\n    }\n    return initialState;\n  }\n\n  states = (data) => {\n    const { modelParams } = this.state;\n    // loop over objects in data and create object in this.state\n    Object.keys(modelParams).forEach((detailName) => {\n      this.setState((prevState) => ({\n        modelParams: {\n          ...prevState.modelParams,\n          [detailName]: {\n            ...prevState.modelParams[detailName],\n            defaultVal: data[detailName].val,\n          },\n        },\n      }));\n      // Object.keys(modelParams).forEach((item) => this.setState({ [item]: data[item] }));\n    });\n  };\n\n  errors = () => {\n    const { modelParams } = this.state;\n    Object.keys(modelParams).forEach((item) => this.setState((prevState) => ({\n      modelParams: {\n        ...prevState.modelParams,\n        [item]: {\n          ...prevState.modelParams[item],\n          errorMessage: '',\n          disabledButton: false,\n        },\n      },\n    })));\n  };\n\n  errorSubmit = () => {\n    const { modelParams } = this.state;\n    let ans = false;\n    Object.keys(modelParams).forEach((item) => {\n      ans = ans || modelParams[item].disabledButton;\n    });\n    return ans;\n  };\n\n  propChanged = (e) => {\n    const { modelParams } = this.state;\n    const { name, value } = e.target;\n    const valid = this.checkValidity(name, value);\n    modelParams[name].disabledButton = true;\n\n    if (valid === OK) {\n      modelParams[name].val = parseInt(value, 10);\n      modelParams[name].errorMessage = '';\n      modelParams[name].disabledButton = false;\n      this.setState({ modelParams });\n    } else if (valid === BAD_TYPE) {\n      modelParams[name].errorMessage = '**Wrong Input Type';\n      modelParams[name].val = modelParams[name].defaultVal;\n      this.setState({ modelParams });\n    } else {\n      modelParams[\n        name\n      ].errorMessage = `**Please input a number between ${modelParams[name].lowval} and ${modelParams[name].hival}.`;\n      modelParams[name].val = modelParams[name].defaultVal;\n      this.setState({ modelParams });\n    }\n\n    this.setState({ disabledButton: this.errorSubmit() });\n  };\n\n  checkValidity = (name, value) => {\n    const { modelParams } = this.state;\n    if (\n      value <= modelParams[name].hival\n      && value >= modelParams[name].lowval\n    ) {\n      if (modelParams[name].atype === 'INT' && !!(value % 1) === false) {\n        return OK;\n      }\n      if (modelParams[name].atype === 'DBL') {\n        return OK;\n      }\n\n      return BAD_TYPE;\n    }\n    return OUT_OF_RANGE;\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const {\n      modelParams, menuId, name, source, graph,\n    } = this.state;\n    const { history } = this.props;\n    try {\n      // res gives us back the model returned from put props\n      const res = await axios.put(\n        apiServer + menuId,\n        modelParams,\n      );\n      const itemId = menuId;\n      const envFile = res.data;\n      const execKey = res.data.exec_key;\n      history.push({\n        pathname: `/models/menu/${itemId.toString(10)}`,\n        state: {\n          envFile,\n          name,\n          source,\n          graph,\n          execKey,\n        },\n      });\n    } catch (e) {\n      this.setState({\n        serverError: true,\n      });\n      history.push('/errorCatching');\n    }\n  };\n\n  renderHeader = () => {\n    const { name } = this.state;\n    return (\n      <h1 className=\"header\" style={{ textAlign: 'center', fontWeight: '200' }}>\n        {`Please set the parameters for the ${name} model`}\n      </h1>\n    );\n  };\n\n  renderSubmitButton = () => {\n    const { disabledButton } = this.state;\n    // console.log(this.state);\n    return (\n      <button\n        type=\"button\"\n        disabled={disabledButton}\n        onClick={!disabledButton ? this.handleSubmit : null}\n        className=\"btn btn-primary m-2\"\n      >\n        Submit\n      </button>\n    );\n  };\n\n  goback = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { loadingData, modelParams, serverError } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    if (loadingData) {\n      return <PageLoader />;\n    }\n    return (\n      <div>\n        <h1 className=\"margin-top-60\"> </h1>\n        {this.renderHeader()}\n        <br />\n        <br />\n        <form>\n          <div className=\"container\">\n            {Object.keys(modelParams).map((item) => {\n              if (QUESTION in modelParams[item]\n                 && modelParams[item][QUESTION] != null) {\n                return (\n                  <ModelInputField\n                    label={modelParams[item].question}\n                    type={modelParams[item].atype}\n                    placeholder={modelParams[item].val}\n                    error={modelParams[item].errorMessage}\n                    propChange={this.propChanged}\n                    name={item}\n                    key={item}\n                  />\n                );\n              }\n              return null;\n            })}\n          </div>\n        </form>\n        <br />\n        <br />\n        {this.renderSubmitButton()}\n      </div>\n    );\n  }\n}\n\nModelDetail.propTypes = {\n  history: PropTypes.shape(),\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      menuId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      source: PropTypes.string,\n      graph: PropTypes.string,\n    }),\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nModelDetail.defaultProps = {\n  history: {},\n  location: {\n    state: {},\n  },\n  match: {\n    params: {\n      id: '',\n    },\n  },\n};\n\nexport default ModelDetail;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport propTypes from 'prop-types';\n\nconst CardWrapper = ({ title, children }) => (\n  <Card>\n    <h5\n      style={{ textAlign: 'center', fontSize: 16 }}\n      className=\"card-header bg-primary text-white\"\n    >\n      {title}\n    </h5>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n\nCardWrapper.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.node.isRequired,\n};\n\nexport default CardWrapper;\n","import React, { useState, useEffect } from 'react';\nimport { LineChart } from 'react-chartkick';\nimport 'chart.js';\nimport PropType from 'prop-types';\nimport CardWrapper from './CardWrapper';\nimport axios from 'axios';\nimport config from 'IndraReactCommon/config';\nimport ErrorCatching from './ErrorCatching';\n\nconst POPHIST_URL  = config.POPHIST_URL ;\n\nfunction PopulationGraph(props) {\n  const [popHist, setPopHist] = useState({});\n  const { loadingData, EXEC_KEY } = props;\n  useEffect(() => {\n    async function fetchPopHist() {\n      try {\n        const res = await axios.get(`${POPHIST_URL}${EXEC_KEY}`);\n        setPopHist(res.data.pops);\n      } catch (e) {\n        return <ErrorCatching />;\n      }\n    }\n\n    fetchPopHist();\n  }, [props, EXEC_KEY]);\n\n  const NUM_COLORS = 7;\n  const colors = ['red', 'green', 'blue', 'black', 'purple', 'magenta', 'orange'];\n  let thisColor = 0;\n  if (loadingData) {\n    const data = [];\n    const env = popHist;\n    // populate 'data' array with groups from 'pops'\n    // and their respective values\n    Object.keys(env).forEach((group, iGroup) => {\n      data.push({\n        name: group,\n        color: colors[thisColor % NUM_COLORS],\n        //color: envFile.members[group]\n          //? envFile.members[group].attrs.color : colors[thisColor % NUM_COLORS],\n        data: {},\n      });\n      // modify individual 'data' dictionary of each pops\n      // group by copying over value\n      Object.keys(env[group]).forEach((member, iMember) => {\n        data[iGroup].data[member] = env[group][iMember];\n      });\n      thisColor += 1;\n    });\n    return (\n      <CardWrapper title=\"Population Graph\">\n        <LineChart data={data} width=\"600px\" height=\"600px\" />\n      </CardWrapper>\n    );\n  }\n  return null;\n}\n\nPopulationGraph.propTypes = {\n  loadingData: PropType.bool,\n  EXEC_KEY: PropType.number\n};\n\nPopulationGraph.defaultProps = {\n  loadingData: true,\n  EXEC_KEY: 0\n};\n\nexport default PopulationGraph;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { ScatterChart } from 'react-chartkick';\nimport 'chart.js';\nimport PropTypes from 'prop-types';\nimport CardWrapper from './CardWrapper';\n\nfunction ScatterPlot(props) {\n  const { loadingData, envFile, id } = props;\n  const pointStyles = [\n    'circle',\n    'cross',\n    'crossRot',\n    'dash',\n    'line',\n    'rect',\n    'rectRounded',\n    'rectRot',\n    'star',\n    'triangle',\n  ];\n  const markerMap = {\n    tree: 'triangle',\n    square: 'rect',\n    person: 'circle',\n    deceased: 'circle',\n    circle: 'circle',\n    default: 'circle',\n  };\n  if (loadingData) {\n    const env = envFile.env.members;\n    const data = [];\n    const dataset = {\n      pointStyle: 'circle',\n    };\n    Object.keys(env).forEach((group, iGroup) => {\n      data.push({\n        name: env[group].name,\n        color: env[group].color,\n        data: [],\n      });\n      const markerProp = env[group].attrs.marker;\n      dataset.pointStyle = markerProp in markerMap ? markerMap[env[group].attrs.marker] : 'circle';\n      Object.keys(env[group].members).forEach((member) => {\n        if (env[group].members[member].pos !== null) {\n          data[iGroup].data.push(\n            env[group].members[member].pos,\n          );\n        }\n      });\n    });\n    return (\n      <CardWrapper title=\"Scatter Plot\">\n        <ScatterChart dataset={dataset} data={data} width=\"600px\" height=\"600px\" />\n      </CardWrapper>\n    );\n  }\n  return null;\n}\n\nScatterPlot.propTypes = {\n  loadingData: PropTypes.bool,\n  envFile: PropTypes.shape(),\n  id: PropTypes.number,\n};\n\nScatterPlot.defaultProps = {\n  loadingData: true,\n  envFile: {},\n  id: 0,\n};\n\nexport default ScatterPlot;\n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\n\nexport default class ModelStatusBox extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n    const { msg, title } = this.props;\n    this.state = {\n      msg,\n      title,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.msg !== prevState.msg) {\n      return { msg: nextProps.msg };\n    }\n    return null;\n  }\n\n  render() {\n    const { msg, title } = this.state;\n    return (\n      <div>\n        <div className=\"card w-50 model-status\">\n          <h5\n            style={{ textAlign: 'center', fontSize: 16 }}\n            className=\"card-header bg-primary text-white\"\n          >\n            { title }\n          </h5>\n          <div className=\"card-body overflow-auto\">\n            <pre className=\"card-text\">\n              { msg }\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModelStatusBox.propTypes = {\n  msg: PropTypes.string,\n  title: PropTypes.string,\n};\n\nModelStatusBox.defaultProps = {\n  msg: '',\n  title: '',\n};\n","import React from 'react';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\n\nexport default class RunModelButton extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n\n    this.state = {\n      disabledButton: props.disabledButton,\n      errorMessage: props.errorMessage,\n      sendNumPeriods: props.sendNumPeriods,\n      handleRunPeriod: props.handleRunPeriod,\n    };\n  }\n\n  render() {\n    const {\n      disabledButton, sendNumPeriods, handleRunPeriod, errorMessage,\n    } = this.state;\n    return (\n      <div>\n        <button\n          type=\"button\"\n          disabled={disabledButton}\n          onClick={!disabledButton ? sendNumPeriods : null}\n          className=\"btn btn-success m-2\"\n        >\n          {'  '}\n          Run\n          {'  '}\n        </button>\n        {' '}\n        <span>model for</span>\n        {' '}\n        <input\n          type=\"INT\"\n          className=\"from-control m-2 number-input\"\n          style={{ width: '40px' }}\n          placeholder=\"10\"\n          onChange={handleRunPeriod}\n        />\n        {' '}\n        periods.\n        <span className=\"error-message\">\n          {errorMessage}\n        </span>\n      </div>\n    );\n  }\n}\n\nRunModelButton.propTypes = {\n  disabledButton: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  sendNumPeriods: PropTypes.func,\n  handleRunPeriod: PropTypes.func,\n};\n\nRunModelButton.defaultProps = {\n  disabledButton: true,\n  errorMessage: '',\n  sendNumPeriods() {},\n  handleRunPeriod() {},\n};\n","import React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport axios from 'axios';\nimport autoBind from 'react-autobind';\nimport PropTypes from 'prop-types';\nimport PageLoader from './PageLoader';\nimport PopulationGraph from './PopulationGraph';\nimport ScatterPlot from './ScatterPlot';\nimport ModelStatusBox from './ModelStatusBox';\nimport RunModelButton from './RunModelButton';\nimport ErrorCatching from './ErrorCatching';\nimport './styles.css';\nimport config from 'IndraReactCommon/config';\n\n\nconst POP = 2;\nconst SCATTER = 3;\nconst MENU_URL = config.MENU_URL;\nconst CLEAR_REGISTRY_URL = config.CLEAR_REGISTRY_URL;\nconst USER_MSGS_URL = config.USER_MSGS_URL;\n\nclass ActionMenu extends Component {\n  constructor(props) {\n    super(props);\n    const { location } = this.props;\n    const { state } = location;\n    const { envFile } = state;\n    this.state = {\n      menu: {},\n      loadingData: true,\n      envFile: {},\n      source: '',\n      periodNum: 10,\n      errorMessage: '',\n      disabledButton: false,\n      loadingPopulation: false,\n      loadingScatter: false,\n      activeDisplay: null,\n      continuousRun: true,\n      continuousRunDisabled: false,\n      initLoading: true,\n      EXEC_KEY: envFile.exec_key,\n      serverError: false,\n    };\n    autoBind(this);\n  }\n\n  async componentDidMount() {\n    const { location } = this.props;\n    const { state } = location;\n    const {\n      envFile, name, source, graph,\n    } = state;\n    try {\n      document.title = 'Indra | Menu';\n      // you need to pass the execution key that you get from put_props\n      // which is in ModelDetail, the current execution key is undefined\n      const m = await axios.get(`${MENU_URL}`);\n      // debugger;\n      this.setState({\n        menu: m.data,\n        name,\n        source,\n        envFile,\n        graph,\n        // msg: envFile.user.user_msgs,\n        loadingData: false,\n      });\n    } catch (error) {\n      this.setState({\n        serverError: true,\n      });\n      return false;\n    }\n    const defaultGraph = graph;\n    if (defaultGraph === 'scatter') {\n      this.setState({\n        loadingScatter: true,\n        activeDisplay: SCATTER,\n      });\n    } else {\n      this.setState({\n        loadingPopulation: true,\n        activeDisplay: POP,\n      });\n    }\n    try {\n      const code = await this.viewSource();\n      this.setState({\n        sourceCode: code,\n      });\n    } catch (error) {\n      return false;\n    }\n    return true;\n  }\n\n  async componentWillUnmount() {\n    // clear the registry in the backend.\n    const { EXEC_KEY } = this.state;\n    await axios.delete(\n      `${CLEAR_REGISTRY_URL}${EXEC_KEY}`,\n    );\n    // not doing anything with the response.\n    // allow the frontend to continue functioning.\n    // there should be a error reporting mechanism here to notify\n    // admins that a particular key was not cleared.\n  }\n\n\n  viewSource = async () => {\n    try {\n      const { source } = this.state;\n      const splitSource = source.split('/');\n      const filename = splitSource[splitSource.length - 1];\n      const res = await axios.get(\n        `https://raw.githubusercontent.com/gcallah/indras_net/master/models/${filename}`,\n      );\n      return res.data;\n    } catch (error) {\n      // this.setState({\n      //   serverError: true,\n      // });\n      return 'Something has gone wrong.';\n    }\n  };\n\n  handleRunPeriod = (e) => {\n    this.setState({\n      periodNum: e.target.value,\n    });\n\n    const valid = this.checkValidity(e.target.value);\n    if (valid === 0) {\n      this.setState({\n        errorMessage: '**Please input an integer',\n        disabledButton: true,\n      });\n    } else {\n      this.setState({\n        errorMessage: '',\n        disabledButton: false,\n      });\n    }\n  };\n\n  checkValidity = (data) => {\n    if (data % 1 === 0) {\n      return 1;\n    }\n    return 0;\n  };\n\n  handleClick = (e) => {\n    this.setState({\n      loadingData: false,\n      loadingSourceCode: false,\n      loadingDebugger: false,\n      loadingScatter: false,\n      loadingPopulation: false,\n      loadingLogs: false,\n      loadingBar: false,\n    });\n    this.setState({\n      activeDisplay: e,\n    });\n    switch (e) {\n      case POP:\n        this.setState({ loadingPopulation: true });\n        break;\n      case SCATTER:\n        this.setState({ loadingScatter: true });\n        break;\n      default:\n        break;\n    }\n  };\n\n  sendNumPeriods = async () => {\n    const { periodNum, envFile, EXEC_KEY } = this.state;\n    const envFileWithExecutionKey = { ...envFile, execution_key: EXEC_KEY };\n    this.setState({ loadingData: true });\n    try {\n      const res = await axios.put(\n        `${config.API_URL}models/run/${String(periodNum)}`,\n        envFileWithExecutionKey,\n        periodNum,\n      );\n      const msgData = await axios.get(`${USER_MSGS_URL}${EXEC_KEY}`);\n      this.setState({\n        envFile: res.data,\n        loadingData: false,\n        msg: msgData.data,\n      });\n      // return true;\n    } catch (e) {\n      // return false;\n      this.setState({\n        serverError: true,\n      });\n    }\n  };\n\n  timeout = (m) => new Promise((r) => setTimeout(r, m))\n\n  continuousRun = async () => {\n    this.setState(\n      {\n        continuousRun: true,\n        continuousRunDisabled: true,\n        periodNum: 1,\n        initLoading: false,\n      },\n    );\n    await this.timeout(200);\n    /* eslint-disable */\n    while (this.state.continuousRun) {\n      // this.setState({periodNum: 1});\n      this.sendNumPeriods();\n      /* eslint-disable */\n      while (this.state.loadingData){\n        await this.timeout(200);\n      /* eslint-disable */\n        console.log('still waiting for data...')\n      }\n      /* eslint-disable */\n      console.log('data arrived!!')\n    }\n  }\n\n  stopRun = () => {\n    this.setState(\n      {\n        continuousRun: false,\n        continuousRunDisabled: false,\n      },\n    );\n  }\n\n  renderHeader = () => {\n    const { name } = this.state;\n    return <h1 className=\"header\">{name}</h1>;\n  };\n\n  MenuItem = (id, action, text) => {\n    /**\n     * All models will have all the menu items appear on the page.\n     * However, we keep one of the graphs (Population graph or Scatter plot)\n     * disabled based on \"graph\" field from models.json\n     */\n    const { graph, EXEC_KEY, activeDisplay} = this.state;\n    const defaultGraph = graph;\n    const { history } = this.props;\n    return (\n      <ListGroup.Item\n        className=\"w-50 p-3 list-group-item list-group-item-action\"\n        as=\"li\"\n        active={activeDisplay === action}\n        disabled={\n          (action === SCATTER && defaultGraph === 'line')\n          || (action === POP && defaultGraph === 'scatter')\n        }\n        key={id}\n        onClick={() => {\n          this.handleClick(action);\n          console.log(id);\n          if (id === '4') {\n            history.push(`/models/debug/${EXEC_KEY.toString(10)}`);\n          }\n        }}\n      >\n        {text}\n      </ListGroup.Item>\n    );\n  };\n\n  renderMenuItem = () => {\n    const {\n      envFile,\n      loadingPopulation,\n      loadingScatter,\n      EXEC_KEY\n    } = this.state;\n    return (\n      <div className=\"mt-5\">\n        <PopulationGraph loadingData={loadingPopulation} EXEC_KEY={EXEC_KEY} />\n        <ScatterPlot loadingData={loadingScatter} envFile={envFile} />\n      </div>\n    );\n  };\n\n  renderMapItem = () => {\n    const { menu } = this.state;\n    return (\n      <div className=\"row margin-bottom-80\">\n        <div className=\"col w-25\">\n          <ListGroup>\n            {Object.keys(menu).map((id) => (\n            parseInt(id) > 1\n              ? this.MenuItem(\n                id,\n                parseInt(id),\n                menu[id].question\n              )\n              : null))}\n          </ListGroup>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      loadingData, msg, disabledButton, errorMessage, initLoading, continuousRunDisabled, serverError,\n    } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    if (loadingData && initLoading) {\n      return <PageLoader />;\n    }\n    // if (loadingData && !initLoading){\n    //   return;\n    // }\n   \n    return (\n      <div>\n        {this.renderHeader()}\n        <div>\n          <ModelStatusBox\n            title=\"Model Status\"\n            msg={msg}\n            ref={this.modelStatusBoxElement}\n          />\n        </div>\n        <ul className=\"list-group\">\n          <div className=\"row\">\n            <div>\n              <RunModelButton\n                disabledButton={disabledButton}\n                errorMessage={errorMessage}\n                sendNumPeriods={this.sendNumPeriods}\n                handleRunPeriod={this.handleRunPeriod}\n              />\n              {/* eslint-disable */}\n              <button\n                onClick={this.continuousRun}\n                disabled={continuousRunDisabled}\n                className=\"btn btn-success m-2\"\n              >\n                Continuous Run\n              </button>\n              {/* eslint-disable */}\n              <button\n                onClick={this.stopRun}\n                className=\"btn btn-danger m-2\"\n              >\n                Stop\n              </button>\n              <h3 className=\"margin-top-50 mb-4\">Model Analysis:</h3>\n            </div>\n          </div>\n          {this.renderMapItem()}\n        </ul>\n        {this.renderMenuItem()}\n      </div>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      envFile: PropTypes.object,\n      name: PropTypes.string,\n      source: PropTypes.string,\n      graph: PropTypes.string,\n    }),\n  }),\n  /* eslint-disable */\n  history: PropTypes.object,\n};\n\nActionMenu.defaultProps = {\n  location: {\n    state: {\n      envFile: {},\n    },\n  },\n  history: {},\n};\n\nexport default ActionMenu;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nimport './NotFoundPage.css';\n\nconst Status = ({ code, children }) => (\n  <Route\n    render={({ staticContext }) => {\n      if (staticContext) staticContext.status = code;\n      return children;\n    }}\n  />\n);\n\nconst NotFoundPage = () => (\n  <Status code={404}>\n    <div className=\"NotFoundPage\">\n      <h1>Oops!</h1>\n      <div>Page not found.</div>\n      <div className=\"action\">\n        <a className=\"btn btn-primary\" href=\"/\">\n          Guide me to the right path!\n        </a>\n      </div>\n    </div>\n  </Status>\n);\n\nStatus.propTypes = {\n  code: PropTypes.number,\n  children: PropTypes.shape(),\n};\n\nStatus.defaultProps = {\n  code: 0,\n  children: {},\n};\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport config from 'IndraReactCommon/config';\nimport axios from 'axios';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport PropTypes from 'prop-types';\nimport ErrorCatching from './ErrorCatching';\n\n\nclass DebugMenu extends Component { // from react\n\n  constructor(props){\n    super(props);\n    const {location} = this.props;\n    this.debug_url = config.DEBUG_URL;\n    this.state = {\n      menu: {},\n      EXEC_KEY: location.pathname.substr(13),\n      activeDisplay: '',\n      serverError: false,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const menu = await axios.get(`${this.debug_url}`);\n      this.setState({\n        menu: menu.data\n      })\n    } catch (e) {\n      this.setState({\n        serverError: true,\n      });\n      console.log(e);\n    }\n  }\n\n  handleClick = (id) => {\n    this.setState({\n      activeDisplay: id,\n    });\n  };\n  \n  MenuItem = (text, url, id) => {\n    const { activeDisplay } = this.state;\n    return (\n      <OverlayTrigger\n        key={id}\n        placement=\"right\"\n        overlay={<Tooltip>{\"This feature is under development.\"}</Tooltip>}\n      >\n        <ListGroup.Item\n        className=\"w-50 p-3 list-group-item list-group-item-action\"\n        as=\"li\"\n        key={id}\n        active = {activeDisplay === id}\n        onClick={() => {\n          this.handleClick(id);\n        }}\n      >\n        {text}\n      </ListGroup.Item>\n      </OverlayTrigger>\n      \n    );\n  };\n\n  renderMenuItem = () => {\n    const { menu } = this.state;\n    return (\n      <div className=\"row margin-bottom-80\">\n        <div className=\"col w-25\">\n          <ListGroup>\n            {Object.keys(menu).map((id) => (\n              this.MenuItem(\n              menu[id].question,\n              menu[id].url,\n              id\n              )\n            ))}\n          </ListGroup>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { serverError } = this.state;\n    if (serverError) {\n      return <ErrorCatching />;\n    }\n    return (\n      <div>\n        <h1 className=\"header\">Debug menu</h1>\n        <div>\n        </div>\n        <ul className=\"list-group\">\n          <div className=\"row\">\n          </div>\n        </ul>\n        {this.renderMenuItem()}\n      </div>\n      \n    );\n  }\n}\n\nDebugMenu.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n};\n\nDebugMenu.defaultProps = {\n  location: {\n    pathname: '',\n  },\n};\n\nexport default DebugMenu;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport styled, { withTheme } from 'styled-components';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport WIP from './components/WIP';\nimport ModelDetail from './components/ModelDetail';\nimport ActionMenu from './components/ActionMenu';\nimport NotFoundPage from './components/NotFoundPage';\nimport ErrorCatching from './components/ErrorCatching';\nimport DebugMenu from './components/DebugMenu';\n\n// The styling below should be in a style sheet, not in javascript:\nconst Wrapper = styled('div')`\n  background: ${(props) => props.theme.background};\n  width: 100vw;\n  min-height: 100vh;\n  font-family: -apple-stem, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\";\n  h1 {\n    color: ${(props) => props.theme.body};\n  }\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <HashRouter>\n        <Layout>\n          <IndraRoutes />\n        </Layout>\n      </HashRouter>\n    </Wrapper>\n  );\n}\n\nexport function IndraRoutes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/wip\" component={WIP} />\n      <Route exact path=\"/models/props/:id\" component={ModelDetail} />\n      <Route exact path=\"/models/menu/:id\" component={ActionMenu} />\n      <Route exact path=\"/models/debug/:exec_key\" component={DebugMenu} />\n      <Route exact path=\"/errorCatching\" component={ErrorCatching} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n}\n\nexport default withTheme(App);\n","import theme from 'styled-theming';\n\nexport const backgroundColor = theme('mode', {\n  light: '#fafafa',\n  dark: '#222',\n});\n\nexport const textColor = theme('mode', {\n  light: '#000',\n  dark: '#fff',\n});\n\nexport const buttonBackgroundColor = theme('mode', {\n  light: '#222',\n  dark: '#eee',\n});\n\nexport const buttonTextColor = theme('mode', {\n  light: '#eee',\n  dark: '#222',\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable arrow-parens */\n/* eslint-disable arrow-body-style */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { Switch as Switch2 } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { backgroundColor, textColor } from './theme';\n\n\nconst ThemeToggleContext = React.createContext();\n\nexport const useTheme = () => React.useContext(ThemeToggleContext);\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#060606',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#060606',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch2\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport const MyThemeProvider = ({ children }) => {\n  const [themeState, setThemeState] = React.useState({\n    mode: 'light',\n    checkedB: true,\n\n  });\n\n  const Wrapper = styled.div`\n    background-color: ${backgroundColor};\n    color: ${textColor};\n  `;\n\n  const toggle = name => event => {\n    const mode = (themeState.mode === 'light' ? 'dark' : 'light');\n    setThemeState({ mode, [name]: event.target.checked });\n  };\n\n  return (\n    <ThemeToggleContext.Provider value={{ toggle }}>\n      <ThemeProvider\n        theme={{\n          mode: themeState.mode,\n        }}\n      >\n        <Wrapper>\n          <IOSSwitch\n            checked={themeState.checkedB}\n            onChange={toggle('checkedB')}\n            value=\"checkedB\"\n          />\n          {children}\n        </Wrapper>\n      </ThemeProvider>\n    </ThemeToggleContext.Provider>\n  );\n};\n\nexport default MyThemeProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MyThemeProvider } from './darkTheme/ThemeContext';\n\nReactDOM.render(\n  <MyThemeProvider>\n    <App />\n  </MyThemeProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}